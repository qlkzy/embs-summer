###################################################################
##
## Name     : embs_vga
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN embs_vga

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = MIXED
OPTION STYLE = MIX
OPTION RUN_NGCBUILD = TRUE
OPTION IP_GROUP = MICROBLAZE:PPC:EMBS
OPTION DESC = VGA Core
OPTION LONG_DESC = VGA core for EMBS
OPTION ARCH_SUPPORT_MAP = (spartan3e=PRODUCTION)


## Bus Interfaces
BUS_INTERFACE BUS = MPLB, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE
BUS_INTERFACE BUS = SPLB, BUS_STD = PLBV46, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x200, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = MPLB:SPLB
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = MPLB:SPLB
PARAMETER C_SPLB_AWIDTH = 32, DT = INTEGER, BUS = SPLB, ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_DWIDTH = 128, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_NUM_MASTERS = 8, DT = INTEGER, BUS = SPLB, RANGE = (1:16)
PARAMETER C_SPLB_MID_WIDTH = 3, DT = INTEGER, BUS = SPLB, RANGE = (1:4)
PARAMETER C_SPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128), ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_P2P = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1)
PARAMETER C_SPLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = SPLB, RANGE = (0, 1), ASSIGNMENT = CONSTANT
PARAMETER C_SPLB_SMALLEST_MASTER = 32, DT = INTEGER, BUS = SPLB, RANGE = (32, 64, 128)
PARAMETER C_SPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = SPLB
PARAMETER C_INCLUDE_DPHASE_TIMER = 1, DT = INTEGER, RANGE = (0, 1)
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_MPLB_AWIDTH = 32, DT = INTEGER, BUS = MPLB, ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_DWIDTH = 128, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128)
PARAMETER C_MPLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128), ASSIGNMENT = CONSTANT
PARAMETER C_MPLB_P2P = 0, DT = INTEGER, BUS = MPLB, RANGE = (0, 1)
PARAMETER C_MPLB_SMALLEST_SLAVE = 32, DT = INTEGER, BUS = MPLB, RANGE = (32, 64, 128)
PARAMETER C_MPLB_CLK_PERIOD_PS = 10000, DT = INTEGER, BUS = MPLB

PARAMETER RESOLUTION  = 1, DT = integer, RANGE = (0:2), DESC = Screen resolution, PERMIT = BASE_USER, VALUES = (0=640x480, 1=800x600, 2=1024x768)
PARAMETER PIXEL_WIDTH = 1, DT = integer, RANGE = (1:2), DESC = Pixel width in memory, PERMIT = BASE_USER, VALUES = (1=8-bit, 2=4-bit)
PARAMETER CHIPSCOPE   = 0, DT = integer, RANGE = (0:1), DESC = Include ChipScope debug ports, PERMIT = BASE_USER, VALUES = (0=FALSE, 1=TRUE)

## Ports
PORT SPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = SPLB
PORT SPLB_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = SPLB
PORT PLB_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = SPLB
PORT PLB_PAValid = PLB_PAValid, DIR = I, BUS = SPLB
PORT PLB_SAValid = PLB_SAValid, DIR = I, BUS = SPLB
PORT PLB_rdPrim = PLB_rdPrim, DIR = I, BUS = SPLB
PORT PLB_wrPrim = PLB_wrPrim, DIR = I, BUS = SPLB
PORT PLB_masterID = PLB_masterID, DIR = I, VEC = [0:(C_SPLB_MID_WIDTH-1)], BUS = SPLB
PORT PLB_abort = PLB_abort, DIR = I, BUS = SPLB
PORT PLB_busLock = PLB_busLock, DIR = I, BUS = SPLB
PORT PLB_RNW = PLB_RNW, DIR = I, BUS = SPLB
PORT PLB_BE = PLB_BE, DIR = I, VEC = [0:((C_SPLB_DWIDTH/8)-1)], BUS = SPLB
PORT PLB_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_size = PLB_size, DIR = I, VEC = [0:3], BUS = SPLB
PORT PLB_type = PLB_type, DIR = I, VEC = [0:2], BUS = SPLB
PORT PLB_lockErr = PLB_lockErr, DIR = I, BUS = SPLB
PORT PLB_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT PLB_wrBurst = PLB_wrBurst, DIR = I, BUS = SPLB
PORT PLB_rdBurst = PLB_rdBurst, DIR = I, BUS = SPLB
PORT PLB_wrPendReq = PLB_wrPendReq, DIR = I, BUS = SPLB
PORT PLB_rdPendReq = PLB_rdPendReq, DIR = I, BUS = SPLB
PORT PLB_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = SPLB
PORT PLB_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = SPLB
PORT Sl_addrAck = Sl_addrAck, DIR = O, BUS = SPLB
PORT Sl_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = SPLB
PORT Sl_wait = Sl_wait, DIR = O, BUS = SPLB
PORT Sl_rearbitrate = Sl_rearbitrate, DIR = O, BUS = SPLB
PORT Sl_wrDAck = Sl_wrDAck, DIR = O, BUS = SPLB
PORT Sl_wrComp = Sl_wrComp, DIR = O, BUS = SPLB
PORT Sl_wrBTerm = Sl_wrBTerm, DIR = O, BUS = SPLB
PORT Sl_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_SPLB_DWIDTH-1)], BUS = SPLB
PORT Sl_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = SPLB
PORT Sl_rdDAck = Sl_rdDAck, DIR = O, BUS = SPLB
PORT Sl_rdComp = Sl_rdComp, DIR = O, BUS = SPLB
PORT Sl_rdBTerm = Sl_rdBTerm, DIR = O, BUS = SPLB
PORT Sl_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT Sl_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_SPLB_NUM_MASTERS-1)], BUS = SPLB
PORT MPLB_Clk = "", DIR = I, SIGIS = CLK, BUS = MPLB
PORT MPLB_Rst = MPLB_Rst, DIR = I, SIGIS = RST, BUS = MPLB
PORT M_request = M_request, DIR = O, BUS = MPLB
PORT M_priority = M_priority, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_busLock = M_busLock, DIR = O, BUS = MPLB
PORT M_RNW = M_RNW, DIR = O, BUS = MPLB
PORT M_BE = M_BE, DIR = O, VEC = [0:((C_MPLB_DWIDTH/8)-1)], BUS = MPLB
PORT M_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MPLB
PORT M_size = M_size, DIR = O, VEC = [0:3], BUS = MPLB
PORT M_type = M_type, DIR = O, VEC = [0:2], BUS = MPLB
PORT M_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MPLB
PORT M_lockErr = M_lockErr, DIR = O, BUS = MPLB
PORT M_abort = M_abort, DIR = O, BUS = MPLB
PORT M_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = MPLB
PORT M_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT M_wrBurst = M_wrBurst, DIR = O, BUS = MPLB
PORT M_rdBurst = M_rdBurst, DIR = O, BUS = MPLB
PORT PLB_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MPLB
PORT PLB_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MPLB
PORT PLB_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MPLB
PORT PLB_MTimeout = PLB_MTimeout, DIR = I, BUS = MPLB
PORT PLB_MBusy = PLB_MBusy, DIR = I, BUS = MPLB
PORT PLB_MRdErr = PLB_MRdErr, DIR = I, BUS = MPLB
PORT PLB_MWrErr = PLB_MWrErr, DIR = I, BUS = MPLB
PORT PLB_MIRQ = PLB_MIRQ, DIR = I, BUS = MPLB
PORT PLB_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MPLB_DWIDTH-1)], BUS = MPLB
PORT PLB_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MPLB
PORT PLB_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MPLB
PORT PLB_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MPLB
PORT PLB_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MPLB
PORT PLB_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MPLB


PORT Red                 = "", DIR = O, ASSIGNMENT = REQUIRE
PORT Green               = "", DIR = O, ASSIGNMENT = REQUIRE
PORT Blue                = "", DIR = O, ASSIGNMENT = REQUIRE
PORT HSync               = "", DIR = O, ASSIGNMENT = REQUIRE
PORT VSync               = "", DIR = O, ASSIGNMENT = REQUIRE
PORT Pixel_Clk           = "", DIR = I, ASSIGNMENT = REQUIRE, SIGIS = CLK

PORT CS_xCount           = "", DIR = O, VEC = [10:0], ISVALID = (CHIPSCOPE == 1)
PORT CS_yCount           = "", DIR = O, VEC = [9:0],  ISVALID = (CHIPSCOPE == 1)
PORT CS_signalEn         = "", DIR = O,               ISVALID = (CHIPSCOPE == 1)
PORT CS_memReadState     = "", DIR = O, VEC = [4:0],  ISVALID = (CHIPSCOPE == 1)
PORT CS_startRead        = "", DIR = O,               ISVALID = (CHIPSCOPE == 1)
PORT CS_memReadCount     = "", DIR = O, VEC = [0:19], ISVALID = (CHIPSCOPE == 1)
PORT CS_fifoWrite        = "", DIR = O,               ISVALID = (CHIPSCOPE == 1)
PORT CS_fifoRead         = "", DIR = O,               ISVALID = (CHIPSCOPE == 1)
PORT CS_fifoIn           = "", DIR = O, VEC = [11:0], ISVALID = (CHIPSCOPE == 1)
PORT CS_fifoCountW       = "", DIR = O, VEC = [8:0],  ISVALID = (CHIPSCOPE == 1)
PORT CS_fifoCountR       = "", DIR = O, VEC = [10:0], ISVALID = (CHIPSCOPE == 1)

END
