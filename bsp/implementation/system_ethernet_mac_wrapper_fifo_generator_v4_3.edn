(edif test (edifVersion 2 0 0) (edifLevel 0) (keywordMap (keywordLevel 0))
(status (written (timeStamp 2014 5 13 11 56 18)
   (author "Xilinx, Inc.")
   (program "Xilinx CORE Generator" (version "Xilinx CORE Generator 6.1i"))))
   (comment "                                                                                
      (c) Copyright 1995 - 2010 Xilinx, Inc. All rights reserved.               
                                                                                
      This file contains confidential and proprietary information               
      of Xilinx, Inc. and is protected under U.S. and                           
      international copyright and other intellectual property                   
      laws.                                                                     
                                                                                
      DISCLAIMER                                                                
      This disclaimer is not a license and does not grant any                   
      rights to the materials distributed herewith. Except as                   
      otherwise provided in a valid license issued to you by                    
      Xilinx, and to the maximum extent permitted by applicable                 
      law: (1) THESE MATERIALS ARE MADE AVAILABLE 'AS IS' AND                   
      WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES               
      AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING                 
      BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-                    
      INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and                  
      (2) Xilinx shall not be liable (whether in contract or tort,              
      including negligence, or under any other theory of                        
      liability) for any loss or damage of any kind or nature                   
      related to, arising under or in connection with these                     
      materials, including for any direct, or any indirect,                     
      special, incidental, or consequential loss or damage                      
      (including loss of data, profits, goodwill, or any type of                
      loss or damage suffered as a result of any action brought                 
      by a third party) even if such damage or loss was                         
      reasonably foreseeable or Xilinx had been advised of the                  
      possibility of the same.                                                  
                                                                                
      CRITICAL APPLICATIONS                                                     
      Xilinx products are not designed or intended to be fail-                  
      safe, or for use in any application requiring fail-safe                   
      performance, such as life-support or safety devices or                    
      systems, Class III medical devices, nuclear facilities,                   
      applications related to the deployment of airbags, or any                 
      other applications that could lead to death, personal                     
      injury, or severe property or environmental damage                        
      (individually and collectively, 'Critical                                 
      Applications'). Customer assumes the sole risk and                        
      liability of any use of Xilinx products in Critical                       
      Applications, subject only to applicable laws and                         
      regulations governing limitations on product liability.                   
                                                                                
      THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS                  
      PART OF THIS FILE AT ALL TIMES.                                           
                                                                                
   ")
   (comment "Core parameters: ")
       (comment "c_has_int_clk = 0 ")
       (comment "c_rd_freq = 1 ")
       (comment "c_wr_response_latency = 1 ")
       (comment "c_has_srst = 0 ")
       (comment "c_has_rd_data_count = 0 ")
       (comment "c_din_width = 6 ")
       (comment "c_has_wr_data_count = 0 ")
       (comment "c_full_flags_rst_val = 0 ")
       (comment "InstanceName = system_ethernet_mac_wrapper_fifo_generator_v4_3 ")
       (comment "c_implementation_type = 2 ")
       (comment "c_family = spartan3 ")
       (comment "c_use_embedded_reg = 0 ")
       (comment "c_has_wr_rst = 0 ")
       (comment "c_wr_freq = 1 ")
       (comment "c_use_dout_rst = 1 ")
       (comment "c_underflow_low = 0 ")
       (comment "c_has_meminit_file = 0 ")
       (comment "c_has_overflow = 0 ")
       (comment "c_preload_latency = 1 ")
       (comment "c_dout_width = 6 ")
       (comment "c_msgon_val = 1 ")
       (comment "c_rd_depth = 16 ")
       (comment "c_default_value = BlankString ")
       (comment "c_mif_file_name = BlankString ")
       (comment "c_has_underflow = 0 ")
       (comment "c_has_rd_rst = 0 ")
       (comment "c_has_almost_full = 0 ")
       (comment "c_has_rst = 1 ")
       (comment "c_data_count_width = 2 ")
       (comment "c_has_wr_ack = 0 ")
       (comment "c_use_ecc = 0 ")
       (comment "c_wr_ack_low = 0 ")
       (comment "c_common_clock = 0 ")
       (comment "c_rd_pntr_width = 4 ")
       (comment "c_use_fwft_data_count = 0 ")
       (comment "c_has_almost_empty = 0 ")
       (comment "c_rd_data_count_width = 2 ")
       (comment "c_enable_rlocs = 0 ")
       (comment "c_wr_pntr_width = 4 ")
       (comment "c_overflow_low = 0 ")
       (comment "c_prog_empty_type = 0 ")
       (comment "c_optimization_mode = 0 ")
       (comment "c_wr_data_count_width = 2 ")
       (comment "c_preload_regs = 0 ")
       (comment "c_dout_rst_val = 0 ")
       (comment "c_has_data_count = 0 ")
       (comment "c_prog_full_thresh_negate_val = 12 ")
       (comment "c_wr_depth = 16 ")
       (comment "c_prog_empty_thresh_negate_val = 3 ")
       (comment "c_prog_empty_thresh_assert_val = 2 ")
       (comment "c_has_valid = 1 ")
       (comment "c_init_wr_pntr_val = 0 ")
       (comment "c_prog_full_thresh_assert_val = 13 ")
       (comment "c_use_fifo16_flags = 0 ")
       (comment "c_has_backup = 0 ")
       (comment "c_valid_low = 0 ")
       (comment "c_prim_fifo_type = 512x36 ")
       (comment "c_count_type = 0 ")
       (comment "c_prog_full_type = 0 ")
       (comment "c_memory_type = 2 ")
   (external xilinxun (edifLevel 0)
      (technology (numberDefinition))
       (cell VCC (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port P (direction OUTPUT))
               )
           )
       )
       (cell GND (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port G (direction OUTPUT))
               )
           )
       )
   )
   (external system_ethernet_mac_wrapper_fifo_generator_v4_3_fifo_generator_v4_3_xst_1_lib (edifLevel 0)
       (technology (numberDefinition))
       (cell system_ethernet_mac_wrapper_fifo_generator_v4_3_fifo_generator_v4_3_xst_1 (cellType GENERIC)
           (view view_1 (viewType NETLIST)
               (interface
                   (port clk (direction INPUT))
                   (port backup (direction INPUT))
                   (port backup_marker (direction INPUT))
                   (port ( array ( rename din "din<5:0>") 6 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh "prog_empty_thresh<3:0>") 4 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh_assert "prog_empty_thresh_assert<3:0>") 4 ) (direction INPUT))
                   (port ( array ( rename prog_empty_thresh_negate "prog_empty_thresh_negate<3:0>") 4 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh "prog_full_thresh<3:0>") 4 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh_assert "prog_full_thresh_assert<3:0>") 4 ) (direction INPUT))
                   (port ( array ( rename prog_full_thresh_negate "prog_full_thresh_negate<3:0>") 4 ) (direction INPUT))
                   (port rd_clk (direction INPUT))
                   (port rd_en (direction INPUT))
                   (port rd_rst (direction INPUT))
                   (port rst (direction INPUT))
                   (port srst (direction INPUT))
                   (port int_clk (direction INPUT))
                   (port wr_clk (direction INPUT))
                   (port wr_en (direction INPUT))
                   (port wr_rst (direction INPUT))
                   (port almost_empty (direction OUTPUT))
                   (port almost_full (direction OUTPUT))
                   (port ( array ( rename data_count "data_count<1:0>") 2 ) (direction OUTPUT))
                   (port ( array ( rename dout "dout<5:0>") 6 ) (direction OUTPUT))
                   (port empty (direction OUTPUT))
                   (port full (direction OUTPUT))
                   (port overflow (direction OUTPUT))
                   (port prog_empty (direction OUTPUT))
                   (port prog_full (direction OUTPUT))
                   (port valid (direction OUTPUT))
                   (port ( array ( rename rd_data_count "rd_data_count<1:0>") 2 ) (direction OUTPUT))
                   (port underflow (direction OUTPUT))
                   (port wr_ack (direction OUTPUT))
                   (port ( array ( rename wr_data_count "wr_data_count<1:0>") 2 ) (direction OUTPUT))
                   (port sbiterr (direction OUTPUT))
                   (port dbiterr (direction OUTPUT))
               )
           )
       )
   )
(library test_lib (edifLevel 0) (technology (numberDefinition (scale 1 (E 1 -12) (unit Time))))
(cell system_ethernet_mac_wrapper_fifo_generator_v4_3
 (cellType GENERIC) (view view_1 (viewType NETLIST)
  (interface
   (port ( rename clk "clk") (direction INPUT))
   (port ( rename int_clk "int_clk") (direction INPUT))
   (port ( rename backup "backup") (direction INPUT))
   (port ( rename backup_marker "backup_marker") (direction INPUT))
   (port ( rename din_5_ "din<5>") (direction INPUT))
   (port ( rename din_4_ "din<4>") (direction INPUT))
   (port ( rename din_3_ "din<3>") (direction INPUT))
   (port ( rename din_2_ "din<2>") (direction INPUT))
   (port ( rename din_1_ "din<1>") (direction INPUT))
   (port ( rename din_0_ "din<0>") (direction INPUT))
   (port ( rename prog_empty_thresh_3_ "prog_empty_thresh<3>") (direction INPUT))
   (port ( rename prog_empty_thresh_2_ "prog_empty_thresh<2>") (direction INPUT))
   (port ( rename prog_empty_thresh_1_ "prog_empty_thresh<1>") (direction INPUT))
   (port ( rename prog_empty_thresh_0_ "prog_empty_thresh<0>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_3_ "prog_empty_thresh_assert<3>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_2_ "prog_empty_thresh_assert<2>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_1_ "prog_empty_thresh_assert<1>") (direction INPUT))
   (port ( rename prog_empty_thresh_assert_0_ "prog_empty_thresh_assert<0>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_3_ "prog_empty_thresh_negate<3>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_2_ "prog_empty_thresh_negate<2>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_1_ "prog_empty_thresh_negate<1>") (direction INPUT))
   (port ( rename prog_empty_thresh_negate_0_ "prog_empty_thresh_negate<0>") (direction INPUT))
   (port ( rename prog_full_thresh_3_ "prog_full_thresh<3>") (direction INPUT))
   (port ( rename prog_full_thresh_2_ "prog_full_thresh<2>") (direction INPUT))
   (port ( rename prog_full_thresh_1_ "prog_full_thresh<1>") (direction INPUT))
   (port ( rename prog_full_thresh_0_ "prog_full_thresh<0>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_3_ "prog_full_thresh_assert<3>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_2_ "prog_full_thresh_assert<2>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_1_ "prog_full_thresh_assert<1>") (direction INPUT))
   (port ( rename prog_full_thresh_assert_0_ "prog_full_thresh_assert<0>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_3_ "prog_full_thresh_negate<3>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_2_ "prog_full_thresh_negate<2>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_1_ "prog_full_thresh_negate<1>") (direction INPUT))
   (port ( rename prog_full_thresh_negate_0_ "prog_full_thresh_negate<0>") (direction INPUT))
   (port ( rename rd_clk "rd_clk") (direction INPUT))
   (port ( rename rd_en "rd_en") (direction INPUT))
   (port ( rename rd_rst "rd_rst") (direction INPUT))
   (port ( rename rst "rst") (direction INPUT))
   (port ( rename srst "srst") (direction INPUT))
   (port ( rename wr_clk "wr_clk") (direction INPUT))
   (port ( rename wr_en "wr_en") (direction INPUT))
   (port ( rename wr_rst "wr_rst") (direction INPUT))
   (port ( rename almost_empty "almost_empty") (direction OUTPUT))
   (port ( rename almost_full "almost_full") (direction OUTPUT))
   (port ( rename data_count_1_ "data_count<1>") (direction OUTPUT))
   (port ( rename data_count_0_ "data_count<0>") (direction OUTPUT))
   (port ( rename dout_5_ "dout<5>") (direction OUTPUT))
   (port ( rename dout_4_ "dout<4>") (direction OUTPUT))
   (port ( rename dout_3_ "dout<3>") (direction OUTPUT))
   (port ( rename dout_2_ "dout<2>") (direction OUTPUT))
   (port ( rename dout_1_ "dout<1>") (direction OUTPUT))
   (port ( rename dout_0_ "dout<0>") (direction OUTPUT))
   (port ( rename empty "empty") (direction OUTPUT))
   (port ( rename full "full") (direction OUTPUT))
   (port ( rename overflow "overflow") (direction OUTPUT))
   (port ( rename prog_empty "prog_empty") (direction OUTPUT))
   (port ( rename prog_full "prog_full") (direction OUTPUT))
   (port ( rename valid "valid") (direction OUTPUT))
   (port ( rename rd_data_count_1_ "rd_data_count<1>") (direction OUTPUT))
   (port ( rename rd_data_count_0_ "rd_data_count<0>") (direction OUTPUT))
   (port ( rename underflow "underflow") (direction OUTPUT))
   (port ( rename wr_ack "wr_ack") (direction OUTPUT))
   (port ( rename wr_data_count_1_ "wr_data_count<1>") (direction OUTPUT))
   (port ( rename wr_data_count_0_ "wr_data_count<0>") (direction OUTPUT))
   (port ( rename sbiterr "sbiterr") (direction OUTPUT))
   (port ( rename dbiterr "dbiterr") (direction OUTPUT))
   )
  (contents
   (instance VCC (viewRef view_1 (cellRef VCC  (libraryRef xilinxun))))
   (instance GND (viewRef view_1 (cellRef GND  (libraryRef xilinxun))))
   (instance BU3
      (viewRef view_1 (cellRef system_ethernet_mac_wrapper_fifo_generator_v4_3_fifo_generator_v4_3_xst_1 (libraryRef system_ethernet_mac_wrapper_fifo_generator_v4_3_fifo_generator_v4_3_xst_1_lib)))
   )
   (net (rename N6 "din<5>")
    (joined
      (portRef din_5_)
      (portRef (member din 0) (instanceRef BU3))
    )
   )
   (net (rename N7 "din<4>")
    (joined
      (portRef din_4_)
      (portRef (member din 1) (instanceRef BU3))
    )
   )
   (net (rename N8 "din<3>")
    (joined
      (portRef din_3_)
      (portRef (member din 2) (instanceRef BU3))
    )
   )
   (net (rename N9 "din<2>")
    (joined
      (portRef din_2_)
      (portRef (member din 3) (instanceRef BU3))
    )
   )
   (net (rename N10 "din<1>")
    (joined
      (portRef din_1_)
      (portRef (member din 4) (instanceRef BU3))
    )
   )
   (net (rename N11 "din<0>")
    (joined
      (portRef din_0_)
      (portRef (member din 5) (instanceRef BU3))
    )
   )
   (net (rename N36 "rd_clk")
    (joined
      (portRef rd_clk)
      (portRef rd_clk (instanceRef BU3))
    )
   )
   (net (rename N37 "rd_en")
    (joined
      (portRef rd_en)
      (portRef rd_en (instanceRef BU3))
    )
   )
   (net (rename N39 "rst")
    (joined
      (portRef rst)
      (portRef rst (instanceRef BU3))
    )
   )
   (net (rename N41 "wr_clk")
    (joined
      (portRef wr_clk)
      (portRef wr_clk (instanceRef BU3))
    )
   )
   (net (rename N42 "wr_en")
    (joined
      (portRef wr_en)
      (portRef wr_en (instanceRef BU3))
    )
   )
   (net (rename N48 "dout<5>")
    (joined
      (portRef dout_5_)
      (portRef (member dout 0) (instanceRef BU3))
    )
   )
   (net (rename N49 "dout<4>")
    (joined
      (portRef dout_4_)
      (portRef (member dout 1) (instanceRef BU3))
    )
   )
   (net (rename N50 "dout<3>")
    (joined
      (portRef dout_3_)
      (portRef (member dout 2) (instanceRef BU3))
    )
   )
   (net (rename N51 "dout<2>")
    (joined
      (portRef dout_2_)
      (portRef (member dout 3) (instanceRef BU3))
    )
   )
   (net (rename N52 "dout<1>")
    (joined
      (portRef dout_1_)
      (portRef (member dout 4) (instanceRef BU3))
    )
   )
   (net (rename N53 "dout<0>")
    (joined
      (portRef dout_0_)
      (portRef (member dout 5) (instanceRef BU3))
    )
   )
   (net (rename N54 "empty")
    (joined
      (portRef empty)
      (portRef empty (instanceRef BU3))
    )
   )
   (net (rename N55 "full")
    (joined
      (portRef full)
      (portRef full (instanceRef BU3))
    )
   )
   (net (rename N59 "valid")
    (joined
      (portRef valid)
      (portRef valid (instanceRef BU3))
    )
   )
))))
(design system_ethernet_mac_wrapper_fifo_generator_v4_3 (cellRef system_ethernet_mac_wrapper_fifo_generator_v4_3 (libraryRef test_lib))
  (property X_CORE_INFO (string "null"))
  (property PART (string "XC3S5000-4-fg900") (owner "Xilinx"))
))
