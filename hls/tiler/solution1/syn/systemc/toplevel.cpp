// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "toplevel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic toplevel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic toplevel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> toplevel::ap_ST_st1_fsm_0 = "0000";
const sc_lv<4> toplevel::ap_ST_st2_fsm_1 = "1";
const sc_lv<4> toplevel::ap_ST_st3_fsm_2 = "10";
const sc_lv<4> toplevel::ap_ST_st4_fsm_3 = "11";
const sc_lv<4> toplevel::ap_ST_st5_fsm_4 = "100";
const sc_lv<4> toplevel::ap_ST_st6_fsm_5 = "101";
const sc_lv<4> toplevel::ap_ST_st7_fsm_6 = "110";
const sc_lv<4> toplevel::ap_ST_st8_fsm_7 = "111";
const sc_lv<4> toplevel::ap_ST_st9_fsm_8 = "1000";
const sc_lv<4> toplevel::ap_ST_st10_fsm_9 = "1001";
const sc_lv<4> toplevel::ap_ST_st11_fsm_10 = "1010";
const sc_lv<4> toplevel::ap_ST_st12_fsm_11 = "1011";
const sc_lv<4> toplevel::ap_ST_st13_fsm_12 = "1100";
const sc_lv<8> toplevel::ap_const_lv8_0 = "00000000";
const sc_lv<1> toplevel::ap_const_lv1_0 = "0";
const sc_lv<6> toplevel::ap_const_lv6_0 = "000000";
const sc_lv<3> toplevel::ap_const_lv3_0 = "000";
const sc_lv<32> toplevel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<6> toplevel::ap_const_lv6_24 = "100100";
const sc_lv<6> toplevel::ap_const_lv6_1 = "1";
const sc_lv<36> toplevel::ap_const_lv36_1 = "1";
const sc_lv<8> toplevel::ap_const_lv8_1 = "1";
const sc_lv<3> toplevel::ap_const_lv3_4 = "100";
const sc_lv<3> toplevel::ap_const_lv3_1 = "1";
const sc_lv<2> toplevel::ap_const_lv2_0 = "00";
const sc_lv<32> toplevel::ap_const_lv32_1 = "1";
const sc_lv<32> toplevel::ap_const_lv32_1F = "11111";
const sc_lv<32> toplevel::ap_const_lv32_2 = "10";

toplevel::toplevel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tiles_V_U = new toplevel_tiles_V("tiles_V_U");
    tiles_V_U->clk(ap_clk);
    tiles_V_U->reset(ap_rst);
    tiles_V_U->address0(tiles_V_address0);
    tiles_V_U->ce0(tiles_V_ce0);
    tiles_V_U->we0(tiles_V_we0);
    tiles_V_U->d0(tiles_V_d0);
    tiles_V_U->q0(tiles_V_q0);
    tiles_V_U->address1(tiles_V_address1);
    tiles_V_U->ce1(tiles_V_ce1);
    tiles_V_U->q1(tiles_V_q1);
    colours_V_U = new toplevel_colours_V("colours_V_U");
    colours_V_U->clk(ap_clk);
    colours_V_U->reset(ap_rst);
    colours_V_U->address0(colours_V_address0);
    colours_V_U->ce0(colours_V_ce0);
    colours_V_U->we0(colours_V_we0);
    colours_V_U->d0(colours_V_d0);
    colours_V_U->q0(colours_V_q0);
    colours_V_U->address1(colours_V_address1);
    colours_V_U->ce1(colours_V_ce1);
    colours_V_U->q1(colours_V_q1);
    pp_tile_V_U = new toplevel_pp_tile_V("pp_tile_V_U");
    pp_tile_V_U->clk(ap_clk);
    pp_tile_V_U->reset(ap_rst);
    pp_tile_V_U->address0(pp_tile_V_address0);
    pp_tile_V_U->ce0(pp_tile_V_ce0);
    pp_tile_V_U->we0(pp_tile_V_we0);
    pp_tile_V_U->d0(pp_tile_V_d0);
    pp_tile_V_U->q0(pp_tile_V_q0);
    pp_tile_V_U->address1(pp_tile_V_address1);
    pp_tile_V_U->ce1(pp_tile_V_ce1);
    pp_tile_V_U->q1(pp_tile_V_q1);
    pp_rot_V_U = new toplevel_pp_rot_V("pp_rot_V_U");
    pp_rot_V_U->clk(ap_clk);
    pp_rot_V_U->reset(ap_rst);
    pp_rot_V_U->address0(pp_rot_V_address0);
    pp_rot_V_U->ce0(pp_rot_V_ce0);
    pp_rot_V_U->we0(pp_rot_V_we0);
    pp_rot_V_U->d0(pp_rot_V_d0);
    pp_rot_V_U->q0(pp_rot_V_q0);
    pp_rot_V_U->address1(pp_rot_V_address1);
    pp_rot_V_U->ce1(pp_rot_V_ce1);
    pp_rot_V_U->q1(pp_rot_V_q1);
    grp_solve_fu_239 = new solve("grp_solve_fu_239");
    grp_solve_fu_239->ap_clk(ap_clk);
    grp_solve_fu_239->ap_rst(ap_rst);
    grp_solve_fu_239->ap_start(grp_solve_fu_239_ap_start);
    grp_solve_fu_239->ap_done(grp_solve_fu_239_ap_done);
    grp_solve_fu_239->ap_idle(grp_solve_fu_239_ap_idle);
    grp_solve_fu_239->ap_ready(grp_solve_fu_239_ap_ready);
    grp_solve_fu_239->avail_V_i(grp_solve_fu_239_avail_V_i);
    grp_solve_fu_239->avail_V_o(grp_solve_fu_239_avail_V_o);
    grp_solve_fu_239->avail_V_o_ap_vld(grp_solve_fu_239_avail_V_o_ap_vld);
    grp_solve_fu_239->side_V(grp_solve_fu_239_side_V);
    grp_solve_fu_239->cp_V_i(grp_solve_fu_239_cp_V_i);
    grp_solve_fu_239->cp_V_o(grp_solve_fu_239_cp_V_o);
    grp_solve_fu_239->cp_V_o_ap_vld(grp_solve_fu_239_cp_V_o_ap_vld);
    grp_solve_fu_239->pp_tile_V_address0(grp_solve_fu_239_pp_tile_V_address0);
    grp_solve_fu_239->pp_tile_V_ce0(grp_solve_fu_239_pp_tile_V_ce0);
    grp_solve_fu_239->pp_tile_V_we0(grp_solve_fu_239_pp_tile_V_we0);
    grp_solve_fu_239->pp_tile_V_d0(grp_solve_fu_239_pp_tile_V_d0);
    grp_solve_fu_239->pp_tile_V_q0(grp_solve_fu_239_pp_tile_V_q0);
    grp_solve_fu_239->pp_tile_V_address1(grp_solve_fu_239_pp_tile_V_address1);
    grp_solve_fu_239->pp_tile_V_ce1(grp_solve_fu_239_pp_tile_V_ce1);
    grp_solve_fu_239->pp_tile_V_q1(grp_solve_fu_239_pp_tile_V_q1);
    grp_solve_fu_239->pp_rot_V_address0(grp_solve_fu_239_pp_rot_V_address0);
    grp_solve_fu_239->pp_rot_V_ce0(grp_solve_fu_239_pp_rot_V_ce0);
    grp_solve_fu_239->pp_rot_V_we0(grp_solve_fu_239_pp_rot_V_we0);
    grp_solve_fu_239->pp_rot_V_d0(grp_solve_fu_239_pp_rot_V_d0);
    grp_solve_fu_239->pp_rot_V_q0(grp_solve_fu_239_pp_rot_V_q0);
    grp_solve_fu_239->pp_rot_V_address1(grp_solve_fu_239_pp_rot_V_address1);
    grp_solve_fu_239->pp_rot_V_ce1(grp_solve_fu_239_pp_rot_V_ce1);
    grp_solve_fu_239->pp_rot_V_q1(grp_solve_fu_239_pp_rot_V_q1);
    grp_solve_fu_239->tiles_V_address0(grp_solve_fu_239_tiles_V_address0);
    grp_solve_fu_239->tiles_V_ce0(grp_solve_fu_239_tiles_V_ce0);
    grp_solve_fu_239->tiles_V_q0(grp_solve_fu_239_tiles_V_q0);
    grp_solve_fu_239->tiles_V_address1(grp_solve_fu_239_tiles_V_address1);
    grp_solve_fu_239->tiles_V_ce1(grp_solve_fu_239_tiles_V_ce1);
    grp_solve_fu_239->tiles_V_q1(grp_solve_fu_239_tiles_V_q1);
    grp_solve_fu_239->colours_V_address0(grp_solve_fu_239_colours_V_address0);
    grp_solve_fu_239->colours_V_ce0(grp_solve_fu_239_colours_V_ce0);
    grp_solve_fu_239->colours_V_q0(grp_solve_fu_239_colours_V_q0);
    grp_solve_fu_239->colours_V_address1(grp_solve_fu_239_colours_V_address1);
    grp_solve_fu_239->colours_V_ce1(grp_solve_fu_239_colours_V_ce1);
    grp_solve_fu_239->colours_V_q1(grp_solve_fu_239_colours_V_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_sig_bdd_107);
    sensitive << ( input_V_V_empty_n );
    sensitive << ( exitcond1_fu_341_p2 );

    SC_METHOD(thread_ap_sig_bdd_95);
    sensitive << ( input_V_V_empty_n );
    sensitive << ( exitcond_i_fu_267_p2 );

    SC_METHOD(thread_colours_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( colours_V_addr_reg_618 );
    sensitive << ( grp_solve_fu_239_colours_V_address0 );
    sensitive << ( tmp_9_i1_fu_486_p1 );

    SC_METHOD(thread_colours_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_colours_V_address1 );

    SC_METHOD(thread_colours_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_colours_V_ce0 );

    SC_METHOD(thread_colours_V_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_colours_V_ce1 );

    SC_METHOD(thread_colours_V_d0);
    sensitive << ( colours_V_q0 );
    sensitive << ( ap_CS_fsm );
    sensitive << ( r_V_4_reg_600 );

    SC_METHOD(thread_colours_V_we0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_e_V_1_fu_535_p2);
    sensitive << ( t_V_4_reg_227 );

    SC_METHOD(thread_e_V_fu_347_p2);
    sensitive << ( t_V_2_reg_182 );

    SC_METHOD(thread_e_fu_459_p2);
    sensitive << ( e_i_reg_205 );

    SC_METHOD(thread_exitcond1_fu_341_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( t_V_2_reg_182 );

    SC_METHOD(thread_exitcond_fu_529_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( t_V_4_reg_227 );

    SC_METHOD(thread_exitcond_i9_fu_453_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( e_i_reg_205 );

    SC_METHOD(thread_exitcond_i_fu_267_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_95 );
    sensitive << ( op2_assign_reg_159 );

    SC_METHOD(thread_grp_solve_fu_239_ap_start);
    sensitive << ( grp_solve_fu_239_ap_start_ap_start_reg );

    SC_METHOD(thread_grp_solve_fu_239_avail_V_i);
    sensitive << ( avail_V );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_colours_V_q0);
    sensitive << ( colours_V_q0 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_colours_V_q1);
    sensitive << ( colours_V_q1 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_cp_V_i);
    sensitive << ( cp_V );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_pp_rot_V_q0);
    sensitive << ( pp_rot_V_q0 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_pp_rot_V_q1);
    sensitive << ( pp_rot_V_q1 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_pp_tile_V_q0);
    sensitive << ( pp_tile_V_q0 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_pp_tile_V_q1);
    sensitive << ( pp_tile_V_q1 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_side_V);
    sensitive << ( side_V );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_tiles_V_q0);
    sensitive << ( tiles_V_q0 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_grp_solve_fu_239_tiles_V_q1);
    sensitive << ( tiles_V_q1 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_input_V_V_read);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_i_fu_267_p2 );
    sensitive << ( ap_sig_bdd_95 );
    sensitive << ( exitcond1_fu_341_p2 );
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_lhs_V_1_fu_385_p1);
    sensitive << ( side_V );

    SC_METHOD(thread_lhs_V_2_fu_497_p1);
    sensitive << ( side_V );

    SC_METHOD(thread_lhs_V_fu_315_p1);
    sensitive << ( side_V );

    SC_METHOD(thread_output_V_V_din);
    sensitive << ( output_V_V_full_n );
    sensitive << ( tiles_V_q0 );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_output_V_V_write);
    sensitive << ( output_V_V_full_n );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_p_V_fu_517_p2);
    sensitive << ( t_V_3_reg_216 );

    SC_METHOD(thread_pp_rot_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( pp_rot_V_addr_reg_636 );
    sensitive << ( grp_solve_fu_239_pp_rot_V_address0 );

    SC_METHOD(thread_pp_rot_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_rot_V_address1 );

    SC_METHOD(thread_pp_rot_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_rot_V_ce0 );

    SC_METHOD(thread_pp_rot_V_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_rot_V_ce1 );

    SC_METHOD(thread_pp_rot_V_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_rot_V_d0 );

    SC_METHOD(thread_pp_rot_V_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_rot_V_we0 );

    SC_METHOD(thread_pp_tile_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( pp_tile_V_addr_reg_631 );
    sensitive << ( grp_solve_fu_239_pp_tile_V_address0 );

    SC_METHOD(thread_pp_tile_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_tile_V_address1 );

    SC_METHOD(thread_pp_tile_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_tile_V_ce0 );

    SC_METHOD(thread_pp_tile_V_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_tile_V_ce1 );

    SC_METHOD(thread_pp_tile_V_d0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_tile_V_d0 );

    SC_METHOD(thread_pp_tile_V_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_pp_tile_V_we0 );

    SC_METHOD(thread_r_V_1_fu_501_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( lhs_V_2_fu_497_p1 );

    SC_METHOD(thread_r_V_1_fu_501_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( lhs_V_2_fu_497_p1 );

    SC_METHOD(thread_r_V_1_fu_501_p2);
    sensitive << ( r_V_1_fu_501_p0 );
    sensitive << ( r_V_1_fu_501_p1 );

    SC_METHOD(thread_r_V_2_fu_283_p2);
    sensitive << ( tmp_i_fu_279_p1 );

    SC_METHOD(thread_r_V_3_fu_389_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( lhs_V_1_fu_385_p1 );

    SC_METHOD(thread_r_V_3_fu_389_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( lhs_V_1_fu_385_p1 );

    SC_METHOD(thread_r_V_3_fu_389_p2);
    sensitive << ( r_V_3_fu_389_p0 );
    sensitive << ( r_V_3_fu_389_p1 );

    SC_METHOD(thread_r_V_4_fu_445_p3);
    sensitive << ( tmp_9_fu_411_p3 );
    sensitive << ( tmp_7_i8_cast_fu_441_p1 );
    sensitive << ( tmp_4_i_fu_423_p2 );

    SC_METHOD(thread_r_V_5_fu_545_p2);
    sensitive << ( pp_rot_V_q0 );
    sensitive << ( tmp_11_reg_649 );

    SC_METHOD(thread_r_V_fu_319_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( lhs_V_fu_315_p1 );

    SC_METHOD(thread_r_V_fu_319_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( lhs_V_fu_315_p1 );

    SC_METHOD(thread_r_V_fu_319_p2);
    sensitive << ( r_V_fu_319_p0 );
    sensitive << ( r_V_fu_319_p1 );

    SC_METHOD(thread_t_1_fu_405_p2);
    sensitive << ( op2_assign_1_reg_193 );

    SC_METHOD(thread_t_V_1_fu_335_p2);
    sensitive << ( t_V_reg_170 );

    SC_METHOD(thread_t_fu_273_p2);
    sensitive << ( op2_assign_reg_159 );

    SC_METHOD(thread_tiles_V_addr4_fu_475_p2);
    sensitive << ( tmp_10_fu_469_p2 );
    sensitive << ( tmp_8_i1_trn_fu_465_p1 );

    SC_METHOD(thread_tiles_V_addr5_cast_fu_370_p1);
    sensitive << ( tmp_fu_362_p3 );

    SC_METHOD(thread_tiles_V_addr6_fu_374_p2);
    sensitive << ( tiles_V_addr5_cast_fu_370_p1 );
    sensitive << ( tmp_9_trn_cast_fu_358_p1 );

    SC_METHOD(thread_tiles_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_tiles_V_address0 );
    sensitive << ( tmp_1_fu_380_p1 );
    sensitive << ( tmp_4_fu_481_p1 );
    sensitive << ( tmp_6_fu_558_p1 );

    SC_METHOD(thread_tiles_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_tiles_V_address1 );

    SC_METHOD(thread_tiles_V_ce0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( grp_solve_fu_239_tiles_V_ce0 );

    SC_METHOD(thread_tiles_V_ce1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( grp_solve_fu_239_tiles_V_ce1 );

    SC_METHOD(thread_tiles_V_d0);
    sensitive << ( input_V_V_dout );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_tiles_V_we0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_341_p2 );
    sensitive << ( ap_sig_bdd_107 );

    SC_METHOD(thread_tmp_10_fu_469_p2);
    sensitive << ( op2_assign_1_reg_193 );

    SC_METHOD(thread_tmp_11_fu_541_p1);
    sensitive << ( t_V_4_reg_227 );

    SC_METHOD(thread_tmp_1_fu_380_p1);
    sensitive << ( tiles_V_addr6_fu_374_p2 );

    SC_METHOD(thread_tmp_1_i_fu_399_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( op2_assign_1_reg_193 );
    sensitive << ( tmp_i5_cast_fu_395_p1 );

    SC_METHOD(thread_tmp_2_fu_329_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_cast_fu_325_p1 );
    sensitive << ( r_V_fu_319_p2 );

    SC_METHOD(thread_tmp_3_fu_305_p1);
    sensitive << ( input_V_V_dout );

    SC_METHOD(thread_tmp_3_i_fu_419_p1);
    sensitive << ( op2_assign_1_reg_193 );

    SC_METHOD(thread_tmp_4_fu_481_p1);
    sensitive << ( tiles_V_addr4_fu_475_p2 );

    SC_METHOD(thread_tmp_4_i_fu_423_p2);
    sensitive << ( tmp_3_i_fu_419_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_507_p1);
    sensitive << ( t_V_3_reg_216 );

    SC_METHOD(thread_tmp_5_fu_550_p3);
    sensitive << ( pp_tile_V_q0 );
    sensitive << ( r_V_5_fu_545_p2 );

    SC_METHOD(thread_tmp_5_i6_fu_429_p2);
    sensitive << ( op2_assign_1_reg_193 );

    SC_METHOD(thread_tmp_6_fu_558_p1);
    sensitive << ( tmp_5_fu_550_p3 );

    SC_METHOD(thread_tmp_7_fu_511_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_5_cast_fu_507_p1 );
    sensitive << ( r_V_1_fu_501_p2 );

    SC_METHOD(thread_tmp_7_i8_cast_fu_441_p1);
    sensitive << ( tmp_7_i8_fu_435_p2 );

    SC_METHOD(thread_tmp_7_i8_fu_435_p2);
    sensitive << ( tmp_5_i6_fu_429_p2 );

    SC_METHOD(thread_tmp_8_i1_trn_fu_465_p1);
    sensitive << ( e_i_reg_205 );

    SC_METHOD(thread_tmp_9_fu_411_p3);
    sensitive << ( op2_assign_1_reg_193 );

    SC_METHOD(thread_tmp_9_i1_fu_486_p1);
    sensitive << ( tiles_V_q0 );

    SC_METHOD(thread_tmp_9_i_fu_293_p2);
    sensitive << ( avail_V );
    sensitive << ( r_V_2_fu_283_p2 );

    SC_METHOD(thread_tmp_9_trn_cast_fu_358_p1);
    sensitive << ( t_V_2_reg_182 );

    SC_METHOD(thread_tmp_cast_fu_325_p1);
    sensitive << ( t_V_reg_170 );

    SC_METHOD(thread_tmp_fu_362_p3);
    sensitive << ( t_V_reg_170 );

    SC_METHOD(thread_tmp_i1_fu_523_p1);
    sensitive << ( t_V_3_reg_216 );

    SC_METHOD(thread_tmp_i5_cast_fu_395_p1);
    sensitive << ( r_V_3_fu_389_p2 );

    SC_METHOD(thread_tmp_i_fu_279_p1);
    sensitive << ( op2_assign_reg_159 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( output_V_V_full_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_i_fu_267_p2 );
    sensitive << ( ap_sig_bdd_95 );
    sensitive << ( exitcond1_fu_341_p2 );
    sensitive << ( ap_sig_bdd_107 );
    sensitive << ( tmp_1_i_fu_399_p2 );
    sensitive << ( exitcond_i9_fu_453_p2 );
    sensitive << ( tmp_7_fu_511_p2 );
    sensitive << ( exitcond_fu_529_p2 );
    sensitive << ( grp_solve_fu_239_ap_done );
    sensitive << ( tmp_2_fu_329_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    cp_V = "00000000";
    avail_V = "000000000000000000000000000000000000";
    side_V = "00000000";
    ap_CS_fsm = "0000";
    grp_solve_fu_239_ap_start_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "toplevel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, input_V_V_dout, "(port)input_V_V_dout");
    sc_trace(mVcdFile, input_V_V_empty_n, "(port)input_V_V_empty_n");
    sc_trace(mVcdFile, input_V_V_read, "(port)input_V_V_read");
    sc_trace(mVcdFile, output_V_V_din, "(port)output_V_V_din");
    sc_trace(mVcdFile, output_V_V_full_n, "(port)output_V_V_full_n");
    sc_trace(mVcdFile, output_V_V_write, "(port)output_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, cp_V, "cp_V");
    sc_trace(mVcdFile, avail_V, "avail_V");
    sc_trace(mVcdFile, side_V, "side_V");
    sc_trace(mVcdFile, tiles_V_address0, "tiles_V_address0");
    sc_trace(mVcdFile, tiles_V_ce0, "tiles_V_ce0");
    sc_trace(mVcdFile, tiles_V_we0, "tiles_V_we0");
    sc_trace(mVcdFile, tiles_V_d0, "tiles_V_d0");
    sc_trace(mVcdFile, tiles_V_q0, "tiles_V_q0");
    sc_trace(mVcdFile, tiles_V_address1, "tiles_V_address1");
    sc_trace(mVcdFile, tiles_V_ce1, "tiles_V_ce1");
    sc_trace(mVcdFile, tiles_V_q1, "tiles_V_q1");
    sc_trace(mVcdFile, colours_V_address0, "colours_V_address0");
    sc_trace(mVcdFile, colours_V_ce0, "colours_V_ce0");
    sc_trace(mVcdFile, colours_V_we0, "colours_V_we0");
    sc_trace(mVcdFile, colours_V_d0, "colours_V_d0");
    sc_trace(mVcdFile, colours_V_q0, "colours_V_q0");
    sc_trace(mVcdFile, colours_V_address1, "colours_V_address1");
    sc_trace(mVcdFile, colours_V_ce1, "colours_V_ce1");
    sc_trace(mVcdFile, colours_V_q1, "colours_V_q1");
    sc_trace(mVcdFile, pp_tile_V_address0, "pp_tile_V_address0");
    sc_trace(mVcdFile, pp_tile_V_ce0, "pp_tile_V_ce0");
    sc_trace(mVcdFile, pp_tile_V_we0, "pp_tile_V_we0");
    sc_trace(mVcdFile, pp_tile_V_d0, "pp_tile_V_d0");
    sc_trace(mVcdFile, pp_tile_V_q0, "pp_tile_V_q0");
    sc_trace(mVcdFile, pp_tile_V_address1, "pp_tile_V_address1");
    sc_trace(mVcdFile, pp_tile_V_ce1, "pp_tile_V_ce1");
    sc_trace(mVcdFile, pp_tile_V_q1, "pp_tile_V_q1");
    sc_trace(mVcdFile, pp_rot_V_address0, "pp_rot_V_address0");
    sc_trace(mVcdFile, pp_rot_V_ce0, "pp_rot_V_ce0");
    sc_trace(mVcdFile, pp_rot_V_we0, "pp_rot_V_we0");
    sc_trace(mVcdFile, pp_rot_V_d0, "pp_rot_V_d0");
    sc_trace(mVcdFile, pp_rot_V_q0, "pp_rot_V_q0");
    sc_trace(mVcdFile, pp_rot_V_address1, "pp_rot_V_address1");
    sc_trace(mVcdFile, pp_rot_V_ce1, "pp_rot_V_ce1");
    sc_trace(mVcdFile, pp_rot_V_q1, "pp_rot_V_q1");
    sc_trace(mVcdFile, t_fu_273_p2, "t_fu_273_p2");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, exitcond_i_fu_267_p2, "exitcond_i_fu_267_p2");
    sc_trace(mVcdFile, ap_sig_bdd_95, "ap_sig_bdd_95");
    sc_trace(mVcdFile, t_V_1_fu_335_p2, "t_V_1_fu_335_p2");
    sc_trace(mVcdFile, t_V_1_reg_579, "t_V_1_reg_579");
    sc_trace(mVcdFile, e_V_fu_347_p2, "e_V_fu_347_p2");
    sc_trace(mVcdFile, exitcond1_fu_341_p2, "exitcond1_fu_341_p2");
    sc_trace(mVcdFile, ap_sig_bdd_107, "ap_sig_bdd_107");
    sc_trace(mVcdFile, t_1_fu_405_p2, "t_1_fu_405_p2");
    sc_trace(mVcdFile, t_1_reg_595, "t_1_reg_595");
    sc_trace(mVcdFile, r_V_4_fu_445_p3, "r_V_4_fu_445_p3");
    sc_trace(mVcdFile, r_V_4_reg_600, "r_V_4_reg_600");
    sc_trace(mVcdFile, tmp_1_i_fu_399_p2, "tmp_1_i_fu_399_p2");
    sc_trace(mVcdFile, e_fu_459_p2, "e_fu_459_p2");
    sc_trace(mVcdFile, e_reg_608, "e_reg_608");
    sc_trace(mVcdFile, exitcond_i9_fu_453_p2, "exitcond_i9_fu_453_p2");
    sc_trace(mVcdFile, colours_V_addr_reg_618, "colours_V_addr_reg_618");
    sc_trace(mVcdFile, p_V_fu_517_p2, "p_V_fu_517_p2");
    sc_trace(mVcdFile, p_V_reg_626, "p_V_reg_626");
    sc_trace(mVcdFile, pp_tile_V_addr_reg_631, "pp_tile_V_addr_reg_631");
    sc_trace(mVcdFile, tmp_7_fu_511_p2, "tmp_7_fu_511_p2");
    sc_trace(mVcdFile, pp_rot_V_addr_reg_636, "pp_rot_V_addr_reg_636");
    sc_trace(mVcdFile, e_V_1_fu_535_p2, "e_V_1_fu_535_p2");
    sc_trace(mVcdFile, e_V_1_reg_644, "e_V_1_reg_644");
    sc_trace(mVcdFile, tmp_11_fu_541_p1, "tmp_11_fu_541_p1");
    sc_trace(mVcdFile, tmp_11_reg_649, "tmp_11_reg_649");
    sc_trace(mVcdFile, exitcond_fu_529_p2, "exitcond_fu_529_p2");
    sc_trace(mVcdFile, grp_solve_fu_239_ap_start, "grp_solve_fu_239_ap_start");
    sc_trace(mVcdFile, grp_solve_fu_239_ap_done, "grp_solve_fu_239_ap_done");
    sc_trace(mVcdFile, grp_solve_fu_239_ap_idle, "grp_solve_fu_239_ap_idle");
    sc_trace(mVcdFile, grp_solve_fu_239_ap_ready, "grp_solve_fu_239_ap_ready");
    sc_trace(mVcdFile, grp_solve_fu_239_avail_V_i, "grp_solve_fu_239_avail_V_i");
    sc_trace(mVcdFile, grp_solve_fu_239_avail_V_o, "grp_solve_fu_239_avail_V_o");
    sc_trace(mVcdFile, grp_solve_fu_239_avail_V_o_ap_vld, "grp_solve_fu_239_avail_V_o_ap_vld");
    sc_trace(mVcdFile, grp_solve_fu_239_side_V, "grp_solve_fu_239_side_V");
    sc_trace(mVcdFile, grp_solve_fu_239_cp_V_i, "grp_solve_fu_239_cp_V_i");
    sc_trace(mVcdFile, grp_solve_fu_239_cp_V_o, "grp_solve_fu_239_cp_V_o");
    sc_trace(mVcdFile, grp_solve_fu_239_cp_V_o_ap_vld, "grp_solve_fu_239_cp_V_o_ap_vld");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_address0, "grp_solve_fu_239_pp_tile_V_address0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_ce0, "grp_solve_fu_239_pp_tile_V_ce0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_we0, "grp_solve_fu_239_pp_tile_V_we0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_d0, "grp_solve_fu_239_pp_tile_V_d0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_q0, "grp_solve_fu_239_pp_tile_V_q0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_address1, "grp_solve_fu_239_pp_tile_V_address1");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_ce1, "grp_solve_fu_239_pp_tile_V_ce1");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_tile_V_q1, "grp_solve_fu_239_pp_tile_V_q1");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_address0, "grp_solve_fu_239_pp_rot_V_address0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_ce0, "grp_solve_fu_239_pp_rot_V_ce0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_we0, "grp_solve_fu_239_pp_rot_V_we0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_d0, "grp_solve_fu_239_pp_rot_V_d0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_q0, "grp_solve_fu_239_pp_rot_V_q0");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_address1, "grp_solve_fu_239_pp_rot_V_address1");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_ce1, "grp_solve_fu_239_pp_rot_V_ce1");
    sc_trace(mVcdFile, grp_solve_fu_239_pp_rot_V_q1, "grp_solve_fu_239_pp_rot_V_q1");
    sc_trace(mVcdFile, grp_solve_fu_239_tiles_V_address0, "grp_solve_fu_239_tiles_V_address0");
    sc_trace(mVcdFile, grp_solve_fu_239_tiles_V_ce0, "grp_solve_fu_239_tiles_V_ce0");
    sc_trace(mVcdFile, grp_solve_fu_239_tiles_V_q0, "grp_solve_fu_239_tiles_V_q0");
    sc_trace(mVcdFile, grp_solve_fu_239_tiles_V_address1, "grp_solve_fu_239_tiles_V_address1");
    sc_trace(mVcdFile, grp_solve_fu_239_tiles_V_ce1, "grp_solve_fu_239_tiles_V_ce1");
    sc_trace(mVcdFile, grp_solve_fu_239_tiles_V_q1, "grp_solve_fu_239_tiles_V_q1");
    sc_trace(mVcdFile, grp_solve_fu_239_colours_V_address0, "grp_solve_fu_239_colours_V_address0");
    sc_trace(mVcdFile, grp_solve_fu_239_colours_V_ce0, "grp_solve_fu_239_colours_V_ce0");
    sc_trace(mVcdFile, grp_solve_fu_239_colours_V_q0, "grp_solve_fu_239_colours_V_q0");
    sc_trace(mVcdFile, grp_solve_fu_239_colours_V_address1, "grp_solve_fu_239_colours_V_address1");
    sc_trace(mVcdFile, grp_solve_fu_239_colours_V_ce1, "grp_solve_fu_239_colours_V_ce1");
    sc_trace(mVcdFile, grp_solve_fu_239_colours_V_q1, "grp_solve_fu_239_colours_V_q1");
    sc_trace(mVcdFile, op2_assign_reg_159, "op2_assign_reg_159");
    sc_trace(mVcdFile, t_V_reg_170, "t_V_reg_170");
    sc_trace(mVcdFile, t_V_2_reg_182, "t_V_2_reg_182");
    sc_trace(mVcdFile, tmp_2_fu_329_p2, "tmp_2_fu_329_p2");
    sc_trace(mVcdFile, op2_assign_1_reg_193, "op2_assign_1_reg_193");
    sc_trace(mVcdFile, e_i_reg_205, "e_i_reg_205");
    sc_trace(mVcdFile, t_V_3_reg_216, "t_V_3_reg_216");
    sc_trace(mVcdFile, t_V_4_reg_227, "t_V_4_reg_227");
    sc_trace(mVcdFile, grp_solve_fu_239_ap_start_ap_start_reg, "grp_solve_fu_239_ap_start_ap_start_reg");
    sc_trace(mVcdFile, tmp_1_fu_380_p1, "tmp_1_fu_380_p1");
    sc_trace(mVcdFile, tmp_4_fu_481_p1, "tmp_4_fu_481_p1");
    sc_trace(mVcdFile, tmp_9_i1_fu_486_p1, "tmp_9_i1_fu_486_p1");
    sc_trace(mVcdFile, tmp_i1_fu_523_p1, "tmp_i1_fu_523_p1");
    sc_trace(mVcdFile, tmp_6_fu_558_p1, "tmp_6_fu_558_p1");
    sc_trace(mVcdFile, tmp_9_i_fu_293_p2, "tmp_9_i_fu_293_p2");
    sc_trace(mVcdFile, tmp_3_fu_305_p1, "tmp_3_fu_305_p1");
    sc_trace(mVcdFile, tmp_i_fu_279_p1, "tmp_i_fu_279_p1");
    sc_trace(mVcdFile, r_V_2_fu_283_p2, "r_V_2_fu_283_p2");
    sc_trace(mVcdFile, r_V_fu_319_p0, "r_V_fu_319_p0");
    sc_trace(mVcdFile, lhs_V_fu_315_p1, "lhs_V_fu_315_p1");
    sc_trace(mVcdFile, r_V_fu_319_p1, "r_V_fu_319_p1");
    sc_trace(mVcdFile, tmp_cast_fu_325_p1, "tmp_cast_fu_325_p1");
    sc_trace(mVcdFile, r_V_fu_319_p2, "r_V_fu_319_p2");
    sc_trace(mVcdFile, tmp_fu_362_p3, "tmp_fu_362_p3");
    sc_trace(mVcdFile, tiles_V_addr5_cast_fu_370_p1, "tiles_V_addr5_cast_fu_370_p1");
    sc_trace(mVcdFile, tmp_9_trn_cast_fu_358_p1, "tmp_9_trn_cast_fu_358_p1");
    sc_trace(mVcdFile, tiles_V_addr6_fu_374_p2, "tiles_V_addr6_fu_374_p2");
    sc_trace(mVcdFile, r_V_3_fu_389_p0, "r_V_3_fu_389_p0");
    sc_trace(mVcdFile, lhs_V_1_fu_385_p1, "lhs_V_1_fu_385_p1");
    sc_trace(mVcdFile, r_V_3_fu_389_p1, "r_V_3_fu_389_p1");
    sc_trace(mVcdFile, r_V_3_fu_389_p2, "r_V_3_fu_389_p2");
    sc_trace(mVcdFile, tmp_i5_cast_fu_395_p1, "tmp_i5_cast_fu_395_p1");
    sc_trace(mVcdFile, tmp_3_i_fu_419_p1, "tmp_3_i_fu_419_p1");
    sc_trace(mVcdFile, tmp_5_i6_fu_429_p2, "tmp_5_i6_fu_429_p2");
    sc_trace(mVcdFile, tmp_7_i8_fu_435_p2, "tmp_7_i8_fu_435_p2");
    sc_trace(mVcdFile, tmp_9_fu_411_p3, "tmp_9_fu_411_p3");
    sc_trace(mVcdFile, tmp_7_i8_cast_fu_441_p1, "tmp_7_i8_cast_fu_441_p1");
    sc_trace(mVcdFile, tmp_4_i_fu_423_p2, "tmp_4_i_fu_423_p2");
    sc_trace(mVcdFile, tmp_10_fu_469_p2, "tmp_10_fu_469_p2");
    sc_trace(mVcdFile, tmp_8_i1_trn_fu_465_p1, "tmp_8_i1_trn_fu_465_p1");
    sc_trace(mVcdFile, tiles_V_addr4_fu_475_p2, "tiles_V_addr4_fu_475_p2");
    sc_trace(mVcdFile, r_V_1_fu_501_p0, "r_V_1_fu_501_p0");
    sc_trace(mVcdFile, lhs_V_2_fu_497_p1, "lhs_V_2_fu_497_p1");
    sc_trace(mVcdFile, r_V_1_fu_501_p1, "r_V_1_fu_501_p1");
    sc_trace(mVcdFile, tmp_5_cast_fu_507_p1, "tmp_5_cast_fu_507_p1");
    sc_trace(mVcdFile, r_V_1_fu_501_p2, "r_V_1_fu_501_p2");
    sc_trace(mVcdFile, r_V_5_fu_545_p2, "r_V_5_fu_545_p2");
    sc_trace(mVcdFile, tmp_5_fu_550_p3, "tmp_5_fu_550_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("toplevel.hdltvin.dat");
    mHdltvoutHandle.open("toplevel.hdltvout.dat");
}

toplevel::~toplevel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete tiles_V_U;
    delete colours_V_U;
    delete pp_tile_V_U;
    delete pp_rot_V_U;
    delete grp_solve_fu_239;
}

void toplevel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && 
         !ap_sig_bdd_95.read())) {
        avail_V = tmp_9_i_fu_293_p2.read();
    } else if (((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_399_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_solve_fu_239_avail_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_solve_fu_239_avail_V_o_ap_vld.read())))) {
        avail_V = grp_solve_fu_239_avail_V_o.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) {
        cp_V = ap_const_lv8_0;
    } else if (((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_399_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_solve_fu_239_cp_V_o_ap_vld.read())) || 
                (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, grp_solve_fu_239_cp_V_o_ap_vld.read())))) {
        cp_V = grp_solve_fu_239_cp_V_o.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_399_p2.read()))) {
        e_i_reg_205 = ap_const_lv3_0;
    } else if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        e_i_reg_205 = e_reg_608.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_solve_fu_239_ap_start_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_399_p2.read()))) {
            grp_solve_fu_239_ap_start_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_solve_fu_239_ap_ready.read())) {
            grp_solve_fu_239_ap_start_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i9_fu_453_p2.read()))) {
        op2_assign_1_reg_193 = t_1_reg_595.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_329_p2.read()))) {
        op2_assign_1_reg_193 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
         esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && 
         !ap_sig_bdd_95.read())) {
        op2_assign_reg_159 = t_fu_273_p2.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) {
        op2_assign_reg_159 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_329_p2.read()))) {
        t_V_2_reg_182 = ap_const_lv3_0;
    } else if ((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()) && 
                !ap_sig_bdd_107.read())) {
        t_V_2_reg_182 = e_V_fu_347_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_529_p2.read()))) {
        t_V_3_reg_216 = p_V_reg_626.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(ap_const_logic_0, grp_solve_fu_239_ap_done.read()))) {
        t_V_3_reg_216 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,4,4>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_511_p2.read()))) {
        t_V_4_reg_227 = ap_const_lv3_0;
    } else if ((esl_seteq<1,4,4>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(output_V_V_full_n.read(), ap_const_logic_0))) {
        t_V_4_reg_227 = e_V_1_reg_644.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
         !ap_sig_bdd_107.read() && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()))) {
        t_V_reg_170 = t_V_1_reg_579.read();
    } else if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
                !esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && 
                !ap_sig_bdd_95.read())) {
        t_V_reg_170 = ap_const_lv8_0;
    }
    if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        colours_V_addr_reg_618 =  (sc_lv<4>) (tmp_9_i1_fu_486_p1.read());
    }
    if (esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        e_V_1_reg_644 = e_V_1_fu_535_p2.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        e_reg_608 = e_fu_459_p2.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st10_fsm_9, ap_CS_fsm.read())) {
        p_V_reg_626 = p_V_fu_517_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st10_fsm_9, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_511_p2.read()))) {
        pp_rot_V_addr_reg_636 =  (sc_lv<6>) (tmp_i1_fu_523_p1.read());
        pp_tile_V_addr_reg_631 =  (sc_lv<6>) (tmp_i1_fu_523_p1.read());
    }
    if ((esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_399_p2.read()))) {
        r_V_4_reg_600 = r_V_4_fu_445_p3.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && !ap_sig_bdd_95.read())) {
        side_V = tmp_3_fu_305_p1.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st5_fsm_4, ap_CS_fsm.read())) {
        t_1_reg_595 = t_1_fu_405_p2.read();
    }
    if (esl_seteq<1,4,4>(ap_ST_st3_fsm_2, ap_CS_fsm.read())) {
        t_V_1_reg_579 = t_V_1_fu_335_p2.read();
    }
    if ((esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_529_p2.read()))) {
        tmp_11_reg_649 = tmp_11_fu_541_p1.read();
    }
}

void toplevel::thread_ap_sig_bdd_107() {
    ap_sig_bdd_107 = (esl_seteq<1,1,1>(input_V_V_empty_n.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()));
}

void toplevel::thread_ap_sig_bdd_95() {
    ap_sig_bdd_95 = (esl_seteq<1,1,1>(input_V_V_empty_n.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0));
}

void toplevel::thread_colours_V_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read())) {
        colours_V_address0 = colours_V_addr_reg_618.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read())) {
        colours_V_address0 =  (sc_lv<4>) (tmp_9_i1_fu_486_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        colours_V_address0 = grp_solve_fu_239_colours_V_address0.read();
    } else {
        colours_V_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void toplevel::thread_colours_V_address1() {
    colours_V_address1 = grp_solve_fu_239_colours_V_address1.read();
}

void toplevel::thread_colours_V_ce0() {
    if ((esl_seteq<1,4,4>(ap_ST_st7_fsm_6, ap_CS_fsm.read()) || 
         esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()))) {
        colours_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        colours_V_ce0 = grp_solve_fu_239_colours_V_ce0.read();
    } else {
        colours_V_ce0 = ap_const_logic_0;
    }
}

void toplevel::thread_colours_V_ce1() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        colours_V_ce1 = grp_solve_fu_239_colours_V_ce1.read();
    } else {
        colours_V_ce1 = ap_const_logic_0;
    }
}

void toplevel::thread_colours_V_d0() {
    colours_V_d0 = (colours_V_q0.read() | r_V_4_reg_600.read());
}

void toplevel::thread_colours_V_we0() {
    if ((esl_seteq<1,4,4>(ap_ST_st8_fsm_7, ap_CS_fsm.read()))) {
        colours_V_we0 = ap_const_logic_1;
    } else {
        colours_V_we0 = ap_const_logic_0;
    }
}

void toplevel::thread_e_V_1_fu_535_p2() {
    e_V_1_fu_535_p2 = (!t_V_4_reg_227.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(t_V_4_reg_227.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void toplevel::thread_e_V_fu_347_p2() {
    e_V_fu_347_p2 = (!t_V_2_reg_182.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(t_V_2_reg_182.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void toplevel::thread_e_fu_459_p2() {
    e_fu_459_p2 = (!e_i_reg_205.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_bigint<3>(e_i_reg_205.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void toplevel::thread_exitcond1_fu_341_p2() {
    exitcond1_fu_341_p2 = (!t_V_2_reg_182.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_182.read() == ap_const_lv3_4);
}

void toplevel::thread_exitcond_fu_529_p2() {
    exitcond_fu_529_p2 = (!t_V_4_reg_227.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(t_V_4_reg_227.read() == ap_const_lv3_4);
}

void toplevel::thread_exitcond_i9_fu_453_p2() {
    exitcond_i9_fu_453_p2 = (!e_i_reg_205.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(e_i_reg_205.read() == ap_const_lv3_4);
}

void toplevel::thread_exitcond_i_fu_267_p2() {
    exitcond_i_fu_267_p2 = (!op2_assign_reg_159.read().is_01() || !ap_const_lv6_24.is_01())? sc_lv<1>(): sc_lv<1>(op2_assign_reg_159.read() == ap_const_lv6_24);
}

void toplevel::thread_grp_solve_fu_239_ap_start() {
    grp_solve_fu_239_ap_start = grp_solve_fu_239_ap_start_ap_start_reg.read();
}

void toplevel::thread_grp_solve_fu_239_avail_V_i() {
    grp_solve_fu_239_avail_V_i = avail_V.read();
}

void toplevel::thread_grp_solve_fu_239_colours_V_q0() {
    grp_solve_fu_239_colours_V_q0 = colours_V_q0.read();
}

void toplevel::thread_grp_solve_fu_239_colours_V_q1() {
    grp_solve_fu_239_colours_V_q1 = colours_V_q1.read();
}

void toplevel::thread_grp_solve_fu_239_cp_V_i() {
    grp_solve_fu_239_cp_V_i = cp_V.read();
}

void toplevel::thread_grp_solve_fu_239_pp_rot_V_q0() {
    grp_solve_fu_239_pp_rot_V_q0 = pp_rot_V_q0.read();
}

void toplevel::thread_grp_solve_fu_239_pp_rot_V_q1() {
    grp_solve_fu_239_pp_rot_V_q1 = pp_rot_V_q1.read();
}

void toplevel::thread_grp_solve_fu_239_pp_tile_V_q0() {
    grp_solve_fu_239_pp_tile_V_q0 = pp_tile_V_q0.read();
}

void toplevel::thread_grp_solve_fu_239_pp_tile_V_q1() {
    grp_solve_fu_239_pp_tile_V_q1 = pp_tile_V_q1.read();
}

void toplevel::thread_grp_solve_fu_239_side_V() {
    grp_solve_fu_239_side_V = side_V.read();
}

void toplevel::thread_grp_solve_fu_239_tiles_V_q0() {
    grp_solve_fu_239_tiles_V_q0 = tiles_V_q0.read();
}

void toplevel::thread_grp_solve_fu_239_tiles_V_q1() {
    grp_solve_fu_239_tiles_V_q1 = tiles_V_q1.read();
}

void toplevel::thread_input_V_V_read() {
    if (((esl_seteq<1,4,4>(ap_ST_st2_fsm_1, ap_CS_fsm.read()) && 
          !esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && 
          !ap_sig_bdd_95.read()) || 
         (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()) && 
          !ap_sig_bdd_107.read()))) {
        input_V_V_read = ap_const_logic_1;
    } else {
        input_V_V_read = ap_const_logic_0;
    }
}

void toplevel::thread_lhs_V_1_fu_385_p1() {
    lhs_V_1_fu_385_p1 = esl_zext<16,8>(side_V.read());
}

void toplevel::thread_lhs_V_2_fu_497_p1() {
    lhs_V_2_fu_497_p1 = esl_zext<16,8>(side_V.read());
}

void toplevel::thread_lhs_V_fu_315_p1() {
    lhs_V_fu_315_p1 = esl_zext<16,8>(side_V.read());
}

void toplevel::thread_output_V_V_din() {
    output_V_V_din = esl_zext<32,4>(tiles_V_q0.read());
}

void toplevel::thread_output_V_V_write() {
    if ((esl_seteq<1,4,4>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(output_V_V_full_n.read(), ap_const_logic_0))) {
        output_V_V_write = ap_const_logic_1;
    } else {
        output_V_V_write = ap_const_logic_0;
    }
}

void toplevel::thread_p_V_fu_517_p2() {
    p_V_fu_517_p2 = (!t_V_3_reg_216.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_bigint<8>(t_V_3_reg_216.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void toplevel::thread_pp_rot_V_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        pp_rot_V_address0 = pp_rot_V_addr_reg_636.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_rot_V_address0 = grp_solve_fu_239_pp_rot_V_address0.read();
    } else {
        pp_rot_V_address0 = "XXXXXX";
    }
}

void toplevel::thread_pp_rot_V_address1() {
    pp_rot_V_address1 = grp_solve_fu_239_pp_rot_V_address1.read();
}

void toplevel::thread_pp_rot_V_ce0() {
    if (esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        pp_rot_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_rot_V_ce0 = grp_solve_fu_239_pp_rot_V_ce0.read();
    } else {
        pp_rot_V_ce0 = ap_const_logic_0;
    }
}

void toplevel::thread_pp_rot_V_ce1() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_rot_V_ce1 = grp_solve_fu_239_pp_rot_V_ce1.read();
    } else {
        pp_rot_V_ce1 = ap_const_logic_0;
    }
}

void toplevel::thread_pp_rot_V_d0() {
    pp_rot_V_d0 = grp_solve_fu_239_pp_rot_V_d0.read();
}

void toplevel::thread_pp_rot_V_we0() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_rot_V_we0 = grp_solve_fu_239_pp_rot_V_we0.read();
    } else {
        pp_rot_V_we0 = ap_const_logic_0;
    }
}

void toplevel::thread_pp_tile_V_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        pp_tile_V_address0 = pp_tile_V_addr_reg_631.read();
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_tile_V_address0 = grp_solve_fu_239_pp_tile_V_address0.read();
    } else {
        pp_tile_V_address0 = "XXXXXX";
    }
}

void toplevel::thread_pp_tile_V_address1() {
    pp_tile_V_address1 = grp_solve_fu_239_pp_tile_V_address1.read();
}

void toplevel::thread_pp_tile_V_ce0() {
    if (esl_seteq<1,4,4>(ap_ST_st11_fsm_10, ap_CS_fsm.read())) {
        pp_tile_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_tile_V_ce0 = grp_solve_fu_239_pp_tile_V_ce0.read();
    } else {
        pp_tile_V_ce0 = ap_const_logic_0;
    }
}

void toplevel::thread_pp_tile_V_ce1() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_tile_V_ce1 = grp_solve_fu_239_pp_tile_V_ce1.read();
    } else {
        pp_tile_V_ce1 = ap_const_logic_0;
    }
}

void toplevel::thread_pp_tile_V_d0() {
    pp_tile_V_d0 = grp_solve_fu_239_pp_tile_V_d0.read();
}

void toplevel::thread_pp_tile_V_we0() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        pp_tile_V_we0 = grp_solve_fu_239_pp_tile_V_we0.read();
    } else {
        pp_tile_V_we0 = ap_const_logic_0;
    }
}

void toplevel::thread_r_V_1_fu_501_p0() {
    r_V_1_fu_501_p0 =  (sc_lv<8>) (lhs_V_2_fu_497_p1.read());
}

void toplevel::thread_r_V_1_fu_501_p1() {
    r_V_1_fu_501_p1 =  (sc_lv<8>) (lhs_V_2_fu_497_p1.read());
}

void toplevel::thread_r_V_1_fu_501_p2() {
    r_V_1_fu_501_p2 = (!r_V_1_fu_501_p0.read().is_01() || !r_V_1_fu_501_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(r_V_1_fu_501_p0.read()) * sc_biguint<8>(r_V_1_fu_501_p1.read());
}

void toplevel::thread_r_V_2_fu_283_p2() {
    r_V_2_fu_283_p2 = (!tmp_i_fu_279_p1.read().is_01())? sc_lv<36>(): ap_const_lv36_1 << (unsigned short)tmp_i_fu_279_p1.read().to_uint();
}

void toplevel::thread_r_V_3_fu_389_p0() {
    r_V_3_fu_389_p0 =  (sc_lv<8>) (lhs_V_1_fu_385_p1.read());
}

void toplevel::thread_r_V_3_fu_389_p1() {
    r_V_3_fu_389_p1 =  (sc_lv<8>) (lhs_V_1_fu_385_p1.read());
}

void toplevel::thread_r_V_3_fu_389_p2() {
    r_V_3_fu_389_p2 = (!r_V_3_fu_389_p0.read().is_01() || !r_V_3_fu_389_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(r_V_3_fu_389_p0.read()) * sc_biguint<8>(r_V_3_fu_389_p1.read());
}

void toplevel::thread_r_V_4_fu_445_p3() {
    r_V_4_fu_445_p3 = (!tmp_9_fu_411_p3.read()[0].is_01())? sc_lv<36>(): ((tmp_9_fu_411_p3.read()[0].to_bool())? tmp_7_i8_cast_fu_441_p1.read(): tmp_4_i_fu_423_p2.read());
}

void toplevel::thread_r_V_5_fu_545_p2() {
    r_V_5_fu_545_p2 = (!tmp_11_reg_649.read().is_01() || !pp_rot_V_q0.read().is_01())? sc_lv<2>(): (sc_bigint<2>(tmp_11_reg_649.read()) + sc_biguint<2>(pp_rot_V_q0.read()));
}

void toplevel::thread_r_V_fu_319_p0() {
    r_V_fu_319_p0 =  (sc_lv<8>) (lhs_V_fu_315_p1.read());
}

void toplevel::thread_r_V_fu_319_p1() {
    r_V_fu_319_p1 =  (sc_lv<8>) (lhs_V_fu_315_p1.read());
}

void toplevel::thread_r_V_fu_319_p2() {
    r_V_fu_319_p2 = (!r_V_fu_319_p0.read().is_01() || !r_V_fu_319_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(r_V_fu_319_p0.read()) * sc_biguint<8>(r_V_fu_319_p1.read());
}

void toplevel::thread_t_1_fu_405_p2() {
    t_1_fu_405_p2 = (!op2_assign_1_reg_193.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_bigint<32>(op2_assign_1_reg_193.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void toplevel::thread_t_V_1_fu_335_p2() {
    t_V_1_fu_335_p2 = (!t_V_reg_170.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_bigint<8>(t_V_reg_170.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void toplevel::thread_t_fu_273_p2() {
    t_fu_273_p2 = (!op2_assign_reg_159.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_bigint<6>(op2_assign_reg_159.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void toplevel::thread_tiles_V_addr4_fu_475_p2() {
    tiles_V_addr4_fu_475_p2 = (!tmp_10_fu_469_p2.read().is_01() || !tmp_8_i1_trn_fu_465_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_10_fu_469_p2.read()) + sc_biguint<32>(tmp_8_i1_trn_fu_465_p1.read()));
}

void toplevel::thread_tiles_V_addr5_cast_fu_370_p1() {
    tiles_V_addr5_cast_fu_370_p1 = esl_zext<11,10>(tmp_fu_362_p3.read());
}

void toplevel::thread_tiles_V_addr6_fu_374_p2() {
    tiles_V_addr6_fu_374_p2 = (!tiles_V_addr5_cast_fu_370_p1.read().is_01() || !tmp_9_trn_cast_fu_358_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(tiles_V_addr5_cast_fu_370_p1.read()) + sc_biguint<11>(tmp_9_trn_cast_fu_358_p1.read()));
}

void toplevel::thread_tiles_V_address0() {
    if (esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read())) {
        tiles_V_address0 =  (sc_lv<8>) (tmp_1_fu_380_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st12_fsm_11, ap_CS_fsm.read())) {
        tiles_V_address0 =  (sc_lv<8>) (tmp_6_fu_558_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read())) {
        tiles_V_address0 =  (sc_lv<8>) (tmp_4_fu_481_p1.read());
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        tiles_V_address0 = grp_solve_fu_239_tiles_V_address0.read();
    } else {
        tiles_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void toplevel::thread_tiles_V_address1() {
    tiles_V_address1 = grp_solve_fu_239_tiles_V_address1.read();
}

void toplevel::thread_tiles_V_ce0() {
    if (((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          !ap_sig_bdd_107.read()) || 
         esl_seteq<1,4,4>(ap_ST_st6_fsm_5, ap_CS_fsm.read()) || 
         esl_seteq<1,4,4>(ap_ST_st12_fsm_11, ap_CS_fsm.read()))) {
        tiles_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        tiles_V_ce0 = grp_solve_fu_239_tiles_V_ce0.read();
    } else {
        tiles_V_ce0 = ap_const_logic_0;
    }
}

void toplevel::thread_tiles_V_ce1() {
    if (esl_seteq<1,4,4>(ap_ST_st9_fsm_8, ap_CS_fsm.read())) {
        tiles_V_ce1 = grp_solve_fu_239_tiles_V_ce1.read();
    } else {
        tiles_V_ce1 = ap_const_logic_0;
    }
}

void toplevel::thread_tiles_V_d0() {
    tiles_V_d0 = input_V_V_dout.read().range(4-1, 0);
}

void toplevel::thread_tiles_V_we0() {
    if (((esl_seteq<1,4,4>(ap_ST_st4_fsm_3, ap_CS_fsm.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()) && 
          !ap_sig_bdd_107.read()))) {
        tiles_V_we0 = ap_const_logic_1;
    } else {
        tiles_V_we0 = ap_const_logic_0;
    }
}

void toplevel::thread_tmp_10_fu_469_p2() {
    tmp_10_fu_469_p2 = (!ap_const_lv32_2.is_01())? sc_lv<32>(): op2_assign_1_reg_193.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void toplevel::thread_tmp_11_fu_541_p1() {
    tmp_11_fu_541_p1 = t_V_4_reg_227.read().range(2-1, 0);
}

void toplevel::thread_tmp_1_fu_380_p1() {
    tmp_1_fu_380_p1 = esl_zext<64,11>(tiles_V_addr6_fu_374_p2.read());
}

void toplevel::thread_tmp_1_i_fu_399_p2() {
    tmp_1_i_fu_399_p2 = (!op2_assign_1_reg_193.read().is_01() || !tmp_i5_cast_fu_395_p1.read().is_01())? sc_lv<1>(): (sc_biguint<32>(op2_assign_1_reg_193.read()) < sc_biguint<32>(tmp_i5_cast_fu_395_p1.read()));
}

void toplevel::thread_tmp_2_fu_329_p2() {
    tmp_2_fu_329_p2 = (!tmp_cast_fu_325_p1.read().is_01() || !r_V_fu_319_p2.read().is_01())? sc_lv<1>(): (sc_biguint<16>(tmp_cast_fu_325_p1.read()) < sc_biguint<16>(r_V_fu_319_p2.read()));
}

void toplevel::thread_tmp_3_fu_305_p1() {
    tmp_3_fu_305_p1 = input_V_V_dout.read().range(8-1, 0);
}

void toplevel::thread_tmp_3_i_fu_419_p1() {
    tmp_3_i_fu_419_p1 = esl_zext<36,32>(op2_assign_1_reg_193.read());
}

void toplevel::thread_tmp_4_fu_481_p1() {
    tmp_4_fu_481_p1 = esl_sext<64,32>(tiles_V_addr4_fu_475_p2.read());
}

void toplevel::thread_tmp_4_i_fu_423_p2() {
    tmp_4_i_fu_423_p2 = (!tmp_3_i_fu_419_p1.read().is_01())? sc_lv<36>(): ap_const_lv36_1 << (unsigned short)tmp_3_i_fu_419_p1.read().to_uint();
}

void toplevel::thread_tmp_5_cast_fu_507_p1() {
    tmp_5_cast_fu_507_p1 = esl_zext<16,8>(t_V_3_reg_216.read());
}

void toplevel::thread_tmp_5_fu_550_p3() {
    tmp_5_fu_550_p3 = esl_concat<8,2>(pp_tile_V_q0.read(), r_V_5_fu_545_p2.read());
}

void toplevel::thread_tmp_5_i6_fu_429_p2() {
    tmp_5_i6_fu_429_p2 = (!ap_const_lv32_0.is_01() || !op2_assign_1_reg_193.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_0) - sc_biguint<32>(op2_assign_1_reg_193.read()));
}

void toplevel::thread_tmp_6_fu_558_p1() {
    tmp_6_fu_558_p1 = esl_zext<64,10>(tmp_5_fu_550_p3.read());
}

void toplevel::thread_tmp_7_fu_511_p2() {
    tmp_7_fu_511_p2 = (!tmp_5_cast_fu_507_p1.read().is_01() || !r_V_1_fu_501_p2.read().is_01())? sc_lv<1>(): (sc_biguint<16>(tmp_5_cast_fu_507_p1.read()) < sc_biguint<16>(r_V_1_fu_501_p2.read()));
}

void toplevel::thread_tmp_7_i8_cast_fu_441_p1() {
    tmp_7_i8_cast_fu_441_p1 = esl_zext<36,32>(tmp_7_i8_fu_435_p2.read());
}

void toplevel::thread_tmp_7_i8_fu_435_p2() {
    tmp_7_i8_fu_435_p2 = (!tmp_5_i6_fu_429_p2.read().is_01())? sc_lv<32>(): ap_const_lv32_1 >> (unsigned short)tmp_5_i6_fu_429_p2.read().to_uint();
}

void toplevel::thread_tmp_8_i1_trn_fu_465_p1() {
    tmp_8_i1_trn_fu_465_p1 = esl_zext<32,3>(e_i_reg_205.read());
}

void toplevel::thread_tmp_9_fu_411_p3() {
    tmp_9_fu_411_p3 = op2_assign_1_reg_193.read().range(31, 31);
}

void toplevel::thread_tmp_9_i1_fu_486_p1() {
    tmp_9_i1_fu_486_p1 = esl_zext<64,4>(tiles_V_q0.read());
}

void toplevel::thread_tmp_9_i_fu_293_p2() {
    tmp_9_i_fu_293_p2 = (avail_V.read() | r_V_2_fu_283_p2.read());
}

void toplevel::thread_tmp_9_trn_cast_fu_358_p1() {
    tmp_9_trn_cast_fu_358_p1 = esl_zext<11,3>(t_V_2_reg_182.read());
}

void toplevel::thread_tmp_cast_fu_325_p1() {
    tmp_cast_fu_325_p1 = esl_zext<16,8>(t_V_reg_170.read());
}

void toplevel::thread_tmp_fu_362_p3() {
    tmp_fu_362_p3 = esl_concat<8,2>(t_V_reg_170.read(), ap_const_lv2_0);
}

void toplevel::thread_tmp_i1_fu_523_p1() {
    tmp_i1_fu_523_p1 = esl_zext<64,8>(t_V_3_reg_216.read());
}

void toplevel::thread_tmp_i5_cast_fu_395_p1() {
    tmp_i5_cast_fu_395_p1 = esl_zext<32,16>(r_V_3_fu_389_p2.read());
}

void toplevel::thread_tmp_i_fu_279_p1() {
    tmp_i_fu_279_p1 = esl_zext<36,6>(op2_assign_reg_159.read());
}

void toplevel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 1 : 
            if ((!esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && !ap_sig_bdd_95.read())) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else if ((esl_seteq<1,1,1>(exitcond_i_fu_267_p2.read(), ap_const_lv1_0) && !ap_sig_bdd_95.read())) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_329_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 3 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()) && !ap_sig_bdd_107.read())) {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            } else if ((!ap_sig_bdd_107.read() && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_341_p2.read()))) {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_i_fu_399_p2.read())) {
                ap_NS_fsm = ap_ST_st6_fsm_5;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 5 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_i9_fu_453_p2.read())) {
                ap_NS_fsm = ap_ST_st7_fsm_6;
            } else {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            }
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_logic_0, grp_solve_fu_239_ap_done.read())) {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            } else {
                ap_NS_fsm = ap_ST_st9_fsm_8;
            }
            break;
        case 9 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_511_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            }
            break;
        case 10 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_529_p2.read())) {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            } else {
                ap_NS_fsm = ap_ST_st10_fsm_9;
            }
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            if (!esl_seteq<1,1,1>(output_V_V_full_n.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            } else {
                ap_NS_fsm = ap_ST_st13_fsm_12;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<4>) ("XXXX");
            break;
    }
}
void toplevel::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_V_dout\" :  \"" << input_V_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_V_V_empty_n\" :  \"" << input_V_V_empty_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_V_V_read\" :  \"" << input_V_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_V_din\" :  \"" << output_V_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_V_V_full_n\" :  \"" << output_V_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_V_V_write\" :  \"" << output_V_V_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

