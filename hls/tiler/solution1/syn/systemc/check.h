// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _check_HH_
#define _check_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "toplevel_srem_10s_10ns_10_13.h"

namespace ap_rtl {

struct check : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > p_V;
    sc_in< sc_lv<8> > side_V;
    sc_out< sc_lv<6> > pp_tile_V_address0;
    sc_out< sc_logic > pp_tile_V_ce0;
    sc_in< sc_lv<8> > pp_tile_V_q0;
    sc_out< sc_lv<6> > pp_tile_V_address1;
    sc_out< sc_logic > pp_tile_V_ce1;
    sc_in< sc_lv<8> > pp_tile_V_q1;
    sc_out< sc_lv<6> > pp_rot_V_address0;
    sc_out< sc_logic > pp_rot_V_ce0;
    sc_in< sc_lv<2> > pp_rot_V_q0;
    sc_out< sc_lv<6> > pp_rot_V_address1;
    sc_out< sc_logic > pp_rot_V_ce1;
    sc_in< sc_lv<2> > pp_rot_V_q1;
    sc_out< sc_lv<8> > tiles_V_address0;
    sc_out< sc_logic > tiles_V_ce0;
    sc_in< sc_lv<4> > tiles_V_q0;
    sc_out< sc_lv<8> > tiles_V_address1;
    sc_out< sc_logic > tiles_V_ce1;
    sc_in< sc_lv<4> > tiles_V_q1;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    check(sc_module_name name);
    SC_HAS_PROCESS(check);

    ~check();

    sc_trace_file* mVcdFile;

    toplevel_srem_10s_10ns_10_13<31,13,10,10,10>* toplevel_srem_10s_10ns_10_13_U31;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<1> > tmp_i_fu_184_p2;
    sc_signal< sc_lv<1> > tmp_i_reg_332;
    sc_signal< sc_lv<1> > tmp_28_i_fu_208_p2;
    sc_signal< sc_lv<1> > tmp_28_i_reg_346;
    sc_signal< sc_lv<1> > grp_fu_177_p2;
    sc_signal< sc_lv<1> > tmp_29_i_reg_380;
    sc_signal< sc_lv<1> > tmp_32_fu_273_p3;
    sc_signal< sc_lv<1> > tmp_32_reg_384;
    sc_signal< sc_lv<1> > tmp_s_phi_fu_162_p6;
    sc_signal< sc_lv<1> > tmp_s_reg_157;
    sc_signal< sc_lv<64> > tmp_i_i_fu_219_p1;
    sc_signal< sc_lv<64> > tmp_i2_i_fu_225_p1;
    sc_signal< sc_lv<64> > tmp_23_fu_244_p1;
    sc_signal< sc_lv<64> > tmp_25_fu_263_p1;
    sc_signal< sc_lv<64> > tmp_i_i3_fu_281_p1;
    sc_signal< sc_lv<64> > tmp_i3_i_fu_287_p1;
    sc_signal< sc_lv<64> > tmp_27_fu_306_p1;
    sc_signal< sc_lv<64> > tmp_29_fu_319_p1;
    sc_signal< sc_lv<10> > grp_fu_198_p0;
    sc_signal< sc_lv<10> > grp_fu_198_p1;
    sc_signal< sc_lv<10> > grp_fu_198_p2;
    sc_signal< sc_lv<8> > r_V_fu_204_p1;
    sc_signal< sc_lv<8> > this_assign_i_fu_214_p2;
    sc_signal< sc_lv<2> > r_V_9_fu_230_p2;
    sc_signal< sc_lv<10> > tmp_fu_236_p3;
    sc_signal< sc_lv<2> > r_V_s_fu_249_p2;
    sc_signal< sc_lv<10> > tmp_24_fu_255_p3;
    sc_signal< sc_lv<8> > up_V_fu_268_p2;
    sc_signal< sc_lv<2> > r_V_1_fu_292_p2;
    sc_signal< sc_lv<10> > tmp_26_fu_298_p3;
    sc_signal< sc_lv<10> > tmp_28_fu_311_p3;
    sc_signal< sc_logic > toplevel_srem_10s_10ns_10_13_U31_ap_start;
    sc_signal< sc_logic > grp_fu_198_ce;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_177_p2();
    void thread_grp_fu_198_ce();
    void thread_grp_fu_198_p0();
    void thread_grp_fu_198_p1();
    void thread_pp_rot_V_address0();
    void thread_pp_rot_V_address1();
    void thread_pp_rot_V_ce0();
    void thread_pp_rot_V_ce1();
    void thread_pp_tile_V_address0();
    void thread_pp_tile_V_address1();
    void thread_pp_tile_V_ce0();
    void thread_pp_tile_V_ce1();
    void thread_r_V_1_fu_292_p2();
    void thread_r_V_9_fu_230_p2();
    void thread_r_V_fu_204_p1();
    void thread_r_V_s_fu_249_p2();
    void thread_this_assign_i_fu_214_p2();
    void thread_tiles_V_address0();
    void thread_tiles_V_address1();
    void thread_tiles_V_ce0();
    void thread_tiles_V_ce1();
    void thread_tmp_23_fu_244_p1();
    void thread_tmp_24_fu_255_p3();
    void thread_tmp_25_fu_263_p1();
    void thread_tmp_26_fu_298_p3();
    void thread_tmp_27_fu_306_p1();
    void thread_tmp_28_fu_311_p3();
    void thread_tmp_28_i_fu_208_p2();
    void thread_tmp_29_fu_319_p1();
    void thread_tmp_32_fu_273_p3();
    void thread_tmp_fu_236_p3();
    void thread_tmp_i2_i_fu_225_p1();
    void thread_tmp_i3_i_fu_287_p1();
    void thread_tmp_i_fu_184_p2();
    void thread_tmp_i_i3_fu_281_p1();
    void thread_tmp_i_i_fu_219_p1();
    void thread_tmp_s_phi_fu_162_p6();
    void thread_toplevel_srem_10s_10ns_10_13_U31_ap_start();
    void thread_up_V_fu_268_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
