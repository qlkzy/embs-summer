// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _right_r_HH_
#define _right_r_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "toplevel_sdiv_9s_9ns_9_12.h"
#include "toplevel_udiv_8ns_8ns_8_11.h"

namespace ap_rtl {

struct right_r : public sc_module {
    // Port declarations 31
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > cp_V;
    sc_out< sc_lv<6> > pp_rot_V_address0;
    sc_out< sc_logic > pp_rot_V_ce0;
    sc_out< sc_logic > pp_rot_V_we0;
    sc_out< sc_lv<2> > pp_rot_V_d0;
    sc_in< sc_lv<2> > pp_rot_V_q0;
    sc_out< sc_lv<6> > pp_tile_V_address0;
    sc_out< sc_logic > pp_tile_V_ce0;
    sc_out< sc_logic > pp_tile_V_we0;
    sc_out< sc_lv<8> > pp_tile_V_d0;
    sc_in< sc_lv<8> > pp_tile_V_q0;
    sc_in< sc_lv<36> > avail_V_i;
    sc_out< sc_lv<36> > avail_V_o;
    sc_out< sc_logic > avail_V_o_ap_vld;
    sc_in< sc_lv<8> > side_V;
    sc_out< sc_lv<8> > tiles_V_address0;
    sc_out< sc_logic > tiles_V_ce0;
    sc_in< sc_lv<4> > tiles_V_q0;
    sc_out< sc_lv<4> > colours_V_address0;
    sc_out< sc_logic > colours_V_ce0;
    sc_in< sc_lv<36> > colours_V_q0;
    sc_out< sc_lv<4> > colours_V_address1;
    sc_out< sc_logic > colours_V_ce1;
    sc_in< sc_lv<36> > colours_V_q1;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    right_r(sc_module_name name);
    SC_HAS_PROCESS(right_r);

    ~right_r();

    sc_trace_file* mVcdFile;

    toplevel_sdiv_9s_9ns_9_12<10,12,9,9,9>* toplevel_sdiv_9s_9ns_9_12_U10;
    toplevel_udiv_8ns_8ns_8_11<11,11,8,8,8>* toplevel_udiv_8ns_8ns_8_11_U11;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<64> > tmp_fu_181_p1;
    sc_signal< sc_lv<64> > tmp_reg_468;
    sc_signal< sc_lv<6> > pp_rot_V_addr_reg_473;
    sc_signal< sc_lv<1> > tmp_s_fu_186_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_478;
    sc_signal< sc_lv<6> > pp_tile_V_addr_reg_482;
    sc_signal< sc_lv<8> > left_V_fu_192_p2;
    sc_signal< sc_lv<8> > left_V_reg_487;
    sc_signal< sc_lv<1> > tmp_36_reg_509;
    sc_signal< sc_lv<4> > tiles_V_load_6_reg_530;
    sc_signal< sc_lv<1> > tmp_35_reg_535;
    sc_signal< sc_lv<36> > possible_V_fu_361_p2;
    sc_signal< sc_lv<36> > possible_V_reg_571;
    sc_signal< sc_lv<36> > possible_V_4_fu_380_p3;
    sc_signal< sc_lv<36> > possible_V_4_reg_576;
    sc_signal< sc_lv<16> > r_V_7_fu_390_p2;
    sc_signal< sc_lv<16> > r_V_7_reg_581;
    sc_signal< sc_lv<36> > tmp1_fu_396_p2;
    sc_signal< sc_lv<36> > tmp1_reg_586;
    sc_signal< sc_lv<8> > t_V_fu_402_p2;
    sc_signal< sc_lv<8> > p_078_0_in_reg_145;
    sc_signal< sc_lv<1> > tmp_8_fu_438_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_413_p2;
    sc_signal< sc_lv<1> > p_s_phi_fu_158_p6;
    sc_signal< sc_lv<1> > p_s_reg_154;
    sc_signal< sc_lv<64> > tmp_i23_i_fu_231_p1;
    sc_signal< sc_lv<64> > tmp_26_fu_251_p1;
    sc_signal< sc_lv<64> > tmp_i_i_fu_289_p1;
    sc_signal< sc_lv<64> > tmp_24_fu_303_p1;
    sc_signal< sc_lv<64> > tmp_3_fu_337_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_342_p1;
    sc_signal< sc_lv<36> > tmp_9_fu_450_p2;
    sc_signal< sc_lv<2> > grp_fu_170_p2;
    sc_signal< sc_lv<9> > grp_fu_209_p0;
    sc_signal< sc_lv<9> > grp_fu_209_p1;
    sc_signal< sc_lv<8> > grp_fu_219_p0;
    sc_signal< sc_lv<8> > grp_fu_219_p1;
    sc_signal< sc_lv<8> > up_V_fu_215_p2;
    sc_signal< sc_lv<2> > r_V_3_fu_237_p2;
    sc_signal< sc_lv<10> > tmp_25_fu_243_p3;
    sc_signal< sc_lv<9> > grp_fu_209_p2;
    sc_signal< sc_lv<8> > r_V_14_fu_256_p1;
    sc_signal< sc_lv<8> > grp_fu_219_p2;
    sc_signal< sc_lv<9> > tmp_61_i_fu_268_p0;
    sc_signal< sc_lv<9> > tmp_60_i_cast_fu_264_p1;
    sc_signal< sc_lv<1> > tmp_61_i_fu_268_p2;
    sc_signal< sc_lv<8> > this_assign_i_fu_274_p3;
    sc_signal< sc_lv<10> > tmp_23_fu_295_p3;
    sc_signal< sc_lv<5> > tmp_63_i_cast_fu_308_p1;
    sc_signal< sc_lv<5> > p_i_fu_312_p3;
    sc_signal< sc_lv<5> > tmp_65_i_cast_fu_323_p1;
    sc_signal< sc_lv<5> > p_5_i_fu_326_p3;
    sc_signal< sc_lv<8> > tmp_3_fu_337_p0;
    sc_signal< sc_lv<8> > tmp_4_fu_342_p0;
    sc_signal< sc_lv<36> > tmp_2_fu_347_p1;
    sc_signal< sc_lv<36> > r_V_fu_351_p2;
    sc_signal< sc_lv<8> > r_V_7_fu_390_p0;
    sc_signal< sc_lv<16> > lhs_V_fu_387_p1;
    sc_signal< sc_lv<8> > r_V_7_fu_390_p1;
    sc_signal< sc_lv<36> > possible_V_3_fu_373_p3;
    sc_signal< sc_lv<16> > tmp_36_cast_fu_409_p1;
    sc_signal< sc_lv<36> > tmp_7_fu_418_p1;
    sc_signal< sc_lv<36> > r_V_15_fu_422_p2;
    sc_signal< sc_lv<36> > tmp2_fu_428_p2;
    sc_signal< sc_lv<36> > r_V_9_fu_433_p2;
    sc_signal< sc_lv<36> > p_4_fu_444_p2;
    sc_signal< sc_logic > toplevel_sdiv_9s_9ns_9_12_U10_ap_start;
    sc_signal< sc_logic > grp_fu_209_ce;
    sc_signal< sc_logic > toplevel_udiv_8ns_8ns_8_11_U11_ap_start;
    sc_signal< sc_logic > grp_fu_219_ce;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_406;
    sc_signal< bool > ap_sig_bdd_146;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<36> ap_const_lv36_1;
    static const sc_lv<36> ap_const_lv36_FFFFFFFFF;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<36> ap_const_lv36_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_146();
    void thread_ap_sig_bdd_406();
    void thread_avail_V_o();
    void thread_avail_V_o_ap_vld();
    void thread_colours_V_address0();
    void thread_colours_V_address1();
    void thread_colours_V_ce0();
    void thread_colours_V_ce1();
    void thread_grp_fu_170_p2();
    void thread_grp_fu_209_ce();
    void thread_grp_fu_209_p0();
    void thread_grp_fu_209_p1();
    void thread_grp_fu_219_ce();
    void thread_grp_fu_219_p0();
    void thread_grp_fu_219_p1();
    void thread_left_V_fu_192_p2();
    void thread_lhs_V_fu_387_p1();
    void thread_p_4_fu_444_p2();
    void thread_p_5_i_fu_326_p3();
    void thread_p_i_fu_312_p3();
    void thread_p_s_phi_fu_158_p6();
    void thread_possible_V_3_fu_373_p3();
    void thread_possible_V_4_fu_380_p3();
    void thread_possible_V_fu_361_p2();
    void thread_pp_rot_V_address0();
    void thread_pp_rot_V_ce0();
    void thread_pp_rot_V_d0();
    void thread_pp_rot_V_we0();
    void thread_pp_tile_V_address0();
    void thread_pp_tile_V_ce0();
    void thread_pp_tile_V_d0();
    void thread_pp_tile_V_we0();
    void thread_r_V_14_fu_256_p1();
    void thread_r_V_15_fu_422_p2();
    void thread_r_V_3_fu_237_p2();
    void thread_r_V_7_fu_390_p0();
    void thread_r_V_7_fu_390_p1();
    void thread_r_V_7_fu_390_p2();
    void thread_r_V_9_fu_433_p2();
    void thread_r_V_fu_351_p2();
    void thread_t_V_fu_402_p2();
    void thread_this_assign_i_fu_274_p3();
    void thread_tiles_V_address0();
    void thread_tiles_V_ce0();
    void thread_tmp1_fu_396_p2();
    void thread_tmp2_fu_428_p2();
    void thread_tmp_23_fu_295_p3();
    void thread_tmp_24_fu_303_p1();
    void thread_tmp_25_fu_243_p3();
    void thread_tmp_26_fu_251_p1();
    void thread_tmp_2_fu_347_p1();
    void thread_tmp_36_cast_fu_409_p1();
    void thread_tmp_3_fu_337_p0();
    void thread_tmp_3_fu_337_p1();
    void thread_tmp_4_fu_342_p0();
    void thread_tmp_4_fu_342_p1();
    void thread_tmp_60_i_cast_fu_264_p1();
    void thread_tmp_61_i_fu_268_p0();
    void thread_tmp_61_i_fu_268_p2();
    void thread_tmp_63_i_cast_fu_308_p1();
    void thread_tmp_65_i_cast_fu_323_p1();
    void thread_tmp_6_fu_413_p2();
    void thread_tmp_7_fu_418_p1();
    void thread_tmp_8_fu_438_p2();
    void thread_tmp_9_fu_450_p2();
    void thread_tmp_fu_181_p1();
    void thread_tmp_i23_i_fu_231_p1();
    void thread_tmp_i_i_fu_289_p1();
    void thread_tmp_s_fu_186_p2();
    void thread_toplevel_sdiv_9s_9ns_9_12_U10_ap_start();
    void thread_toplevel_udiv_8ns_8ns_8_11_U11_ap_start();
    void thread_up_V_fu_215_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
