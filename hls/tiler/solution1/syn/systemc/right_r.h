// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _right_r_HH_
#define _right_r_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "toplevel_sdiv_9s_9ns_9_12.h"

namespace ap_rtl {

struct right_r : public sc_module {
    // Port declarations 29
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > cp_V;
    sc_out< sc_lv<6> > pp_rot_V_address0;
    sc_out< sc_logic > pp_rot_V_ce0;
    sc_out< sc_logic > pp_rot_V_we0;
    sc_out< sc_lv<2> > pp_rot_V_d0;
    sc_in< sc_lv<2> > pp_rot_V_q0;
    sc_out< sc_lv<6> > pp_tile_V_address0;
    sc_out< sc_logic > pp_tile_V_ce0;
    sc_out< sc_logic > pp_tile_V_we0;
    sc_out< sc_lv<8> > pp_tile_V_d0;
    sc_in< sc_lv<8> > pp_tile_V_q0;
    sc_in< sc_lv<36> > avail_V_i;
    sc_out< sc_lv<36> > avail_V_o;
    sc_out< sc_logic > avail_V_o_ap_vld;
    sc_in< sc_lv<8> > side_V;
    sc_out< sc_lv<8> > tiles_V_address0;
    sc_out< sc_logic > tiles_V_ce0;
    sc_in< sc_lv<4> > tiles_V_q0;
    sc_out< sc_lv<4> > colours_V_address0;
    sc_out< sc_logic > colours_V_ce0;
    sc_in< sc_lv<36> > colours_V_q0;
    sc_in< sc_lv<8> > ntiles_V;
    sc_out< sc_lv<1> > ap_return;


    // Module declarations
    right_r(sc_module_name name);
    SC_HAS_PROCESS(right_r);

    ~right_r();

    sc_trace_file* mVcdFile;

    toplevel_sdiv_9s_9ns_9_12<11,12,9,9,9>* toplevel_sdiv_9s_9ns_9_12_U11;
    toplevel_sdiv_9s_9ns_9_12<12,12,9,9,9>* toplevel_sdiv_9s_9ns_9_12_U12;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_lv<64> > tmp_fu_199_p1;
    sc_signal< sc_lv<64> > tmp_reg_428;
    sc_signal< sc_lv<6> > pp_rot_V_addr_reg_433;
    sc_signal< sc_lv<1> > tmp_s_fu_204_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_438;
    sc_signal< sc_lv<6> > pp_tile_V_addr_reg_442;
    sc_signal< sc_lv<8> > pp_tile_V_load_reg_447;
    sc_signal< sc_lv<36> > possible_V_fu_224_p2;
    sc_signal< sc_lv<36> > possible_V_reg_452;
    sc_signal< sc_lv<8> > left_V_fu_236_p2;
    sc_signal< sc_lv<8> > left_V_reg_458;
    sc_signal< sc_lv<1> > tmp_i_fu_241_p2;
    sc_signal< sc_lv<1> > tmp_i_reg_463;
    sc_signal< sc_lv<9> > tmp_40_tr_i_fu_250_p1;
    sc_signal< sc_lv<1> > tmp_i_24_fu_277_p2;
    sc_signal< sc_lv<1> > tmp_i_24_reg_483;
    sc_signal< sc_lv<1> > tmp_26_reg_512;
    sc_signal< sc_lv<36> > agg_result_V_i1_fu_349_p3;
    sc_signal< sc_lv<36> > agg_result_V_i1_reg_537;
    sc_signal< sc_lv<36> > tmp1_fu_360_p2;
    sc_signal< sc_lv<36> > tmp1_reg_547;
    sc_signal< sc_lv<8> > t_V_fu_365_p2;
    sc_signal< sc_lv<36> > agg_result_V_i_reg_145;
    sc_signal< sc_lv<8> > p_058_0_in_reg_159;
    sc_signal< sc_lv<1> > tmp_5_fu_397_p2;
    sc_signal< sc_lv<1> > tmp_3_fu_372_p2;
    sc_signal< sc_lv<1> > p_0_phi_fu_172_p6;
    sc_signal< sc_lv<1> > p_0_reg_168;
    sc_signal< sc_lv<64> > tmp_i_i_fu_283_p1;
    sc_signal< sc_lv<64> > tmp_20_fu_296_p1;
    sc_signal< sc_lv<64> > tmp_30_i_fu_301_p1;
    sc_signal< sc_lv<64> > tmp_i_i2_fu_319_p1;
    sc_signal< sc_lv<64> > tmp_22_fu_339_p1;
    sc_signal< sc_lv<64> > tmp_i5_fu_344_p1;
    sc_signal< sc_lv<36> > tmp_6_fu_409_p2;
    sc_signal< sc_lv<2> > grp_fu_184_p2;
    sc_signal< sc_lv<36> > tmp_1_fu_210_p1;
    sc_signal< sc_lv<36> > r_V_fu_214_p2;
    sc_signal< sc_lv<9> > grp_fu_254_p0;
    sc_signal< sc_lv<9> > grp_fu_254_p1;
    sc_signal< sc_lv<9> > grp_fu_263_p0;
    sc_signal< sc_lv<9> > grp_fu_263_p1;
    sc_signal< sc_lv<9> > grp_fu_254_p2;
    sc_signal< sc_lv<9> > grp_fu_263_p2;
    sc_signal< sc_lv<8> > r_V_5_fu_269_p1;
    sc_signal< sc_lv<8> > r_V_8_fu_273_p1;
    sc_signal< sc_lv<10> > tmp_19_fu_288_p3;
    sc_signal< sc_lv<8> > up_V_fu_306_p2;
    sc_signal< sc_lv<2> > r_V_7_fu_325_p2;
    sc_signal< sc_lv<10> > tmp_21_fu_331_p3;
    sc_signal< sc_lv<36> > tmp_4_fu_377_p1;
    sc_signal< sc_lv<36> > r_V_10_fu_381_p2;
    sc_signal< sc_lv<36> > tmp2_fu_387_p2;
    sc_signal< sc_lv<36> > r_V_2_fu_392_p2;
    sc_signal< sc_lv<36> > p_s_fu_403_p2;
    sc_signal< sc_logic > toplevel_sdiv_9s_9ns_9_12_U11_ap_start;
    sc_signal< sc_logic > grp_fu_254_ce;
    sc_signal< sc_logic > toplevel_sdiv_9s_9ns_9_12_U12_ap_start;
    sc_signal< sc_logic > grp_fu_263_ce;
    sc_signal< sc_lv<1> > ap_return_preg;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_390;
    sc_signal< bool > ap_sig_bdd_157;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_st1_fsm_0;
    static const sc_lv<5> ap_ST_st2_fsm_1;
    static const sc_lv<5> ap_ST_st3_fsm_2;
    static const sc_lv<5> ap_ST_st4_fsm_3;
    static const sc_lv<5> ap_ST_st5_fsm_4;
    static const sc_lv<5> ap_ST_st6_fsm_5;
    static const sc_lv<5> ap_ST_st7_fsm_6;
    static const sc_lv<5> ap_ST_st8_fsm_7;
    static const sc_lv<5> ap_ST_st9_fsm_8;
    static const sc_lv<5> ap_ST_st10_fsm_9;
    static const sc_lv<5> ap_ST_st11_fsm_10;
    static const sc_lv<5> ap_ST_st12_fsm_11;
    static const sc_lv<5> ap_ST_st13_fsm_12;
    static const sc_lv<5> ap_ST_st14_fsm_13;
    static const sc_lv<5> ap_ST_st15_fsm_14;
    static const sc_lv<5> ap_ST_st16_fsm_15;
    static const sc_lv<5> ap_ST_st17_fsm_16;
    static const sc_lv<5> ap_ST_st18_fsm_17;
    static const sc_lv<5> ap_ST_st19_fsm_18;
    static const sc_lv<5> ap_ST_st20_fsm_19;
    static const sc_lv<5> ap_ST_st21_fsm_20;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<36> ap_const_lv36_FFFFFFFFF;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<36> ap_const_lv36_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<36> ap_const_lv36_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V_i1_fu_349_p3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_bdd_157();
    void thread_ap_sig_bdd_390();
    void thread_avail_V_o();
    void thread_avail_V_o_ap_vld();
    void thread_colours_V_address0();
    void thread_colours_V_ce0();
    void thread_grp_fu_184_p2();
    void thread_grp_fu_254_ce();
    void thread_grp_fu_254_p0();
    void thread_grp_fu_254_p1();
    void thread_grp_fu_263_ce();
    void thread_grp_fu_263_p0();
    void thread_grp_fu_263_p1();
    void thread_left_V_fu_236_p2();
    void thread_p_0_phi_fu_172_p6();
    void thread_p_s_fu_403_p2();
    void thread_possible_V_fu_224_p2();
    void thread_pp_rot_V_address0();
    void thread_pp_rot_V_ce0();
    void thread_pp_rot_V_d0();
    void thread_pp_rot_V_we0();
    void thread_pp_tile_V_address0();
    void thread_pp_tile_V_ce0();
    void thread_pp_tile_V_d0();
    void thread_pp_tile_V_we0();
    void thread_r_V_10_fu_381_p2();
    void thread_r_V_2_fu_392_p2();
    void thread_r_V_5_fu_269_p1();
    void thread_r_V_7_fu_325_p2();
    void thread_r_V_8_fu_273_p1();
    void thread_r_V_fu_214_p2();
    void thread_t_V_fu_365_p2();
    void thread_tiles_V_address0();
    void thread_tiles_V_ce0();
    void thread_tmp1_fu_360_p2();
    void thread_tmp2_fu_387_p2();
    void thread_tmp_19_fu_288_p3();
    void thread_tmp_1_fu_210_p1();
    void thread_tmp_20_fu_296_p1();
    void thread_tmp_21_fu_331_p3();
    void thread_tmp_22_fu_339_p1();
    void thread_tmp_30_i_fu_301_p1();
    void thread_tmp_3_fu_372_p2();
    void thread_tmp_40_tr_i_fu_250_p1();
    void thread_tmp_4_fu_377_p1();
    void thread_tmp_5_fu_397_p2();
    void thread_tmp_6_fu_409_p2();
    void thread_tmp_fu_199_p1();
    void thread_tmp_i5_fu_344_p1();
    void thread_tmp_i_24_fu_277_p2();
    void thread_tmp_i_fu_241_p2();
    void thread_tmp_i_i2_fu_319_p1();
    void thread_tmp_i_i_fu_283_p1();
    void thread_tmp_s_fu_204_p2();
    void thread_toplevel_sdiv_9s_9ns_9_12_U11_ap_start();
    void thread_toplevel_sdiv_9s_9ns_9_12_U12_ap_start();
    void thread_up_V_fu_306_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
