// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "check.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic check::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic check::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> check::ap_ST_st1_fsm_0 = "00000";
const sc_lv<5> check::ap_ST_st2_fsm_1 = "1";
const sc_lv<5> check::ap_ST_st3_fsm_2 = "10";
const sc_lv<5> check::ap_ST_st4_fsm_3 = "11";
const sc_lv<5> check::ap_ST_st5_fsm_4 = "100";
const sc_lv<5> check::ap_ST_st6_fsm_5 = "101";
const sc_lv<5> check::ap_ST_st7_fsm_6 = "110";
const sc_lv<5> check::ap_ST_st8_fsm_7 = "111";
const sc_lv<5> check::ap_ST_st9_fsm_8 = "1000";
const sc_lv<5> check::ap_ST_st10_fsm_9 = "1001";
const sc_lv<5> check::ap_ST_st11_fsm_10 = "1010";
const sc_lv<5> check::ap_ST_st12_fsm_11 = "1011";
const sc_lv<5> check::ap_ST_st13_fsm_12 = "1100";
const sc_lv<5> check::ap_ST_st14_fsm_13 = "1101";
const sc_lv<5> check::ap_ST_st15_fsm_14 = "1110";
const sc_lv<5> check::ap_ST_st16_fsm_15 = "1111";
const sc_lv<5> check::ap_ST_st17_fsm_16 = "10000";
const sc_lv<1> check::ap_const_lv1_0 = "0";
const sc_lv<1> check::ap_const_lv1_1 = "1";
const sc_lv<8> check::ap_const_lv8_0 = "00000000";
const sc_lv<8> check::ap_const_lv8_FF = "11111111";
const sc_lv<2> check::ap_const_lv2_1 = "1";
const sc_lv<2> check::ap_const_lv2_3 = "11";
const sc_lv<32> check::ap_const_lv32_7 = "111";
const sc_lv<2> check::ap_const_lv2_2 = "10";

check::check(sc_module_name name) : sc_module(name), mVcdFile(0) {
    toplevel_srem_10s_10ns_10_13_U31 = new toplevel_srem_10s_10ns_10_13<31,13,10,10,10>("toplevel_srem_10s_10ns_10_13_U31");
    toplevel_srem_10s_10ns_10_13_U31->clk(ap_clk);
    toplevel_srem_10s_10ns_10_13_U31->reset(ap_rst);
    toplevel_srem_10s_10ns_10_13_U31->start(toplevel_srem_10s_10ns_10_13_U31_ap_start);
    toplevel_srem_10s_10ns_10_13_U31->din0(grp_fu_198_p0);
    toplevel_srem_10s_10ns_10_13_U31->din1(grp_fu_198_p1);
    toplevel_srem_10s_10ns_10_13_U31->ce(grp_fu_198_ce);
    toplevel_srem_10s_10ns_10_13_U31->dout(grp_fu_198_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_s_phi_fu_162_p6 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_grp_fu_177_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tiles_V_q0 );
    sensitive << ( tiles_V_q1 );
    sensitive << ( tmp_i_reg_332 );
    sensitive << ( tmp_28_i_reg_346 );
    sensitive << ( tmp_29_i_reg_380 );
    sensitive << ( tmp_32_reg_384 );

    SC_METHOD(thread_grp_fu_198_ce);

    SC_METHOD(thread_grp_fu_198_p0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_V );

    SC_METHOD(thread_grp_fu_198_p1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( side_V );

    SC_METHOD(thread_pp_rot_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_i_fu_219_p1 );
    sensitive << ( tmp_i_i3_fu_281_p1 );

    SC_METHOD(thread_pp_rot_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i2_i_fu_225_p1 );
    sensitive << ( tmp_i3_i_fu_287_p1 );

    SC_METHOD(thread_pp_rot_V_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_pp_rot_V_ce1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_pp_tile_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_i_fu_219_p1 );
    sensitive << ( tmp_i_i3_fu_281_p1 );

    SC_METHOD(thread_pp_tile_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i2_i_fu_225_p1 );
    sensitive << ( tmp_i3_i_fu_287_p1 );

    SC_METHOD(thread_pp_tile_V_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_pp_tile_V_ce1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_r_V_1_fu_292_p2);
    sensitive << ( pp_rot_V_q0 );

    SC_METHOD(thread_r_V_9_fu_230_p2);
    sensitive << ( pp_rot_V_q0 );

    SC_METHOD(thread_r_V_fu_204_p1);
    sensitive << ( grp_fu_198_p2 );

    SC_METHOD(thread_r_V_s_fu_249_p2);
    sensitive << ( pp_rot_V_q1 );

    SC_METHOD(thread_this_assign_i_fu_214_p2);
    sensitive << ( p_V );

    SC_METHOD(thread_tiles_V_address0);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_23_fu_244_p1 );
    sensitive << ( tmp_27_fu_306_p1 );

    SC_METHOD(thread_tiles_V_address1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_25_fu_263_p1 );
    sensitive << ( tmp_29_fu_319_p1 );

    SC_METHOD(thread_tiles_V_ce0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_tiles_V_ce1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_tmp_23_fu_244_p1);
    sensitive << ( tmp_fu_236_p3 );

    SC_METHOD(thread_tmp_24_fu_255_p3);
    sensitive << ( pp_tile_V_q1 );
    sensitive << ( r_V_s_fu_249_p2 );

    SC_METHOD(thread_tmp_25_fu_263_p1);
    sensitive << ( tmp_24_fu_255_p3 );

    SC_METHOD(thread_tmp_26_fu_298_p3);
    sensitive << ( pp_tile_V_q0 );
    sensitive << ( r_V_1_fu_292_p2 );

    SC_METHOD(thread_tmp_27_fu_306_p1);
    sensitive << ( tmp_26_fu_298_p3 );

    SC_METHOD(thread_tmp_28_fu_311_p3);
    sensitive << ( pp_tile_V_q1 );
    sensitive << ( pp_rot_V_q1 );

    SC_METHOD(thread_tmp_28_i_fu_208_p2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( r_V_fu_204_p1 );

    SC_METHOD(thread_tmp_29_fu_319_p1);
    sensitive << ( tmp_28_fu_311_p3 );

    SC_METHOD(thread_tmp_32_fu_273_p3);
    sensitive << ( up_V_fu_268_p2 );

    SC_METHOD(thread_tmp_fu_236_p3);
    sensitive << ( pp_tile_V_q0 );
    sensitive << ( r_V_9_fu_230_p2 );

    SC_METHOD(thread_tmp_i2_i_fu_225_p1);
    sensitive << ( p_V );

    SC_METHOD(thread_tmp_i3_i_fu_287_p1);
    sensitive << ( p_V );

    SC_METHOD(thread_tmp_i_fu_184_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( p_V );

    SC_METHOD(thread_tmp_i_i3_fu_281_p1);
    sensitive << ( up_V_fu_268_p2 );

    SC_METHOD(thread_tmp_i_i_fu_219_p1);
    sensitive << ( this_assign_i_fu_214_p2 );

    SC_METHOD(thread_tmp_s_phi_fu_162_p6);
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_reg_332 );
    sensitive << ( tmp_28_i_reg_346 );
    sensitive << ( grp_fu_177_p2 );
    sensitive << ( tmp_29_i_reg_380 );
    sensitive << ( tmp_32_reg_384 );
    sensitive << ( tmp_s_reg_157 );

    SC_METHOD(thread_toplevel_srem_10s_10ns_10_13_U31_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_fu_184_p2 );

    SC_METHOD(thread_up_V_fu_268_p2);
    sensitive << ( p_V );
    sensitive << ( side_V );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_i_fu_184_p2 );
    sensitive << ( tmp_i_reg_332 );
    sensitive << ( tmp_28_i_fu_208_p2 );
    sensitive << ( tmp_28_i_reg_346 );
    sensitive << ( grp_fu_177_p2 );
    sensitive << ( tmp_32_fu_273_p3 );

    ap_CS_fsm = "00000";
    ap_return_preg = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "check_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_V, "(port)p_V");
    sc_trace(mVcdFile, side_V, "(port)side_V");
    sc_trace(mVcdFile, pp_tile_V_address0, "(port)pp_tile_V_address0");
    sc_trace(mVcdFile, pp_tile_V_ce0, "(port)pp_tile_V_ce0");
    sc_trace(mVcdFile, pp_tile_V_q0, "(port)pp_tile_V_q0");
    sc_trace(mVcdFile, pp_tile_V_address1, "(port)pp_tile_V_address1");
    sc_trace(mVcdFile, pp_tile_V_ce1, "(port)pp_tile_V_ce1");
    sc_trace(mVcdFile, pp_tile_V_q1, "(port)pp_tile_V_q1");
    sc_trace(mVcdFile, pp_rot_V_address0, "(port)pp_rot_V_address0");
    sc_trace(mVcdFile, pp_rot_V_ce0, "(port)pp_rot_V_ce0");
    sc_trace(mVcdFile, pp_rot_V_q0, "(port)pp_rot_V_q0");
    sc_trace(mVcdFile, pp_rot_V_address1, "(port)pp_rot_V_address1");
    sc_trace(mVcdFile, pp_rot_V_ce1, "(port)pp_rot_V_ce1");
    sc_trace(mVcdFile, pp_rot_V_q1, "(port)pp_rot_V_q1");
    sc_trace(mVcdFile, tiles_V_address0, "(port)tiles_V_address0");
    sc_trace(mVcdFile, tiles_V_ce0, "(port)tiles_V_ce0");
    sc_trace(mVcdFile, tiles_V_q0, "(port)tiles_V_q0");
    sc_trace(mVcdFile, tiles_V_address1, "(port)tiles_V_address1");
    sc_trace(mVcdFile, tiles_V_ce1, "(port)tiles_V_ce1");
    sc_trace(mVcdFile, tiles_V_q1, "(port)tiles_V_q1");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, tmp_i_fu_184_p2, "tmp_i_fu_184_p2");
    sc_trace(mVcdFile, tmp_i_reg_332, "tmp_i_reg_332");
    sc_trace(mVcdFile, tmp_28_i_fu_208_p2, "tmp_28_i_fu_208_p2");
    sc_trace(mVcdFile, tmp_28_i_reg_346, "tmp_28_i_reg_346");
    sc_trace(mVcdFile, grp_fu_177_p2, "grp_fu_177_p2");
    sc_trace(mVcdFile, tmp_29_i_reg_380, "tmp_29_i_reg_380");
    sc_trace(mVcdFile, tmp_32_fu_273_p3, "tmp_32_fu_273_p3");
    sc_trace(mVcdFile, tmp_32_reg_384, "tmp_32_reg_384");
    sc_trace(mVcdFile, tmp_s_phi_fu_162_p6, "tmp_s_phi_fu_162_p6");
    sc_trace(mVcdFile, tmp_s_reg_157, "tmp_s_reg_157");
    sc_trace(mVcdFile, tmp_i_i_fu_219_p1, "tmp_i_i_fu_219_p1");
    sc_trace(mVcdFile, tmp_i2_i_fu_225_p1, "tmp_i2_i_fu_225_p1");
    sc_trace(mVcdFile, tmp_23_fu_244_p1, "tmp_23_fu_244_p1");
    sc_trace(mVcdFile, tmp_25_fu_263_p1, "tmp_25_fu_263_p1");
    sc_trace(mVcdFile, tmp_i_i3_fu_281_p1, "tmp_i_i3_fu_281_p1");
    sc_trace(mVcdFile, tmp_i3_i_fu_287_p1, "tmp_i3_i_fu_287_p1");
    sc_trace(mVcdFile, tmp_27_fu_306_p1, "tmp_27_fu_306_p1");
    sc_trace(mVcdFile, tmp_29_fu_319_p1, "tmp_29_fu_319_p1");
    sc_trace(mVcdFile, grp_fu_198_p0, "grp_fu_198_p0");
    sc_trace(mVcdFile, grp_fu_198_p1, "grp_fu_198_p1");
    sc_trace(mVcdFile, grp_fu_198_p2, "grp_fu_198_p2");
    sc_trace(mVcdFile, r_V_fu_204_p1, "r_V_fu_204_p1");
    sc_trace(mVcdFile, this_assign_i_fu_214_p2, "this_assign_i_fu_214_p2");
    sc_trace(mVcdFile, r_V_9_fu_230_p2, "r_V_9_fu_230_p2");
    sc_trace(mVcdFile, tmp_fu_236_p3, "tmp_fu_236_p3");
    sc_trace(mVcdFile, r_V_s_fu_249_p2, "r_V_s_fu_249_p2");
    sc_trace(mVcdFile, tmp_24_fu_255_p3, "tmp_24_fu_255_p3");
    sc_trace(mVcdFile, up_V_fu_268_p2, "up_V_fu_268_p2");
    sc_trace(mVcdFile, r_V_1_fu_292_p2, "r_V_1_fu_292_p2");
    sc_trace(mVcdFile, tmp_26_fu_298_p3, "tmp_26_fu_298_p3");
    sc_trace(mVcdFile, tmp_28_fu_311_p3, "tmp_28_fu_311_p3");
    sc_trace(mVcdFile, toplevel_srem_10s_10ns_10_13_U31_ap_start, "toplevel_srem_10s_10ns_10_13_U31_ap_start");
    sc_trace(mVcdFile, grp_fu_198_ce, "grp_fu_198_ce");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

check::~check() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete toplevel_srem_10s_10ns_10_13_U31;
}

void check::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv1_0;
    } else {
        if (esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read())) {
            ap_return_preg = tmp_s_phi_fu_162_p6.read();
        }
    }
    if ((esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) && 
         ((!esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_273_p3.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_273_p3.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_177_p2.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_273_p3.read()))))) {
        tmp_s_reg_157 = ap_const_lv1_1;
    } else if ((esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
                ((!esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_384.read())) || 
                 (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()) && 
                  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_384.read())) || 
                 (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_384.read()) && 
                  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_29_i_reg_380.read()))))) {
        tmp_s_reg_157 = grp_fu_177_p2.read();
    } else if ((esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) && 
                esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_177_p2.read()))) {
        tmp_s_reg_157 = ap_const_lv1_0;
    }
    if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        tmp_28_i_reg_346 = tmp_28_i_fu_208_p2.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) && esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()))) {
        tmp_29_i_reg_380 = grp_fu_177_p2.read();
    }
    if ((esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()) && (!esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) || 
  !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()) || 
  !esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_177_p2.read())))) {
        tmp_32_reg_384 = up_V_fu_268_p2.read().range(7, 7);
    }
    if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_i_reg_332 = tmp_i_fu_184_p2.read();
    }
}

void check::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read())) || 
         esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void check::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void check::thread_ap_ready() {
    if (esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void check::thread_ap_return() {
    if (esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read())) {
        ap_return = tmp_s_phi_fu_162_p6.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void check::thread_grp_fu_177_p2() {
    grp_fu_177_p2 = (!tiles_V_q0.read().is_01() || !tiles_V_q1.read().is_01())? sc_lv<1>(): sc_lv<1>(tiles_V_q0.read() == tiles_V_q1.read());
}

void check::thread_grp_fu_198_ce() {
    grp_fu_198_ce = ap_const_logic_1;
}

void check::thread_grp_fu_198_p0() {
    grp_fu_198_p0 = esl_sext<10,8>(p_V.read());
}

void check::thread_grp_fu_198_p1() {
    grp_fu_198_p1 = esl_zext<10,8>(side_V.read());
}

void check::thread_pp_rot_V_address0() {
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        pp_rot_V_address0 =  (sc_lv<6>) (tmp_i_i3_fu_281_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        pp_rot_V_address0 =  (sc_lv<6>) (tmp_i_i_fu_219_p1.read());
    } else {
        pp_rot_V_address0 = "XXXXXX";
    }
}

void check::thread_pp_rot_V_address1() {
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        pp_rot_V_address1 =  (sc_lv<6>) (tmp_i3_i_fu_287_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        pp_rot_V_address1 =  (sc_lv<6>) (tmp_i2_i_fu_225_p1.read());
    } else {
        pp_rot_V_address1 = "XXXXXX";
    }
}

void check::thread_pp_rot_V_ce0() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()))) {
        pp_rot_V_ce0 = ap_const_logic_1;
    } else {
        pp_rot_V_ce0 = ap_const_logic_0;
    }
}

void check::thread_pp_rot_V_ce1() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()))) {
        pp_rot_V_ce1 = ap_const_logic_1;
    } else {
        pp_rot_V_ce1 = ap_const_logic_0;
    }
}

void check::thread_pp_tile_V_address0() {
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        pp_tile_V_address0 =  (sc_lv<6>) (tmp_i_i3_fu_281_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        pp_tile_V_address0 =  (sc_lv<6>) (tmp_i_i_fu_219_p1.read());
    } else {
        pp_tile_V_address0 = "XXXXXX";
    }
}

void check::thread_pp_tile_V_address1() {
    if (esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read())) {
        pp_tile_V_address1 =  (sc_lv<6>) (tmp_i3_i_fu_287_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read())) {
        pp_tile_V_address1 =  (sc_lv<6>) (tmp_i2_i_fu_225_p1.read());
    } else {
        pp_tile_V_address1 = "XXXXXX";
    }
}

void check::thread_pp_tile_V_ce0() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()))) {
        pp_tile_V_ce0 = ap_const_logic_1;
    } else {
        pp_tile_V_ce0 = ap_const_logic_0;
    }
}

void check::thread_pp_tile_V_ce1() {
    if ((esl_seteq<1,5,5>(ap_ST_st13_fsm_12, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st15_fsm_14, ap_CS_fsm.read()))) {
        pp_tile_V_ce1 = ap_const_logic_1;
    } else {
        pp_tile_V_ce1 = ap_const_logic_0;
    }
}

void check::thread_r_V_1_fu_292_p2() {
    r_V_1_fu_292_p2 = (pp_rot_V_q0.read() ^ ap_const_lv2_2);
}

void check::thread_r_V_9_fu_230_p2() {
    r_V_9_fu_230_p2 = (!pp_rot_V_q0.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_bigint<2>(pp_rot_V_q0.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void check::thread_r_V_fu_204_p1() {
    r_V_fu_204_p1 = grp_fu_198_p2.read().range(8-1, 0);
}

void check::thread_r_V_s_fu_249_p2() {
    r_V_s_fu_249_p2 = (!pp_rot_V_q1.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<2>(): (sc_bigint<2>(pp_rot_V_q1.read()) + sc_biguint<2>(ap_const_lv2_3));
}

void check::thread_this_assign_i_fu_214_p2() {
    this_assign_i_fu_214_p2 = (!p_V.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<8>(): (sc_bigint<8>(p_V.read()) + sc_biguint<8>(ap_const_lv8_FF));
}

void check::thread_tiles_V_address0() {
    if (esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read())) {
        tiles_V_address0 =  (sc_lv<8>) (tmp_27_fu_306_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        tiles_V_address0 =  (sc_lv<8>) (tmp_23_fu_244_p1.read());
    } else {
        tiles_V_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void check::thread_tiles_V_address1() {
    if (esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read())) {
        tiles_V_address1 =  (sc_lv<8>) (tmp_29_fu_319_p1.read());
    } else if (esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read())) {
        tiles_V_address1 =  (sc_lv<8>) (tmp_25_fu_263_p1.read());
    } else {
        tiles_V_address1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void check::thread_tiles_V_ce0() {
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()))) {
        tiles_V_ce0 = ap_const_logic_1;
    } else {
        tiles_V_ce0 = ap_const_logic_0;
    }
}

void check::thread_tiles_V_ce1() {
    if ((esl_seteq<1,5,5>(ap_ST_st14_fsm_13, ap_CS_fsm.read()) || 
         esl_seteq<1,5,5>(ap_ST_st16_fsm_15, ap_CS_fsm.read()))) {
        tiles_V_ce1 = ap_const_logic_1;
    } else {
        tiles_V_ce1 = ap_const_logic_0;
    }
}

void check::thread_tmp_23_fu_244_p1() {
    tmp_23_fu_244_p1 = esl_zext<64,10>(tmp_fu_236_p3.read());
}

void check::thread_tmp_24_fu_255_p3() {
    tmp_24_fu_255_p3 = esl_concat<8,2>(pp_tile_V_q1.read(), r_V_s_fu_249_p2.read());
}

void check::thread_tmp_25_fu_263_p1() {
    tmp_25_fu_263_p1 = esl_zext<64,10>(tmp_24_fu_255_p3.read());
}

void check::thread_tmp_26_fu_298_p3() {
    tmp_26_fu_298_p3 = esl_concat<8,2>(pp_tile_V_q0.read(), r_V_1_fu_292_p2.read());
}

void check::thread_tmp_27_fu_306_p1() {
    tmp_27_fu_306_p1 = esl_zext<64,10>(tmp_26_fu_298_p3.read());
}

void check::thread_tmp_28_fu_311_p3() {
    tmp_28_fu_311_p3 = esl_concat<8,2>(pp_tile_V_q1.read(), pp_rot_V_q1.read());
}

void check::thread_tmp_28_i_fu_208_p2() {
    tmp_28_i_fu_208_p2 = (!r_V_fu_204_p1.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(r_V_fu_204_p1.read() == ap_const_lv8_0);
}

void check::thread_tmp_29_fu_319_p1() {
    tmp_29_fu_319_p1 = esl_zext<64,10>(tmp_28_fu_311_p3.read());
}

void check::thread_tmp_32_fu_273_p3() {
    tmp_32_fu_273_p3 = up_V_fu_268_p2.read().range(7, 7);
}

void check::thread_tmp_fu_236_p3() {
    tmp_fu_236_p3 = esl_concat<8,2>(pp_tile_V_q0.read(), r_V_9_fu_230_p2.read());
}

void check::thread_tmp_i2_i_fu_225_p1() {
    tmp_i2_i_fu_225_p1 = esl_zext<64,8>(p_V.read());
}

void check::thread_tmp_i3_i_fu_287_p1() {
    tmp_i3_i_fu_287_p1 = esl_zext<64,8>(p_V.read());
}

void check::thread_tmp_i_fu_184_p2() {
    tmp_i_fu_184_p2 = (!p_V.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(p_V.read() == ap_const_lv8_0);
}

void check::thread_tmp_i_i3_fu_281_p1() {
    tmp_i_i3_fu_281_p1 = esl_zext<64,8>(up_V_fu_268_p2.read());
}

void check::thread_tmp_i_i_fu_219_p1() {
    tmp_i_i_fu_219_p1 = esl_zext<64,8>(this_assign_i_fu_214_p2.read());
}

void check::thread_tmp_s_phi_fu_162_p6() {
    if ((esl_seteq<1,5,5>(ap_ST_st17_fsm_16, ap_CS_fsm.read()) && 
         ((!esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_384.read())) || 
          (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_384.read())) || 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_reg_384.read()) && 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_29_i_reg_380.read()))))) {
        tmp_s_phi_fu_162_p6 = grp_fu_177_p2.read();
    } else {
        tmp_s_phi_fu_162_p6 = tmp_s_reg_157.read();
    }
}

void check::thread_toplevel_srem_10s_10ns_10_13_U31_ap_start() {
    if ((esl_seteq<1,5,5>(ap_ST_st1_fsm_0, ap_CS_fsm.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(tmp_i_fu_184_p2.read(), ap_const_lv1_0))) {
        toplevel_srem_10s_10ns_10_13_U31_ap_start = ap_const_logic_1;
    } else {
        toplevel_srem_10s_10ns_10_13_U31_ap_start = ap_const_logic_0;
    }
}

void check::thread_up_V_fu_268_p2() {
    up_V_fu_268_p2 = (!p_V.read().is_01() || !side_V.read().is_01())? sc_lv<8>(): (sc_bigint<8>(p_V.read()) - sc_biguint<8>(side_V.read()));
}

void check::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint()) {
        case 0 : 
            if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && !esl_seteq<1,1,1>(tmp_i_fu_184_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else if ((!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && esl_seteq<1,1,1>(tmp_i_fu_184_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 12 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_fu_208_p2.read())) {
                ap_NS_fsm = ap_ST_st15_fsm_14;
            } else {
                ap_NS_fsm = ap_ST_st14_fsm_13;
            }
            break;
        case 13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 14 : 
            if (((!esl_seteq<1,1,1>(tmp_i_reg_332.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_273_p3.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_28_i_reg_346.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_273_p3.read())) || (!esl_seteq<1,1,1>(ap_const_lv1_0, grp_fu_177_p2.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_273_p3.read())))) {
                ap_NS_fsm = ap_ST_st16_fsm_15;
            } else {
                ap_NS_fsm = ap_ST_st17_fsm_16;
            }
            break;
        case 15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}
}

