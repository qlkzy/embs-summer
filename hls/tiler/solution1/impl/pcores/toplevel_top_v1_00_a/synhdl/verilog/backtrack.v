// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backtrack (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        cp_V_i,
        cp_V_o,
        cp_V_o_ap_vld,
        pp_rot_V_address0,
        pp_rot_V_ce0,
        pp_rot_V_we0,
        pp_rot_V_d0,
        pp_rot_V_q0,
        pp_rot_V_address1,
        pp_rot_V_ce1,
        pp_rot_V_q1,
        pp_tile_V_address0,
        pp_tile_V_ce0,
        pp_tile_V_we0,
        pp_tile_V_d0,
        pp_tile_V_q0,
        pp_tile_V_address1,
        pp_tile_V_ce1,
        pp_tile_V_q1,
        avail_V_i,
        avail_V_o,
        avail_V_o_ap_vld,
        side_V,
        tiles_V_address0,
        tiles_V_ce0,
        tiles_V_q0,
        tiles_V_address1,
        tiles_V_ce1,
        tiles_V_q1,
        colours_V_address0,
        colours_V_ce0,
        colours_V_q0,
        ntiles_V,
        terminate_i,
        terminate_o,
        terminate_o_ap_vld
);

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] cp_V_i;
output  [7:0] cp_V_o;
output   cp_V_o_ap_vld;
output  [5:0] pp_rot_V_address0;
output   pp_rot_V_ce0;
output   pp_rot_V_we0;
output  [1:0] pp_rot_V_d0;
input  [1:0] pp_rot_V_q0;
output  [5:0] pp_rot_V_address1;
output   pp_rot_V_ce1;
input  [1:0] pp_rot_V_q1;
output  [5:0] pp_tile_V_address0;
output   pp_tile_V_ce0;
output   pp_tile_V_we0;
output  [7:0] pp_tile_V_d0;
input  [7:0] pp_tile_V_q0;
output  [5:0] pp_tile_V_address1;
output   pp_tile_V_ce1;
input  [7:0] pp_tile_V_q1;
input  [35:0] avail_V_i;
output  [35:0] avail_V_o;
output   avail_V_o_ap_vld;
input  [7:0] side_V;
output  [7:0] tiles_V_address0;
output   tiles_V_ce0;
input  [3:0] tiles_V_q0;
output  [7:0] tiles_V_address1;
output   tiles_V_ce1;
input  [3:0] tiles_V_q1;
output  [3:0] colours_V_address0;
output   colours_V_ce0;
input  [35:0] colours_V_q0;
input  [7:0] ntiles_V;
input  [0:0] terminate_i;
output  [0:0] terminate_o;
output   terminate_o_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] cp_V_o;
reg cp_V_o_ap_vld;
reg[5:0] pp_rot_V_address0;
reg pp_rot_V_ce0;
reg pp_rot_V_we0;
reg[5:0] pp_rot_V_address1;
reg pp_rot_V_ce1;
reg[5:0] pp_tile_V_address0;
reg pp_tile_V_ce0;
reg pp_tile_V_we0;
reg[7:0] pp_tile_V_d0;
reg[5:0] pp_tile_V_address1;
reg pp_tile_V_ce1;
reg[35:0] avail_V_o;
reg avail_V_o_ap_vld;
reg[7:0] tiles_V_address0;
reg tiles_V_ce0;
reg[7:0] tiles_V_address1;
reg tiles_V_ce1;
reg colours_V_ce0;
reg[0:0] terminate_o;
reg terminate_o_ap_vld;
reg   [4:0] ap_CS_fsm = 5'b00000;
reg   [0:0] terminate_load_reg_426;
wire    grp_right_r_fu_186_ap_done;
reg   [7:0] t_V_reg_434;
wire   [0:0] tmp_i_i_fu_236_p2;
reg   [0:0] tmp_i_i_reg_443;
wire   [0:0] or_cond_demorgan_fu_226_p2;
reg   [5:0] pp_tile_V_addr_reg_457;
wire   [0:0] tmp_28_i_i_fu_310_p2;
reg   [0:0] tmp_28_i_i_reg_465;
wire   [0:0] grp_fu_215_p2;
reg   [0:0] tmp_29_i_i_reg_499;
wire   [0:0] tmp_22_fu_370_p3;
reg   [0:0] tmp_22_reg_503;
wire    grp_right_r_fu_186_ap_start;
wire    grp_right_r_fu_186_ap_idle;
wire    grp_right_r_fu_186_ap_ready;
wire   [7:0] grp_right_r_fu_186_cp_V;
wire   [5:0] grp_right_r_fu_186_pp_rot_V_address0;
wire    grp_right_r_fu_186_pp_rot_V_ce0;
wire    grp_right_r_fu_186_pp_rot_V_we0;
wire   [1:0] grp_right_r_fu_186_pp_rot_V_d0;
wire   [1:0] grp_right_r_fu_186_pp_rot_V_q0;
wire   [5:0] grp_right_r_fu_186_pp_tile_V_address0;
wire    grp_right_r_fu_186_pp_tile_V_ce0;
wire    grp_right_r_fu_186_pp_tile_V_we0;
wire   [7:0] grp_right_r_fu_186_pp_tile_V_d0;
wire   [7:0] grp_right_r_fu_186_pp_tile_V_q0;
wire   [35:0] grp_right_r_fu_186_avail_V_i;
wire   [35:0] grp_right_r_fu_186_avail_V_o;
wire    grp_right_r_fu_186_avail_V_o_ap_vld;
wire   [7:0] grp_right_r_fu_186_side_V;
wire   [7:0] grp_right_r_fu_186_tiles_V_address0;
wire    grp_right_r_fu_186_tiles_V_ce0;
wire   [3:0] grp_right_r_fu_186_tiles_V_q0;
wire   [3:0] grp_right_r_fu_186_colours_V_address0;
wire    grp_right_r_fu_186_colours_V_ce0;
wire   [35:0] grp_right_r_fu_186_colours_V_q0;
wire   [7:0] grp_right_r_fu_186_ntiles_V;
wire   [0:0] grp_right_r_fu_186_ap_return;
reg   [0:0] tmp_i1_phi_fu_175_p6;
reg   [0:0] tmp_i1_reg_170;
reg    grp_right_r_fu_186_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_i_fu_256_p1;
wire   [63:0] tmp_i_i_i_fu_316_p1;
wire   [63:0] tmp_i2_i_i_fu_322_p1;
wire   [63:0] tmp_12_fu_341_p1;
wire   [63:0] tmp_14_fu_360_p1;
wire   [63:0] tmp_i_i3_i_fu_378_p1;
wire   [63:0] tmp_i3_i_i_fu_384_p1;
wire   [63:0] tmp_16_fu_403_p1;
wire   [63:0] tmp_18_fu_416_p1;
wire   [35:0] tmp_22_i_fu_274_p2;
wire   [7:0] grp_fu_210_p2;
wire   [0:0] tmp_20_fu_292_p3;
wire   [9:0] grp_fu_250_p0;
wire   [9:0] grp_fu_250_p1;
wire   [35:0] tmp_i_23_fu_260_p1;
wire   [35:0] r_V_fu_264_p2;
wire   [9:0] grp_fu_250_p2;
wire   [7:0] r_V_4_fu_306_p1;
wire   [1:0] r_V_9_i_fu_327_p2;
wire   [9:0] tmp_s_fu_333_p3;
wire   [1:0] r_V_10_i_fu_346_p2;
wire   [9:0] tmp_13_fu_352_p3;
wire   [7:0] up_V_fu_365_p2;
wire   [1:0] r_V_11_i_fu_389_p2;
wire   [9:0] tmp_15_fu_395_p3;
wire   [9:0] tmp_17_fu_408_p3;
reg    toplevel_srem_10s_10ns_10_13_U21_ap_start;
reg    grp_fu_250_ce;
wire   [0:0] or_cond5_demorgan_fu_421_p2;
reg   [4:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 5'b00000;
parameter    ap_ST_st2_fsm_1 = 5'b1;
parameter    ap_ST_st3_fsm_2 = 5'b10;
parameter    ap_ST_st4_fsm_3 = 5'b11;
parameter    ap_ST_st5_fsm_4 = 5'b100;
parameter    ap_ST_st6_fsm_5 = 5'b101;
parameter    ap_ST_st7_fsm_6 = 5'b110;
parameter    ap_ST_st8_fsm_7 = 5'b111;
parameter    ap_ST_st9_fsm_8 = 5'b1000;
parameter    ap_ST_st10_fsm_9 = 5'b1001;
parameter    ap_ST_st11_fsm_10 = 5'b1010;
parameter    ap_ST_st12_fsm_11 = 5'b1011;
parameter    ap_ST_st13_fsm_12 = 5'b1100;
parameter    ap_ST_st14_fsm_13 = 5'b1101;
parameter    ap_ST_st15_fsm_14 = 5'b1110;
parameter    ap_ST_st16_fsm_15 = 5'b1111;
parameter    ap_ST_st17_fsm_16 = 5'b10000;
parameter    ap_ST_st18_fsm_17 = 5'b10001;
parameter    ap_ST_st19_fsm_18 = 5'b10010;
parameter    ap_ST_st20_fsm_19 = 5'b10011;
parameter    ap_ST_st21_fsm_20 = 5'b10100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv36_1 = 36'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_true = 1'b1;


right_r grp_right_r_fu_186(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_right_r_fu_186_ap_start ),
    .ap_done( grp_right_r_fu_186_ap_done ),
    .ap_idle( grp_right_r_fu_186_ap_idle ),
    .ap_ready( grp_right_r_fu_186_ap_ready ),
    .cp_V( grp_right_r_fu_186_cp_V ),
    .pp_rot_V_address0( grp_right_r_fu_186_pp_rot_V_address0 ),
    .pp_rot_V_ce0( grp_right_r_fu_186_pp_rot_V_ce0 ),
    .pp_rot_V_we0( grp_right_r_fu_186_pp_rot_V_we0 ),
    .pp_rot_V_d0( grp_right_r_fu_186_pp_rot_V_d0 ),
    .pp_rot_V_q0( grp_right_r_fu_186_pp_rot_V_q0 ),
    .pp_tile_V_address0( grp_right_r_fu_186_pp_tile_V_address0 ),
    .pp_tile_V_ce0( grp_right_r_fu_186_pp_tile_V_ce0 ),
    .pp_tile_V_we0( grp_right_r_fu_186_pp_tile_V_we0 ),
    .pp_tile_V_d0( grp_right_r_fu_186_pp_tile_V_d0 ),
    .pp_tile_V_q0( grp_right_r_fu_186_pp_tile_V_q0 ),
    .avail_V_i( grp_right_r_fu_186_avail_V_i ),
    .avail_V_o( grp_right_r_fu_186_avail_V_o ),
    .avail_V_o_ap_vld( grp_right_r_fu_186_avail_V_o_ap_vld ),
    .side_V( grp_right_r_fu_186_side_V ),
    .tiles_V_address0( grp_right_r_fu_186_tiles_V_address0 ),
    .tiles_V_ce0( grp_right_r_fu_186_tiles_V_ce0 ),
    .tiles_V_q0( grp_right_r_fu_186_tiles_V_q0 ),
    .colours_V_address0( grp_right_r_fu_186_colours_V_address0 ),
    .colours_V_ce0( grp_right_r_fu_186_colours_V_ce0 ),
    .colours_V_q0( grp_right_r_fu_186_colours_V_q0 ),
    .ntiles_V( grp_right_r_fu_186_ntiles_V ),
    .ap_return( grp_right_r_fu_186_ap_return )
);

toplevel_srem_10s_10ns_10_13 #(
    .ID( 21 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
toplevel_srem_10s_10ns_10_13_U21(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( toplevel_srem_10s_10ns_10_13_U21_ap_start ),
    .din0( grp_fu_250_p0 ),
    .din1( grp_fu_250_p1 ),
    .ce( grp_fu_250_ce ),
    .dout( grp_fu_250_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_right_r_fu_186_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_right_r_fu_186_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_right_r_fu_186_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if ((ap_ST_st2_fsm_1 == ap_CS_fsm)) begin
            grp_right_r_fu_186_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_right_r_fu_186_ap_ready)) begin
            grp_right_r_fu_186_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & ((~(tmp_i_i_reg_443 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_22_fu_370_p3)) | (~(ap_const_lv1_0 == tmp_28_i_i_reg_465) & ~(ap_const_lv1_0 == tmp_22_fu_370_p3)) | (~(ap_const_lv1_0 == grp_fu_215_p2) & ~(ap_const_lv1_0 == tmp_22_fu_370_p3))))) begin
        tmp_i1_reg_170 <= ap_const_lv1_1;
    end else if (((ap_ST_st21_fsm_20 == ap_CS_fsm) & ((~(tmp_i_i_reg_443 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_22_reg_503)) | (~(ap_const_lv1_0 == tmp_28_i_i_reg_465) & (ap_const_lv1_0 == tmp_22_reg_503)) | ((ap_const_lv1_0 == tmp_22_reg_503) & ~(ap_const_lv1_0 == tmp_29_i_i_reg_499))))) begin
        tmp_i1_reg_170 <= grp_fu_215_p2;
    end else if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (tmp_i_i_reg_443 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_28_i_i_reg_465) & (ap_const_lv1_0 == grp_fu_215_p2))) begin
        tmp_i1_reg_170 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        pp_tile_V_addr_reg_457 <= tmp_i_fu_256_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_right_r_fu_186_ap_done))) begin
        t_V_reg_434 <= cp_V_i;
        terminate_load_reg_426 <= terminate_i;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (~(tmp_i_i_reg_443 == ap_const_lv1_0) | ~(ap_const_lv1_0 == tmp_28_i_i_reg_465) | ~(ap_const_lv1_0 == grp_fu_215_p2)))) begin
        tmp_22_reg_503 <= up_V_fu_365_p2[ap_const_lv32_7];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        tmp_28_i_i_reg_465 <= tmp_28_i_i_fu_310_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st19_fsm_18 == ap_CS_fsm) & (tmp_i_i_reg_443 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_28_i_i_reg_465))) begin
        tmp_29_i_i_reg_499 <= grp_fu_215_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_right_r_fu_186_ap_done) & ~(or_cond_demorgan_fu_226_p2 == ap_const_lv1_0))) begin
        tmp_i_i_reg_443 <= tmp_i_i_fu_236_p2;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_CS_fsm or or_cond5_demorgan_fu_421_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm)) | ((ap_ST_st21_fsm_20 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond5_demorgan_fu_421_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_CS_fsm)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_ST_st1_fsm_0 == ap_CS_fsm))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_CS_fsm or or_cond5_demorgan_fu_421_p2)
begin
    if (((ap_ST_st21_fsm_20 == ap_CS_fsm) & ~(ap_const_lv1_0 == or_cond5_demorgan_fu_421_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// avail_V_o assign process. ///
always @ (ap_CS_fsm or avail_V_i or grp_right_r_fu_186_avail_V_o or grp_right_r_fu_186_avail_V_o_ap_vld or tmp_22_i_fu_274_p2)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        avail_V_o = tmp_22_i_fu_274_p2;
    end else if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & (ap_const_logic_1 == grp_right_r_fu_186_avail_V_o_ap_vld)) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_logic_1 == grp_right_r_fu_186_avail_V_o_ap_vld)))) begin
        avail_V_o = grp_right_r_fu_186_avail_V_o;
    end else begin
        avail_V_o = avail_V_i;
    end
end

/// avail_V_o_ap_vld assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_avail_V_o_ap_vld)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        avail_V_o_ap_vld = ap_const_logic_1;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm))) begin
        avail_V_o_ap_vld = grp_right_r_fu_186_avail_V_o_ap_vld;
    end else begin
        avail_V_o_ap_vld = ap_const_logic_0;
    end
end

/// colours_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_colours_V_ce0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        colours_V_ce0 = grp_right_r_fu_186_colours_V_ce0;
    end else begin
        colours_V_ce0 = ap_const_logic_0;
    end
end

/// cp_V_o assign process. ///
always @ (ap_CS_fsm or cp_V_i or grp_fu_210_p2)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        cp_V_o = grp_fu_210_p2;
    end else begin
        cp_V_o = cp_V_i;
    end
end

/// cp_V_o_ap_vld assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        cp_V_o_ap_vld = ap_const_logic_1;
    end else begin
        cp_V_o_ap_vld = ap_const_logic_0;
    end
end

/// grp_fu_250_ce assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_ap_done or tmp_i_i_fu_236_p2 or or_cond_demorgan_fu_226_p2)
begin
    if (((ap_ST_st1_fsm_0 == ap_CS_fsm) | (ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm) | (ap_ST_st21_fsm_20 == ap_CS_fsm) | (ap_ST_st2_fsm_1 == ap_CS_fsm) | (ap_ST_st5_fsm_4 == ap_CS_fsm) | ((ap_ST_st3_fsm_2 == ap_CS_fsm) & ((ap_const_logic_0 == grp_right_r_fu_186_ap_done) | ~(~(or_cond_demorgan_fu_226_p2 == ap_const_lv1_0) & (tmp_i_i_fu_236_p2 == ap_const_lv1_0)))))) begin
        grp_fu_250_ce = ap_const_logic_0;
    end else begin
        grp_fu_250_ce = ap_const_logic_1;
    end
end

/// pp_rot_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_pp_rot_V_address0 or tmp_i_i_i_fu_316_p1 or tmp_i_i3_i_fu_378_p1)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        pp_rot_V_address0 = tmp_i_i3_i_fu_378_p1;
    end else if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        pp_rot_V_address0 = tmp_i_i_i_fu_316_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_rot_V_address0 = grp_right_r_fu_186_pp_rot_V_address0;
    end else begin
        pp_rot_V_address0 = 'bx;
    end
end

/// pp_rot_V_address1 assign process. ///
always @ (ap_CS_fsm or tmp_i2_i_i_fu_322_p1 or tmp_i3_i_i_fu_384_p1)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        pp_rot_V_address1 = tmp_i3_i_i_fu_384_p1;
    end else if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        pp_rot_V_address1 = tmp_i2_i_i_fu_322_p1;
    end else begin
        pp_rot_V_address1 = 'bx;
    end
end

/// pp_rot_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_pp_rot_V_ce0)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm))) begin
        pp_rot_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_rot_V_ce0 = grp_right_r_fu_186_pp_rot_V_ce0;
    end else begin
        pp_rot_V_ce0 = ap_const_logic_0;
    end
end

/// pp_rot_V_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm))) begin
        pp_rot_V_ce1 = ap_const_logic_1;
    end else begin
        pp_rot_V_ce1 = ap_const_logic_0;
    end
end

/// pp_rot_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_pp_rot_V_we0)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_rot_V_we0 = grp_right_r_fu_186_pp_rot_V_we0;
    end else begin
        pp_rot_V_we0 = ap_const_logic_0;
    end
end

/// pp_tile_V_address0 assign process. ///
always @ (ap_CS_fsm or pp_tile_V_addr_reg_457 or grp_right_r_fu_186_pp_tile_V_address0 or tmp_i_fu_256_p1 or tmp_i_i_i_fu_316_p1 or tmp_i3_i_i_fu_384_p1)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        pp_tile_V_address0 = pp_tile_V_addr_reg_457;
    end else if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        pp_tile_V_address0 = tmp_i3_i_i_fu_384_p1;
    end else if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        pp_tile_V_address0 = tmp_i_i_i_fu_316_p1;
    end else if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        pp_tile_V_address0 = tmp_i_fu_256_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_tile_V_address0 = grp_right_r_fu_186_pp_tile_V_address0;
    end else begin
        pp_tile_V_address0 = 'bx;
    end
end

/// pp_tile_V_address1 assign process. ///
always @ (ap_CS_fsm or tmp_i2_i_i_fu_322_p1 or tmp_i_i3_i_fu_378_p1)
begin
    if ((ap_ST_st19_fsm_18 == ap_CS_fsm)) begin
        pp_tile_V_address1 = tmp_i_i3_i_fu_378_p1;
    end else if ((ap_ST_st17_fsm_16 == ap_CS_fsm)) begin
        pp_tile_V_address1 = tmp_i2_i_i_fu_322_p1;
    end else begin
        pp_tile_V_address1 = 'bx;
    end
end

/// pp_tile_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_pp_tile_V_ce0)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) | (ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm) | (ap_ST_st5_fsm_4 == ap_CS_fsm))) begin
        pp_tile_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_tile_V_ce0 = grp_right_r_fu_186_pp_tile_V_ce0;
    end else begin
        pp_tile_V_ce0 = ap_const_logic_0;
    end
end

/// pp_tile_V_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st17_fsm_16 == ap_CS_fsm) | (ap_ST_st19_fsm_18 == ap_CS_fsm))) begin
        pp_tile_V_ce1 = ap_const_logic_1;
    end else begin
        pp_tile_V_ce1 = ap_const_logic_0;
    end
end

/// pp_tile_V_d0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_pp_tile_V_d0)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        pp_tile_V_d0 = ap_const_lv8_0;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_tile_V_d0 = grp_right_r_fu_186_pp_tile_V_d0;
    end else begin
        pp_tile_V_d0 = 'bx;
    end
end

/// pp_tile_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_pp_tile_V_we0)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        pp_tile_V_we0 = ap_const_logic_1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        pp_tile_V_we0 = grp_right_r_fu_186_pp_tile_V_we0;
    end else begin
        pp_tile_V_we0 = ap_const_logic_0;
    end
end

/// terminate_o assign process. ///
always @ (ap_CS_fsm or terminate_i or tmp_20_fu_292_p3)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_20_fu_292_p3))) begin
        terminate_o = ap_const_lv1_1;
    end else begin
        terminate_o = terminate_i;
    end
end

/// terminate_o_ap_vld assign process. ///
always @ (ap_CS_fsm or tmp_20_fu_292_p3)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_20_fu_292_p3))) begin
        terminate_o_ap_vld = ap_const_logic_1;
    end else begin
        terminate_o_ap_vld = ap_const_logic_0;
    end
end

/// tiles_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_tiles_V_address0 or tmp_12_fu_341_p1 or tmp_16_fu_403_p1)
begin
    if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
        tiles_V_address0 = tmp_16_fu_403_p1;
    end else if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tiles_V_address0 = tmp_12_fu_341_p1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        tiles_V_address0 = grp_right_r_fu_186_tiles_V_address0;
    end else begin
        tiles_V_address0 = 'bx;
    end
end

/// tiles_V_address1 assign process. ///
always @ (ap_CS_fsm or tmp_14_fu_360_p1 or tmp_18_fu_416_p1)
begin
    if ((ap_ST_st20_fsm_19 == ap_CS_fsm)) begin
        tiles_V_address1 = tmp_18_fu_416_p1;
    end else if ((ap_ST_st18_fsm_17 == ap_CS_fsm)) begin
        tiles_V_address1 = tmp_14_fu_360_p1;
    end else begin
        tiles_V_address1 = 'bx;
    end
end

/// tiles_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_tiles_V_ce0)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm))) begin
        tiles_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        tiles_V_ce0 = grp_right_r_fu_186_tiles_V_ce0;
    end else begin
        tiles_V_ce0 = ap_const_logic_0;
    end
end

/// tiles_V_ce1 assign process. ///
always @ (ap_CS_fsm)
begin
    if (((ap_ST_st18_fsm_17 == ap_CS_fsm) | (ap_ST_st20_fsm_19 == ap_CS_fsm))) begin
        tiles_V_ce1 = ap_const_logic_1;
    end else begin
        tiles_V_ce1 = ap_const_logic_0;
    end
end

/// tmp_i1_phi_fu_175_p6 assign process. ///
always @ (ap_CS_fsm or tmp_i_i_reg_443 or tmp_28_i_i_reg_465 or grp_fu_215_p2 or tmp_29_i_i_reg_499 or tmp_22_reg_503 or tmp_i1_reg_170)
begin
    if (((ap_ST_st21_fsm_20 == ap_CS_fsm) & ((~(tmp_i_i_reg_443 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_22_reg_503)) | (~(ap_const_lv1_0 == tmp_28_i_i_reg_465) & (ap_const_lv1_0 == tmp_22_reg_503)) | ((ap_const_lv1_0 == tmp_22_reg_503) & ~(ap_const_lv1_0 == tmp_29_i_i_reg_499))))) begin
        tmp_i1_phi_fu_175_p6 = grp_fu_215_p2;
    end else begin
        tmp_i1_phi_fu_175_p6 = tmp_i1_reg_170;
    end
end

/// toplevel_srem_10s_10ns_10_13_U21_ap_start assign process. ///
always @ (ap_CS_fsm or grp_right_r_fu_186_ap_done or tmp_i_i_fu_236_p2 or or_cond_demorgan_fu_226_p2)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_right_r_fu_186_ap_done) & ~(or_cond_demorgan_fu_226_p2 == ap_const_lv1_0) & (tmp_i_i_fu_236_p2 == ap_const_lv1_0))) begin
        toplevel_srem_10s_10ns_10_13_U21_ap_start = ap_const_logic_1;
    end else begin
        toplevel_srem_10s_10ns_10_13_U21_ap_start = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or grp_right_r_fu_186_ap_done or tmp_i_i_fu_236_p2 or tmp_i_i_reg_443 or or_cond_demorgan_fu_226_p2 or tmp_28_i_i_fu_310_p2 or tmp_28_i_i_reg_465 or grp_fu_215_p2 or tmp_22_fu_370_p3 or or_cond5_demorgan_fu_421_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        ap_ST_st2_fsm_1 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
        ap_ST_st3_fsm_2 : 
            if ((~(ap_const_logic_0 == grp_right_r_fu_186_ap_done) & ~(or_cond_demorgan_fu_226_p2 == ap_const_lv1_0) & ~(tmp_i_i_fu_236_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else if ((~(ap_const_logic_0 == grp_right_r_fu_186_ap_done) & ~(or_cond_demorgan_fu_226_p2 == ap_const_lv1_0) & (tmp_i_i_fu_236_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else if ((~(ap_const_logic_0 == grp_right_r_fu_186_ap_done) & (or_cond_demorgan_fu_226_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        ap_ST_st4_fsm_3 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
        ap_ST_st5_fsm_4 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
        ap_ST_st6_fsm_5 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
        ap_ST_st9_fsm_8 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
        ap_ST_st10_fsm_9 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
        ap_ST_st11_fsm_10 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
        ap_ST_st14_fsm_13 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
        ap_ST_st15_fsm_14 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
        ap_ST_st16_fsm_15 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
        ap_ST_st17_fsm_16 : 
            if (~(ap_const_lv1_0 == tmp_28_i_i_fu_310_p2)) begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end else begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end
        ap_ST_st18_fsm_17 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
        ap_ST_st19_fsm_18 : 
            if (((~(tmp_i_i_reg_443 == ap_const_lv1_0) & (ap_const_lv1_0 == tmp_22_fu_370_p3)) | (~(ap_const_lv1_0 == tmp_28_i_i_reg_465) & (ap_const_lv1_0 == tmp_22_fu_370_p3)) | (~(ap_const_lv1_0 == grp_fu_215_p2) & (ap_const_lv1_0 == tmp_22_fu_370_p3)))) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        ap_ST_st20_fsm_19 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
        ap_ST_st21_fsm_20 : 
            if (~(ap_const_lv1_0 == or_cond5_demorgan_fu_421_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end
assign colours_V_address0 = grp_right_r_fu_186_colours_V_address0;
assign grp_fu_210_p2 = (t_V_reg_434 + ap_const_lv8_FF);
assign grp_fu_215_p2 = (tiles_V_q0 == tiles_V_q1? 1'b1: 1'b0);
assign grp_fu_250_p0 = $signed(cp_V_i);
assign grp_fu_250_p1 = $unsigned(side_V);
assign grp_right_r_fu_186_ap_start = grp_right_r_fu_186_ap_start_ap_start_reg;
assign grp_right_r_fu_186_avail_V_i = avail_V_i;
assign grp_right_r_fu_186_colours_V_q0 = colours_V_q0;
assign grp_right_r_fu_186_cp_V = cp_V_i;
assign grp_right_r_fu_186_ntiles_V = ntiles_V;
assign grp_right_r_fu_186_pp_rot_V_q0 = pp_rot_V_q0;
assign grp_right_r_fu_186_pp_tile_V_q0 = pp_tile_V_q0;
assign grp_right_r_fu_186_side_V = side_V;
assign grp_right_r_fu_186_tiles_V_q0 = tiles_V_q0;
assign or_cond5_demorgan_fu_421_p2 = (tmp_i1_phi_fu_175_p6 | terminate_load_reg_426);
assign or_cond_demorgan_fu_226_p2 = (grp_right_r_fu_186_ap_return | terminate_i);
assign pp_rot_V_d0 = grp_right_r_fu_186_pp_rot_V_d0;
assign r_V_10_i_fu_346_p2 = (pp_rot_V_q1 + ap_const_lv2_3);
assign r_V_11_i_fu_389_p2 = (pp_rot_V_q0 ^ ap_const_lv2_2);
assign r_V_4_fu_306_p1 = grp_fu_250_p2[7:0];
assign r_V_9_i_fu_327_p2 = (pp_rot_V_q0 + ap_const_lv2_1);
assign r_V_fu_264_p2 = ap_const_lv36_1 << tmp_i_23_fu_260_p1;
assign tmp_12_fu_341_p1 = $unsigned(tmp_s_fu_333_p3);
assign tmp_13_fu_352_p3 = {{pp_tile_V_q1}, {r_V_10_i_fu_346_p2}};
assign tmp_14_fu_360_p1 = $unsigned(tmp_13_fu_352_p3);
assign tmp_15_fu_395_p3 = {{pp_tile_V_q1}, {r_V_11_i_fu_389_p2}};
assign tmp_16_fu_403_p1 = $unsigned(tmp_15_fu_395_p3);
assign tmp_17_fu_408_p3 = {{pp_tile_V_q0}, {pp_rot_V_q1}};
assign tmp_18_fu_416_p1 = $unsigned(tmp_17_fu_408_p3);
assign tmp_20_fu_292_p3 = grp_fu_210_p2[ap_const_lv32_7];
assign tmp_22_fu_370_p3 = up_V_fu_365_p2[ap_const_lv32_7];
assign tmp_22_i_fu_274_p2 = (avail_V_i | r_V_fu_264_p2);
assign tmp_28_i_i_fu_310_p2 = (r_V_4_fu_306_p1 == ap_const_lv8_0? 1'b1: 1'b0);
assign tmp_i2_i_i_fu_322_p1 = $unsigned(t_V_reg_434);
assign tmp_i3_i_i_fu_384_p1 = $unsigned(t_V_reg_434);
assign tmp_i_23_fu_260_p1 = $unsigned(pp_tile_V_q0);
assign tmp_i_fu_256_p1 = $signed(t_V_reg_434);
assign tmp_i_i3_i_fu_378_p1 = $unsigned(up_V_fu_365_p2);
assign tmp_i_i_fu_236_p2 = (cp_V_i == ap_const_lv8_0? 1'b1: 1'b0);
assign tmp_i_i_i_fu_316_p1 = $unsigned(grp_fu_210_p2);
assign tmp_s_fu_333_p3 = {{pp_tile_V_q0}, {r_V_9_i_fu_327_p2}};
assign up_V_fu_365_p2 = (t_V_reg_434 - side_V);


endmodule //backtrack

