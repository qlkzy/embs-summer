// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.4
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="toplevel,hls_ip_2013_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc3s500efg320-4,HLS_INPUT_CLOCK=20.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.327600,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0}" *)

module toplevel (
        ap_clk,
        ap_rst,
        input_V_V_dout,
        input_V_V_empty_n,
        input_V_V_read,
        output_V_V_din,
        output_V_V_full_n,
        output_V_V_write
);

input   ap_clk;
input   ap_rst;
input  [31:0] input_V_V_dout;
input   input_V_V_empty_n;
output   input_V_V_read;
output  [31:0] output_V_V_din;
input   output_V_V_full_n;
output   output_V_V_write;

reg input_V_V_read;
reg output_V_V_write;
reg   [7:0] cp_V = 8'b00000000;
reg   [35:0] avail_V = 36'b000000000000000000000000000000000000;
reg   [7:0] side_V = 8'b00000000;
reg   [7:0] tiles_V_address0;
reg    tiles_V_ce0;
reg    tiles_V_we0;
wire   [3:0] tiles_V_d0;
wire   [3:0] tiles_V_q0;
wire   [7:0] tiles_V_address1;
reg    tiles_V_ce1;
wire   [3:0] tiles_V_q1;
reg   [3:0] colours_V_address0;
reg    colours_V_ce0;
reg    colours_V_we0;
wire   [35:0] colours_V_d0;
wire   [35:0] colours_V_q0;
wire   [3:0] colours_V_address1;
reg    colours_V_ce1;
wire   [35:0] colours_V_q1;
reg   [5:0] pp_tile_V_address0;
reg    pp_tile_V_ce0;
reg    pp_tile_V_we0;
wire   [7:0] pp_tile_V_d0;
wire   [7:0] pp_tile_V_q0;
wire   [5:0] pp_tile_V_address1;
reg    pp_tile_V_ce1;
wire   [7:0] pp_tile_V_q1;
reg   [5:0] pp_rot_V_address0;
reg    pp_rot_V_ce0;
reg    pp_rot_V_we0;
wire   [1:0] pp_rot_V_d0;
wire   [1:0] pp_rot_V_q0;
wire   [5:0] pp_rot_V_address1;
reg    pp_rot_V_ce1;
wire   [1:0] pp_rot_V_q1;
wire   [5:0] t_fu_273_p2;
reg   [3:0] ap_CS_fsm = 4'b0000;
wire   [0:0] exitcond_i_fu_267_p2;
reg    ap_sig_bdd_95;
wire   [7:0] t_V_1_fu_335_p2;
reg   [7:0] t_V_1_reg_579;
wire   [2:0] e_V_fu_347_p2;
wire   [0:0] exitcond1_fu_341_p2;
reg    ap_sig_bdd_107;
wire   [31:0] t_1_fu_405_p2;
reg   [31:0] t_1_reg_595;
wire   [35:0] r_V_4_fu_445_p3;
reg   [35:0] r_V_4_reg_600;
wire   [0:0] tmp_1_i_fu_399_p2;
wire   [2:0] e_fu_459_p2;
reg   [2:0] e_reg_608;
wire   [0:0] exitcond_i9_fu_453_p2;
reg   [3:0] colours_V_addr_reg_618;
wire   [7:0] p_V_fu_517_p2;
reg   [7:0] p_V_reg_626;
reg   [5:0] pp_tile_V_addr_reg_631;
wire   [0:0] tmp_7_fu_511_p2;
reg   [5:0] pp_rot_V_addr_reg_636;
wire   [2:0] e_V_1_fu_535_p2;
reg   [2:0] e_V_1_reg_644;
wire   [1:0] tmp_11_fu_541_p1;
reg   [1:0] tmp_11_reg_649;
wire   [0:0] exitcond_fu_529_p2;
wire    grp_solve_fu_239_ap_start;
wire    grp_solve_fu_239_ap_done;
wire    grp_solve_fu_239_ap_idle;
wire    grp_solve_fu_239_ap_ready;
wire   [35:0] grp_solve_fu_239_avail_V_i;
wire   [35:0] grp_solve_fu_239_avail_V_o;
wire    grp_solve_fu_239_avail_V_o_ap_vld;
wire   [7:0] grp_solve_fu_239_side_V;
wire   [7:0] grp_solve_fu_239_cp_V_i;
wire   [7:0] grp_solve_fu_239_cp_V_o;
wire    grp_solve_fu_239_cp_V_o_ap_vld;
wire   [5:0] grp_solve_fu_239_pp_tile_V_address0;
wire    grp_solve_fu_239_pp_tile_V_ce0;
wire    grp_solve_fu_239_pp_tile_V_we0;
wire   [7:0] grp_solve_fu_239_pp_tile_V_d0;
wire   [7:0] grp_solve_fu_239_pp_tile_V_q0;
wire   [5:0] grp_solve_fu_239_pp_tile_V_address1;
wire    grp_solve_fu_239_pp_tile_V_ce1;
wire   [7:0] grp_solve_fu_239_pp_tile_V_q1;
wire   [5:0] grp_solve_fu_239_pp_rot_V_address0;
wire    grp_solve_fu_239_pp_rot_V_ce0;
wire    grp_solve_fu_239_pp_rot_V_we0;
wire   [1:0] grp_solve_fu_239_pp_rot_V_d0;
wire   [1:0] grp_solve_fu_239_pp_rot_V_q0;
wire   [5:0] grp_solve_fu_239_pp_rot_V_address1;
wire    grp_solve_fu_239_pp_rot_V_ce1;
wire   [1:0] grp_solve_fu_239_pp_rot_V_q1;
wire   [7:0] grp_solve_fu_239_tiles_V_address0;
wire    grp_solve_fu_239_tiles_V_ce0;
wire   [3:0] grp_solve_fu_239_tiles_V_q0;
wire   [7:0] grp_solve_fu_239_tiles_V_address1;
wire    grp_solve_fu_239_tiles_V_ce1;
wire   [3:0] grp_solve_fu_239_tiles_V_q1;
wire   [3:0] grp_solve_fu_239_colours_V_address0;
wire    grp_solve_fu_239_colours_V_ce0;
wire   [35:0] grp_solve_fu_239_colours_V_q0;
wire   [3:0] grp_solve_fu_239_colours_V_address1;
wire    grp_solve_fu_239_colours_V_ce1;
wire   [35:0] grp_solve_fu_239_colours_V_q1;
reg   [5:0] op2_assign_reg_159;
reg   [7:0] t_V_reg_170;
reg   [2:0] t_V_2_reg_182;
wire   [0:0] tmp_2_fu_329_p2;
reg   [31:0] op2_assign_1_reg_193;
reg   [2:0] e_i_reg_205;
reg   [7:0] t_V_3_reg_216;
reg   [2:0] t_V_4_reg_227;
reg    grp_solve_fu_239_ap_start_ap_start_reg = 1'b0;
wire   [63:0] tmp_1_fu_380_p1;
wire   [63:0] tmp_4_fu_481_p1;
wire   [63:0] tmp_9_i1_fu_486_p1;
wire   [63:0] tmp_i1_fu_523_p1;
wire   [63:0] tmp_6_fu_558_p1;
wire   [35:0] tmp_9_i_fu_293_p2;
wire   [7:0] tmp_3_fu_305_p1;
wire   [35:0] tmp_i_fu_279_p1;
wire   [35:0] r_V_2_fu_283_p2;
wire   [7:0] r_V_fu_319_p0;
wire   [15:0] lhs_V_fu_315_p1;
wire   [7:0] r_V_fu_319_p1;
wire   [15:0] tmp_cast_fu_325_p1;
wire   [15:0] r_V_fu_319_p2;
wire   [9:0] tmp_fu_362_p3;
wire   [10:0] tiles_V_addr5_cast_fu_370_p1;
wire   [10:0] tmp_9_trn_cast_fu_358_p1;
wire   [10:0] tiles_V_addr6_fu_374_p2;
wire   [7:0] r_V_3_fu_389_p0;
wire   [15:0] lhs_V_1_fu_385_p1;
wire   [7:0] r_V_3_fu_389_p1;
wire   [15:0] r_V_3_fu_389_p2;
wire   [31:0] tmp_i5_cast_fu_395_p1;
wire   [35:0] tmp_3_i_fu_419_p1;
wire   [31:0] tmp_5_i6_fu_429_p2;
wire   [31:0] tmp_7_i8_fu_435_p2;
wire   [0:0] tmp_9_fu_411_p3;
wire   [35:0] tmp_7_i8_cast_fu_441_p1;
wire   [35:0] tmp_4_i_fu_423_p2;
wire   [31:0] tmp_10_fu_469_p2;
wire   [31:0] tmp_8_i1_trn_fu_465_p1;
wire   [31:0] tiles_V_addr4_fu_475_p2;
wire   [7:0] r_V_1_fu_501_p0;
wire   [15:0] lhs_V_2_fu_497_p1;
wire   [7:0] r_V_1_fu_501_p1;
wire   [15:0] tmp_5_cast_fu_507_p1;
wire   [15:0] r_V_1_fu_501_p2;
wire   [1:0] r_V_5_fu_545_p2;
wire   [9:0] tmp_5_fu_550_p3;
reg   [3:0] ap_NS_fsm;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b0000;
parameter    ap_ST_st2_fsm_1 = 4'b1;
parameter    ap_ST_st3_fsm_2 = 4'b10;
parameter    ap_ST_st4_fsm_3 = 4'b11;
parameter    ap_ST_st5_fsm_4 = 4'b100;
parameter    ap_ST_st6_fsm_5 = 4'b101;
parameter    ap_ST_st7_fsm_6 = 4'b110;
parameter    ap_ST_st8_fsm_7 = 4'b111;
parameter    ap_ST_st9_fsm_8 = 4'b1000;
parameter    ap_ST_st10_fsm_9 = 4'b1001;
parameter    ap_ST_st11_fsm_10 = 4'b1010;
parameter    ap_ST_st12_fsm_11 = 4'b1011;
parameter    ap_ST_st13_fsm_12 = 4'b1100;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv6_24 = 6'b100100;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv36_1 = 36'b1;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_true = 1'b1;


toplevel_tiles_V #(
    .DataWidth( 4 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
tiles_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( tiles_V_address0 ),
    .ce0( tiles_V_ce0 ),
    .we0( tiles_V_we0 ),
    .d0( tiles_V_d0 ),
    .q0( tiles_V_q0 ),
    .address1( tiles_V_address1 ),
    .ce1( tiles_V_ce1 ),
    .q1( tiles_V_q1 )
);

toplevel_colours_V #(
    .DataWidth( 36 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
colours_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( colours_V_address0 ),
    .ce0( colours_V_ce0 ),
    .we0( colours_V_we0 ),
    .d0( colours_V_d0 ),
    .q0( colours_V_q0 ),
    .address1( colours_V_address1 ),
    .ce1( colours_V_ce1 ),
    .q1( colours_V_q1 )
);

toplevel_pp_tile_V #(
    .DataWidth( 8 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
pp_tile_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( pp_tile_V_address0 ),
    .ce0( pp_tile_V_ce0 ),
    .we0( pp_tile_V_we0 ),
    .d0( pp_tile_V_d0 ),
    .q0( pp_tile_V_q0 ),
    .address1( pp_tile_V_address1 ),
    .ce1( pp_tile_V_ce1 ),
    .q1( pp_tile_V_q1 )
);

toplevel_pp_rot_V #(
    .DataWidth( 2 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
pp_rot_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( pp_rot_V_address0 ),
    .ce0( pp_rot_V_ce0 ),
    .we0( pp_rot_V_we0 ),
    .d0( pp_rot_V_d0 ),
    .q0( pp_rot_V_q0 ),
    .address1( pp_rot_V_address1 ),
    .ce1( pp_rot_V_ce1 ),
    .q1( pp_rot_V_q1 )
);

solve grp_solve_fu_239(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_solve_fu_239_ap_start ),
    .ap_done( grp_solve_fu_239_ap_done ),
    .ap_idle( grp_solve_fu_239_ap_idle ),
    .ap_ready( grp_solve_fu_239_ap_ready ),
    .avail_V_i( grp_solve_fu_239_avail_V_i ),
    .avail_V_o( grp_solve_fu_239_avail_V_o ),
    .avail_V_o_ap_vld( grp_solve_fu_239_avail_V_o_ap_vld ),
    .side_V( grp_solve_fu_239_side_V ),
    .cp_V_i( grp_solve_fu_239_cp_V_i ),
    .cp_V_o( grp_solve_fu_239_cp_V_o ),
    .cp_V_o_ap_vld( grp_solve_fu_239_cp_V_o_ap_vld ),
    .pp_tile_V_address0( grp_solve_fu_239_pp_tile_V_address0 ),
    .pp_tile_V_ce0( grp_solve_fu_239_pp_tile_V_ce0 ),
    .pp_tile_V_we0( grp_solve_fu_239_pp_tile_V_we0 ),
    .pp_tile_V_d0( grp_solve_fu_239_pp_tile_V_d0 ),
    .pp_tile_V_q0( grp_solve_fu_239_pp_tile_V_q0 ),
    .pp_tile_V_address1( grp_solve_fu_239_pp_tile_V_address1 ),
    .pp_tile_V_ce1( grp_solve_fu_239_pp_tile_V_ce1 ),
    .pp_tile_V_q1( grp_solve_fu_239_pp_tile_V_q1 ),
    .pp_rot_V_address0( grp_solve_fu_239_pp_rot_V_address0 ),
    .pp_rot_V_ce0( grp_solve_fu_239_pp_rot_V_ce0 ),
    .pp_rot_V_we0( grp_solve_fu_239_pp_rot_V_we0 ),
    .pp_rot_V_d0( grp_solve_fu_239_pp_rot_V_d0 ),
    .pp_rot_V_q0( grp_solve_fu_239_pp_rot_V_q0 ),
    .pp_rot_V_address1( grp_solve_fu_239_pp_rot_V_address1 ),
    .pp_rot_V_ce1( grp_solve_fu_239_pp_rot_V_ce1 ),
    .pp_rot_V_q1( grp_solve_fu_239_pp_rot_V_q1 ),
    .tiles_V_address0( grp_solve_fu_239_tiles_V_address0 ),
    .tiles_V_ce0( grp_solve_fu_239_tiles_V_ce0 ),
    .tiles_V_q0( grp_solve_fu_239_tiles_V_q0 ),
    .tiles_V_address1( grp_solve_fu_239_tiles_V_address1 ),
    .tiles_V_ce1( grp_solve_fu_239_tiles_V_ce1 ),
    .tiles_V_q1( grp_solve_fu_239_tiles_V_q1 ),
    .colours_V_address0( grp_solve_fu_239_colours_V_address0 ),
    .colours_V_ce0( grp_solve_fu_239_colours_V_ce0 ),
    .colours_V_q0( grp_solve_fu_239_colours_V_q0 ),
    .colours_V_address1( grp_solve_fu_239_colours_V_address1 ),
    .colours_V_ce1( grp_solve_fu_239_colours_V_ce1 ),
    .colours_V_q1( grp_solve_fu_239_colours_V_q1 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// grp_solve_fu_239_ap_start_ap_start_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_grp_solve_fu_239_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_solve_fu_239_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_1_i_fu_399_p2))) begin
            grp_solve_fu_239_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_solve_fu_239_ap_ready)) begin
            grp_solve_fu_239_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95)) begin
        avail_V <= tmp_9_i_fu_293_p2;
    end else if ((((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_1_i_fu_399_p2) & (ap_const_logic_1 == grp_solve_fu_239_avail_V_o_ap_vld)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_1 == grp_solve_fu_239_avail_V_o_ap_vld)))) begin
        avail_V <= grp_solve_fu_239_avail_V_o;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        cp_V <= ap_const_lv8_0;
    end else if ((((ap_ST_st5_fsm_4 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_1_i_fu_399_p2) & (ap_const_logic_1 == grp_solve_fu_239_cp_V_o_ap_vld)) | ((ap_ST_st9_fsm_8 == ap_CS_fsm) & (ap_const_logic_1 == grp_solve_fu_239_cp_V_o_ap_vld)))) begin
        cp_V <= grp_solve_fu_239_cp_V_o;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_1_i_fu_399_p2))) begin
        e_i_reg_205 <= ap_const_lv3_0;
    end else if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        e_i_reg_205 <= e_reg_608;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st6_fsm_5 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_i9_fu_453_p2))) begin
        op2_assign_1_reg_193 <= t_1_reg_595;
    end else if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & (ap_const_lv1_0 == tmp_2_fu_329_p2))) begin
        op2_assign_1_reg_193 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & (exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95)) begin
        op2_assign_reg_159 <= t_fu_273_p2;
    end else if ((ap_ST_st1_fsm_0 == ap_CS_fsm)) begin
        op2_assign_reg_159 <= ap_const_lv6_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st3_fsm_2 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_2_fu_329_p2))) begin
        t_V_2_reg_182 <= ap_const_lv3_0;
    end else if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_341_p2) & ~ap_sig_bdd_107)) begin
        t_V_2_reg_182 <= e_V_fu_347_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & ~(ap_const_lv1_0 == exitcond_fu_529_p2))) begin
        t_V_3_reg_216 <= p_V_reg_626;
    end else if (((ap_ST_st9_fsm_8 == ap_CS_fsm) & ~(ap_const_logic_0 == grp_solve_fu_239_ap_done))) begin
        t_V_3_reg_216 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_7_fu_511_p2))) begin
        t_V_4_reg_227 <= ap_const_lv3_0;
    end else if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~(output_V_V_full_n == ap_const_logic_0))) begin
        t_V_4_reg_227 <= e_V_1_reg_644;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~ap_sig_bdd_107 & ~(ap_const_lv1_0 == exitcond1_fu_341_p2))) begin
        t_V_reg_170 <= t_V_1_reg_579;
    end else if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95)) begin
        t_V_reg_170 <= ap_const_lv8_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        colours_V_addr_reg_618 <= tmp_9_i1_fu_486_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        e_V_1_reg_644 <= e_V_1_fu_535_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        e_reg_608 <= e_fu_459_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st10_fsm_9 == ap_CS_fsm)) begin
        p_V_reg_626 <= p_V_fu_517_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st10_fsm_9 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_7_fu_511_p2))) begin
        pp_rot_V_addr_reg_636 <= tmp_i1_fu_523_p1;
        pp_tile_V_addr_reg_631 <= tmp_i1_fu_523_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st5_fsm_4 == ap_CS_fsm) & ~(ap_const_lv1_0 == tmp_1_i_fu_399_p2))) begin
        r_V_4_reg_600 <= r_V_4_fu_445_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95)) begin
        side_V <= tmp_3_fu_305_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st5_fsm_4 == ap_CS_fsm)) begin
        t_1_reg_595 <= t_1_fu_405_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_ST_st3_fsm_2 == ap_CS_fsm)) begin
        t_V_1_reg_579 <= t_V_1_fu_335_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_ST_st11_fsm_10 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond_fu_529_p2))) begin
        tmp_11_reg_649 <= tmp_11_fu_541_p1;
    end
end

/// colours_V_address0 assign process. ///
always @ (ap_CS_fsm or colours_V_addr_reg_618 or grp_solve_fu_239_colours_V_address0 or tmp_9_i1_fu_486_p1)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        colours_V_address0 = colours_V_addr_reg_618;
    end else if ((ap_ST_st7_fsm_6 == ap_CS_fsm)) begin
        colours_V_address0 = tmp_9_i1_fu_486_p1;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        colours_V_address0 = grp_solve_fu_239_colours_V_address0;
    end else begin
        colours_V_address0 = 'bx;
    end
end

/// colours_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_colours_V_ce0)
begin
    if (((ap_ST_st7_fsm_6 == ap_CS_fsm) | (ap_ST_st8_fsm_7 == ap_CS_fsm))) begin
        colours_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        colours_V_ce0 = grp_solve_fu_239_colours_V_ce0;
    end else begin
        colours_V_ce0 = ap_const_logic_0;
    end
end

/// colours_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_colours_V_ce1)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        colours_V_ce1 = grp_solve_fu_239_colours_V_ce1;
    end else begin
        colours_V_ce1 = ap_const_logic_0;
    end
end

/// colours_V_we0 assign process. ///
always @ (ap_CS_fsm)
begin
    if ((ap_ST_st8_fsm_7 == ap_CS_fsm)) begin
        colours_V_we0 = ap_const_logic_1;
    end else begin
        colours_V_we0 = ap_const_logic_0;
    end
end

/// input_V_V_read assign process. ///
always @ (ap_CS_fsm or exitcond_i_fu_267_p2 or ap_sig_bdd_95 or exitcond1_fu_341_p2 or ap_sig_bdd_107)
begin
    if ((((ap_ST_st2_fsm_1 == ap_CS_fsm) & ~(exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95) | ((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_341_p2) & ~ap_sig_bdd_107))) begin
        input_V_V_read = ap_const_logic_1;
    end else begin
        input_V_V_read = ap_const_logic_0;
    end
end

/// output_V_V_write assign process. ///
always @ (output_V_V_full_n or ap_CS_fsm)
begin
    if (((ap_ST_st13_fsm_12 == ap_CS_fsm) & ~(output_V_V_full_n == ap_const_logic_0))) begin
        output_V_V_write = ap_const_logic_1;
    end else begin
        output_V_V_write = ap_const_logic_0;
    end
end

/// pp_rot_V_address0 assign process. ///
always @ (ap_CS_fsm or pp_rot_V_addr_reg_636 or grp_solve_fu_239_pp_rot_V_address0)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        pp_rot_V_address0 = pp_rot_V_addr_reg_636;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_rot_V_address0 = grp_solve_fu_239_pp_rot_V_address0;
    end else begin
        pp_rot_V_address0 = 'bx;
    end
end

/// pp_rot_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_pp_rot_V_ce0)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        pp_rot_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_rot_V_ce0 = grp_solve_fu_239_pp_rot_V_ce0;
    end else begin
        pp_rot_V_ce0 = ap_const_logic_0;
    end
end

/// pp_rot_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_pp_rot_V_ce1)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_rot_V_ce1 = grp_solve_fu_239_pp_rot_V_ce1;
    end else begin
        pp_rot_V_ce1 = ap_const_logic_0;
    end
end

/// pp_rot_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_pp_rot_V_we0)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_rot_V_we0 = grp_solve_fu_239_pp_rot_V_we0;
    end else begin
        pp_rot_V_we0 = ap_const_logic_0;
    end
end

/// pp_tile_V_address0 assign process. ///
always @ (ap_CS_fsm or pp_tile_V_addr_reg_631 or grp_solve_fu_239_pp_tile_V_address0)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        pp_tile_V_address0 = pp_tile_V_addr_reg_631;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_tile_V_address0 = grp_solve_fu_239_pp_tile_V_address0;
    end else begin
        pp_tile_V_address0 = 'bx;
    end
end

/// pp_tile_V_ce0 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_pp_tile_V_ce0)
begin
    if ((ap_ST_st11_fsm_10 == ap_CS_fsm)) begin
        pp_tile_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_tile_V_ce0 = grp_solve_fu_239_pp_tile_V_ce0;
    end else begin
        pp_tile_V_ce0 = ap_const_logic_0;
    end
end

/// pp_tile_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_pp_tile_V_ce1)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_tile_V_ce1 = grp_solve_fu_239_pp_tile_V_ce1;
    end else begin
        pp_tile_V_ce1 = ap_const_logic_0;
    end
end

/// pp_tile_V_we0 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_pp_tile_V_we0)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        pp_tile_V_we0 = grp_solve_fu_239_pp_tile_V_we0;
    end else begin
        pp_tile_V_we0 = ap_const_logic_0;
    end
end

/// tiles_V_address0 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_tiles_V_address0 or tmp_1_fu_380_p1 or tmp_4_fu_481_p1 or tmp_6_fu_558_p1)
begin
    if ((ap_ST_st4_fsm_3 == ap_CS_fsm)) begin
        tiles_V_address0 = tmp_1_fu_380_p1;
    end else if ((ap_ST_st12_fsm_11 == ap_CS_fsm)) begin
        tiles_V_address0 = tmp_6_fu_558_p1;
    end else if ((ap_ST_st6_fsm_5 == ap_CS_fsm)) begin
        tiles_V_address0 = tmp_4_fu_481_p1;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        tiles_V_address0 = grp_solve_fu_239_tiles_V_address0;
    end else begin
        tiles_V_address0 = 'bx;
    end
end

/// tiles_V_ce0 assign process. ///
always @ (ap_CS_fsm or ap_sig_bdd_107 or grp_solve_fu_239_tiles_V_ce0)
begin
    if ((((ap_ST_st4_fsm_3 == ap_CS_fsm) & ~ap_sig_bdd_107) | (ap_ST_st6_fsm_5 == ap_CS_fsm) | (ap_ST_st12_fsm_11 == ap_CS_fsm))) begin
        tiles_V_ce0 = ap_const_logic_1;
    end else if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        tiles_V_ce0 = grp_solve_fu_239_tiles_V_ce0;
    end else begin
        tiles_V_ce0 = ap_const_logic_0;
    end
end

/// tiles_V_ce1 assign process. ///
always @ (ap_CS_fsm or grp_solve_fu_239_tiles_V_ce1)
begin
    if ((ap_ST_st9_fsm_8 == ap_CS_fsm)) begin
        tiles_V_ce1 = grp_solve_fu_239_tiles_V_ce1;
    end else begin
        tiles_V_ce1 = ap_const_logic_0;
    end
end

/// tiles_V_we0 assign process. ///
always @ (ap_CS_fsm or exitcond1_fu_341_p2 or ap_sig_bdd_107)
begin
    if (((ap_ST_st4_fsm_3 == ap_CS_fsm) & (ap_const_lv1_0 == exitcond1_fu_341_p2) & ~ap_sig_bdd_107)) begin
        tiles_V_we0 = ap_const_logic_1;
    end else begin
        tiles_V_we0 = ap_const_logic_0;
    end
end
always @ (output_V_V_full_n or ap_CS_fsm or exitcond_i_fu_267_p2 or ap_sig_bdd_95 or exitcond1_fu_341_p2 or ap_sig_bdd_107 or tmp_1_i_fu_399_p2 or exitcond_i9_fu_453_p2 or tmp_7_fu_511_p2 or exitcond_fu_529_p2 or grp_solve_fu_239_ap_done or tmp_2_fu_329_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
        ap_ST_st2_fsm_1 : 
            if ((~(exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else if (((exitcond_i_fu_267_p2 == ap_const_lv1_0) & ~ap_sig_bdd_95)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        ap_ST_st3_fsm_2 : 
            if ((ap_const_lv1_0 == tmp_2_fu_329_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st4_fsm_3 : 
            if (((ap_const_lv1_0 == exitcond1_fu_341_p2) & ~ap_sig_bdd_107)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else if ((~ap_sig_bdd_107 & ~(ap_const_lv1_0 == exitcond1_fu_341_p2))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        ap_ST_st5_fsm_4 : 
            if (~(ap_const_lv1_0 == tmp_1_i_fu_399_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st6_fsm_5 : 
            if ((ap_const_lv1_0 == exitcond_i9_fu_453_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        ap_ST_st7_fsm_6 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
        ap_ST_st8_fsm_7 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
        ap_ST_st9_fsm_8 : 
            if (~(ap_const_logic_0 == grp_solve_fu_239_ap_done)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        ap_ST_st10_fsm_9 : 
            if ((ap_const_lv1_0 == tmp_7_fu_511_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end
        ap_ST_st11_fsm_10 : 
            if ((ap_const_lv1_0 == exitcond_fu_529_p2)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        ap_ST_st12_fsm_11 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
        ap_ST_st13_fsm_12 : 
            if (~(output_V_V_full_n == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        default : 
            ap_NS_fsm = 'bx;
    endcase
end

/// ap_sig_bdd_107 assign process. ///
always @ (input_V_V_empty_n or exitcond1_fu_341_p2)
begin
    ap_sig_bdd_107 = ((input_V_V_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond1_fu_341_p2));
end

/// ap_sig_bdd_95 assign process. ///
always @ (input_V_V_empty_n or exitcond_i_fu_267_p2)
begin
    ap_sig_bdd_95 = ((input_V_V_empty_n == ap_const_logic_0) & ~(exitcond_i_fu_267_p2 == ap_const_lv1_0));
end
assign colours_V_address1 = grp_solve_fu_239_colours_V_address1;
assign colours_V_d0 = (colours_V_q0 | r_V_4_reg_600);
assign e_V_1_fu_535_p2 = (t_V_4_reg_227 + ap_const_lv3_1);
assign e_V_fu_347_p2 = (t_V_2_reg_182 + ap_const_lv3_1);
assign e_fu_459_p2 = (e_i_reg_205 + ap_const_lv3_1);
assign exitcond1_fu_341_p2 = (t_V_2_reg_182 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond_fu_529_p2 = (t_V_4_reg_227 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond_i9_fu_453_p2 = (e_i_reg_205 == ap_const_lv3_4? 1'b1: 1'b0);
assign exitcond_i_fu_267_p2 = (op2_assign_reg_159 == ap_const_lv6_24? 1'b1: 1'b0);
assign grp_solve_fu_239_ap_start = grp_solve_fu_239_ap_start_ap_start_reg;
assign grp_solve_fu_239_avail_V_i = avail_V;
assign grp_solve_fu_239_colours_V_q0 = colours_V_q0;
assign grp_solve_fu_239_colours_V_q1 = colours_V_q1;
assign grp_solve_fu_239_cp_V_i = cp_V;
assign grp_solve_fu_239_pp_rot_V_q0 = pp_rot_V_q0;
assign grp_solve_fu_239_pp_rot_V_q1 = pp_rot_V_q1;
assign grp_solve_fu_239_pp_tile_V_q0 = pp_tile_V_q0;
assign grp_solve_fu_239_pp_tile_V_q1 = pp_tile_V_q1;
assign grp_solve_fu_239_side_V = side_V;
assign grp_solve_fu_239_tiles_V_q0 = tiles_V_q0;
assign grp_solve_fu_239_tiles_V_q1 = tiles_V_q1;
assign lhs_V_1_fu_385_p1 = $unsigned(side_V);
assign lhs_V_2_fu_497_p1 = $unsigned(side_V);
assign lhs_V_fu_315_p1 = $unsigned(side_V);
assign output_V_V_din = $unsigned(tiles_V_q0);
assign p_V_fu_517_p2 = (t_V_3_reg_216 + ap_const_lv8_1);
assign pp_rot_V_address1 = grp_solve_fu_239_pp_rot_V_address1;
assign pp_rot_V_d0 = grp_solve_fu_239_pp_rot_V_d0;
assign pp_tile_V_address1 = grp_solve_fu_239_pp_tile_V_address1;
assign pp_tile_V_d0 = grp_solve_fu_239_pp_tile_V_d0;
assign r_V_1_fu_501_p0 = lhs_V_2_fu_497_p1;
assign r_V_1_fu_501_p1 = lhs_V_2_fu_497_p1;
assign r_V_1_fu_501_p2 = ($signed({{1'b0}, {r_V_1_fu_501_p0}}) * $signed({{1'b0}, {r_V_1_fu_501_p1}}));
assign r_V_2_fu_283_p2 = ap_const_lv36_1 << tmp_i_fu_279_p1;
assign r_V_3_fu_389_p0 = lhs_V_1_fu_385_p1;
assign r_V_3_fu_389_p1 = lhs_V_1_fu_385_p1;
assign r_V_3_fu_389_p2 = ($signed({{1'b0}, {r_V_3_fu_389_p0}}) * $signed({{1'b0}, {r_V_3_fu_389_p1}}));
assign r_V_4_fu_445_p3 = ((tmp_9_fu_411_p3)? tmp_7_i8_cast_fu_441_p1: tmp_4_i_fu_423_p2);
assign r_V_5_fu_545_p2 = (tmp_11_reg_649 + pp_rot_V_q0);
assign r_V_fu_319_p0 = lhs_V_fu_315_p1;
assign r_V_fu_319_p1 = lhs_V_fu_315_p1;
assign r_V_fu_319_p2 = ($signed({{1'b0}, {r_V_fu_319_p0}}) * $signed({{1'b0}, {r_V_fu_319_p1}}));
assign t_1_fu_405_p2 = (op2_assign_1_reg_193 + ap_const_lv32_1);
assign t_V_1_fu_335_p2 = (t_V_reg_170 + ap_const_lv8_1);
assign t_fu_273_p2 = (op2_assign_reg_159 + ap_const_lv6_1);
assign tiles_V_addr4_fu_475_p2 = (tmp_10_fu_469_p2 + tmp_8_i1_trn_fu_465_p1);
assign tiles_V_addr5_cast_fu_370_p1 = $unsigned(tmp_fu_362_p3);
assign tiles_V_addr6_fu_374_p2 = (tiles_V_addr5_cast_fu_370_p1 + tmp_9_trn_cast_fu_358_p1);
assign tiles_V_address1 = grp_solve_fu_239_tiles_V_address1;
assign tiles_V_d0 = input_V_V_dout[3:0];
assign tmp_10_fu_469_p2 = op2_assign_1_reg_193 << ap_const_lv32_2;
assign tmp_11_fu_541_p1 = t_V_4_reg_227[1:0];
assign tmp_1_fu_380_p1 = $unsigned(tiles_V_addr6_fu_374_p2);
assign tmp_1_i_fu_399_p2 = (op2_assign_1_reg_193 < tmp_i5_cast_fu_395_p1? 1'b1: 1'b0);
assign tmp_2_fu_329_p2 = (tmp_cast_fu_325_p1 < r_V_fu_319_p2? 1'b1: 1'b0);
assign tmp_3_fu_305_p1 = input_V_V_dout[7:0];
assign tmp_3_i_fu_419_p1 = $unsigned(op2_assign_1_reg_193);
assign tmp_4_fu_481_p1 = $signed(tiles_V_addr4_fu_475_p2);
assign tmp_4_i_fu_423_p2 = ap_const_lv36_1 << tmp_3_i_fu_419_p1;
assign tmp_5_cast_fu_507_p1 = $unsigned(t_V_3_reg_216);
assign tmp_5_fu_550_p3 = {{pp_tile_V_q0}, {r_V_5_fu_545_p2}};
assign tmp_5_i6_fu_429_p2 = (ap_const_lv32_0 - op2_assign_1_reg_193);
assign tmp_6_fu_558_p1 = $unsigned(tmp_5_fu_550_p3);
assign tmp_7_fu_511_p2 = (tmp_5_cast_fu_507_p1 < r_V_1_fu_501_p2? 1'b1: 1'b0);
assign tmp_7_i8_cast_fu_441_p1 = $unsigned(tmp_7_i8_fu_435_p2);
assign tmp_7_i8_fu_435_p2 = ap_const_lv32_1 >> tmp_5_i6_fu_429_p2;
assign tmp_8_i1_trn_fu_465_p1 = $unsigned(e_i_reg_205);
assign tmp_9_fu_411_p3 = op2_assign_1_reg_193[ap_const_lv32_1F];
assign tmp_9_i1_fu_486_p1 = $unsigned(tiles_V_q0);
assign tmp_9_i_fu_293_p2 = (avail_V | r_V_2_fu_283_p2);
assign tmp_9_trn_cast_fu_358_p1 = $unsigned(t_V_2_reg_182);
assign tmp_cast_fu_325_p1 = $unsigned(t_V_reg_170);
assign tmp_fu_362_p3 = {{t_V_reg_170}, {ap_const_lv2_0}};
assign tmp_i1_fu_523_p1 = $unsigned(t_V_3_reg_216);
assign tmp_i5_cast_fu_395_p1 = $unsigned(r_V_3_fu_389_p2);
assign tmp_i_fu_279_p1 = $unsigned(op2_assign_reg_159);


endmodule //toplevel

